{"0": {
    "doc": "120decibell macros",
    "title": "120decibell macros",
    "content": "# Conditional G28 (home if not already homed) [gcode_macro CG28] gcode: {% if \"x\" not in printer.toolhead.homed_axes or \"y\" not in printer.toolhead.homed_axes or \"z\" not in printer.toolhead.homed_axes %} G28 {% endif %} [gcode_macro M141] default_parameter_S: 0 default_parameter_P: 0 gcode: SET_TEMPERATURE_FAN_TARGET temperature_fan=\"chamber\" target={S} [gcode_macro G32] gcode: BED_MESH_CLEAR CG28 ; Home if not homed to get everything turned on QUAD_GANTRY_LEVEL ; Level #G28 X Y ; Home the X and Y G0 X130 Y355 Z2 F9000 ; Move to brush G0 X75 F750 ; Move across the brush G0 X130 F750 ; Move across the brush G28 Z ; Home the Z now that nozzle is clean G0 X175 Y175 Z20 F6000 ; Return to center of bed [gcode_macro PURGE_BUCKET] gcode: SAVE_GCODE_STATE NAME=PURGE G90 ; absolute G0 X75 Y355 Z2 ; go to purge bucket G1 X25 E10 F500 ; purge some filament into bucket G1 X75 E3 F500 ; purge some filament into bucket G0 X120 Y355 F750 ; move across purge brush G1 E-2 F500 ; Retract a little G1 Z3 ; Raise and return RESTORE_GCODE_STATE NAME=PURGE [gcode_macro PRINT_START] # Use PRINT_START for the slicer starting script - please customise for your slicer of choice gcode: # default_parameter_BED: 60 #target bed temperature # default_parameter_EXTRUDER: 210 #target extruder temperature SAVE_GCODE_STATE NAME=start M117 Starting warmup G1 Z20 F3000 ; move nozzle away from bed M117 Warmup M190 S{BED} ; set bed temp and wait for it reach temp M109 S{EXTRUDER|int} ; M109 heat and wait for it to reach temp G32 ; Home XYZ and do QGL BED_MESH_PROFILE LOAD=default G1 Z5 F5000 ; move head 5mm from bed surface M83 ; Make the E relative independant of other axis M117 Purging PURGE_BUCKET G1 E2 F1500 # unretract M117 Starting Print RESTORE_GCODE_STATE NAME=start [gcode_macro PRINT_END] # Use PRINT_END for the slicer ending script - please customise for your slicer of choice gcode: M400 ; wait for buffer to clear G92 E0 ; zero the extruder G1 E-10.0 F3600 ; retract filament G91 ; relative positioning G0 Z1.00 X20.0 Y20.0 F20000 ; move nozzle to remove stringing TURN_OFF_HEATERS M107 ; turn off fan G1 Z2 F3000 ; move nozzle up 2mm G90 ; absolute positioning G0 X125 Y250 F3600 ; park nozzle at rear BED_MESH_CLEAR [gcode_macro test_speed_fast] gcode: G28 X0 Y0 GET_POSITION G1 X0 Y0 F27000 G1 X350 Y350 F27000 G1 X0 Y0 F27000 G1 X350 Y350 F27000 G1 X0 Y350 F36000 G1 X350 Y0 F27000 G1 X0 Y350 F27000 G1 X350 Y0 F27000 G1 X0 Y350 F27000 G1 X0 Y0 F36000 G1 X350 Y0 F36000 G1 X350 Y350 F36000 G1 X0 Y350 F36000 G1 X0 Y0 F36000 G28 X0 Y0 GET_POSITION . ",
    "url": "/community/macros/macros/120decibell.html",
    "relUrl": "/community/macros/macros/120decibell.html"
  },"1": {
    "doc": "BigTreeTech Expansion module",
    "title": "BigTreeTech Expansion Module",
    "content": ". BigTreeTech has an expansion module that adds three Stepper motor interfaces, to the SKRv1.3 and SKR v1.4 boards. This expansion board requires the use the Expansion Headers from the SKR boards. If those slots are occupied by a display, you must use an alternate system and display type if you wish to use the Expansion headers for this module. These boards might be handy of you would like to expand the capabilities of your V1 to use additional Z motors or add PT100 sensors through the stepper SPI interfaces. Since the Expansion board utilizes the Expansion slots of the SKR, the PIN numbers you would use in your Klipper config correspond to those same pins as they interface with the motor controllers. ",
    "url": "/community/electronics/brewweasel/BTTExpansion.html#bigtreetech-expansion-module",
    "relUrl": "/community/electronics/brewweasel/BTTExpansion.html#bigtreetech-expansion-module"
  },"2": {
    "doc": "BigTreeTech Expansion module",
    "title": "UART Mode / Motor Controllers",
    "content": "In order to utilize the expansion module to control stepper motors utilizing the TMC2209 type Step Sticks, we follow a similar configuration as if we were connecting them on the SKR. Both EXP1 &amp; EXP2 slots must be connected the SKR to utilize any of the 3 controller slots. The voltage jumper must have 3.3v selected, and the Jumper pins for each step stick should be configured as in the image above. The Expansion board must also be supplied with +24v in via the DCIN header. Below is an example truncated configuration to use Expansion M1 as a stepper would use the following Pins an SKR 1.4: . [stepper_x] ## Connected to X step_pin: P3.25 dir_pin: P0.18 enable_pin: !P1.31 ... [tmc2209 stepper_x] uart_pin: P1.21 ... The following table shows the mappings for SKR 1.3 and 1.4 boards (The pin designations are the same for both boards) . ### Expansion M1 Designation | Pin ———– | — step_pin | P3.25 dir_pin | P0.18 enable_pin | P1.31 uart_pin | P1.21 . ### Expansion M2 Designation | Pin ———– | — step_pin | P3.26 dir_pin | P0.16 enable_pin | P1.23 uart_pin | P1.19 . ### Expansion M3 Designation | Pin ———– | — step_pin | P0.15 dir_pin | P0.17 enable_pin | P1.22 uart_pin | P0.28 . Note that the stallguard pin still has to be removed for proper functionality, as you would for the SKR 1.4, but also for the 1.3 as there is no jumper to disable it. ",
    "url": "/community/electronics/brewweasel/BTTExpansion.html#uart-mode--motor-controllers",
    "relUrl": "/community/electronics/brewweasel/BTTExpansion.html#uart-mode--motor-controllers"
  },"3": {
    "doc": "BigTreeTech Expansion module",
    "title": "BigTreeTech Expansion module",
    "content": " ",
    "url": "/community/electronics/brewweasel/BTTExpansion.html",
    "relUrl": "/community/electronics/brewweasel/BTTExpansion.html"
  },"4": {
    "doc": "I wish I had known",
    "title": "Introduction",
    "content": "Advice commonly given to new comers is to ask questions in discord. After reading through the docs, the BOM, the sourcing guide, and watching Nero’s videos a person normally has the basics down and discord fills in the cracks that aren’t covered or things just missed. Some things though are not obvious to ask so without months of lurking in discord and watching discussions important details may be missed. Often this information is just part of the fast paced learning the Voron community goes through as recommended practices adjust over time as a result of community learning. This guide as a result is intending to be fast summary of lessons learned that can be quickly adjusted over time. Information is meant to be sparse but searching in Discord or asking questions can fill in the gaps. The lessons are focused on the 2.4 printer, but may also apply to other printers. ",
    "url": "/community/howto/simonthecat/I_wish_I_had_known.html#introduction",
    "relUrl": "/community/howto/simonthecat/I_wish_I_had_known.html#introduction"
  },"5": {
    "doc": "I wish I had known",
    "title": "Lessons",
    "content": " ",
    "url": "/community/howto/simonthecat/I_wish_I_had_known.html#lessons",
    "relUrl": "/community/howto/simonthecat/I_wish_I_had_known.html#lessons"
  },"6": {
    "doc": "I wish I had known",
    "title": "Expensive",
    "content": ". | Bed tacos are expensive and can be avoided by not heating too fast and not tightening fasteners cold! When tightening do one screw tight, 2 firm, and last one loose or not even there. You can confirm a taco by rotating the bed 90 degrees then doing a bed mesh to see if it rotates as well. Twisted extrusions could also make a bed look tacoed. | Nozzle crashes can bend the frame | The button by the control knob is an e stop but only kills the z motors … Wire the boards together and it will be for them all | The kit from magicstudio, digmach, or mostly vendor in discord chat will likely be of good quality. In contrast most kits from China are considered suspect quality for the power supply and SSR | Important: Do not unplug or re-plug motors from MCUs without powering down the printer. Damage to MCU may result. | Do not move the the stepper motors fast by hand if they are plugged in since they act as generators | . ",
    "url": "/community/howto/simonthecat/I_wish_I_had_known.html#expensive",
    "relUrl": "/community/howto/simonthecat/I_wish_I_had_known.html#expensive"
  },"7": {
    "doc": "I wish I had known",
    "title": "Build",
    "content": ". | Sourcing guide only shows where to buy not how much to buy. Source guide has other extra tabs like optional parts and tools. | The pulley used on the z motor is a 16 tooth pulley. At a glance, it’s almost identical to the 20 tooth pulleys used elsewhere in the printer. | Z cubes should move a little | Loosen screws on gantry to d rack | While not spec most people use a PEI on spring steel attached the the bed with a magnet | Common options for magnet (don’t use entergetic) subtle design, wambam, or mcmaster | How do people hide the wires? (there is a 3d printed wire hider on thingiverse that fits the 2020 extrusion) | T nuts what are they the types and how to put them in – Nero’s video on frame has some information on them | You can tell Keenovo to not put on adhesive so that high tempt RTV can be used instead | Belt tension meter | Nero in a video mentioned that robotdigg black rails are more brittle | Misumi has economy alternatives | Spare belts are handy since local sources are often pricey | There is a printable corner tool for lining up the frame | . AfterBurner . | There is a catch on the claw in the AfterBurner that fits into a notch. If you filiment does not grip tight at all check out the diagrams in the build guide to see if this is the issue. | Hone the AferBurner filament path with a very sharp drill bit | The switchwire manual has better info on the AfterBurner | . Wiring . | Connectors for hotend and the probe could be put below the cover to help save space in the cover and make toolhead swaps faster | Wago wire nuts can help the build be more tidy | Use ptfe wiring from Remington | Only wiring on the drag chain needs to be ptfe, silicone, or etc | The heater should be 20 gauge but the others on the drag chain can be 24 gauge | . ",
    "url": "/community/howto/simonthecat/I_wish_I_had_known.html#build",
    "relUrl": "/community/howto/simonthecat/I_wish_I_had_known.html#build"
  },"8": {
    "doc": "I wish I had known",
    "title": "Things not in the sourcing guide",
    "content": ". | Dinn rails – digikey has some | Amazon has cheap SSR mounts | . ",
    "url": "/community/howto/simonthecat/I_wish_I_had_known.html#things-not-in-the-sourcing-guide",
    "relUrl": "/community/howto/simonthecat/I_wish_I_had_known.html#things-not-in-the-sourcing-guide"
  },"9": {
    "doc": "I wish I had known",
    "title": "I wish I had known",
    "content": " ",
    "url": "/community/howto/simonthecat/I_wish_I_had_known.html",
    "relUrl": "/community/howto/simonthecat/I_wish_I_had_known.html"
  },"10": {
    "doc": "Klicky Probe as Endstop with constant Z-Offset",
    "title": "Klicky Probe as Endstop with constant Z-Offset",
    "content": " ",
    "url": "/community/howto/Takuya/Klicky_Probe_AutoZ_Alternative.html",
    "relUrl": "/community/howto/Takuya/Klicky_Probe_AutoZ_Alternative.html"
  },"11": {
    "doc": "Klicky Probe as Endstop with constant Z-Offset",
    "title": "Benefits",
    "content": ". | Automatically adjusts to any buildplate material and thickness | You only need to calibrate one variable: Nozzle-to-switch offset distance, instead of Z-endstop pin and switch body and nozzle | Easy to set up | . ",
    "url": "/community/howto/Takuya/Klicky_Probe_AutoZ_Alternative.html#benefits",
    "relUrl": "/community/howto/Takuya/Klicky_Probe_AutoZ_Alternative.html#benefits"
  },"12": {
    "doc": "Klicky Probe as Endstop with constant Z-Offset",
    "title": "Drawbacks",
    "content": ". | Your Z-offset will change when you swap nozzles (unless you swap in a nozzle with identical height to the old one). This is the only time you have to recalibrate your Z-offset! | No automatic Z-offset possible. | . ",
    "url": "/community/howto/Takuya/Klicky_Probe_AutoZ_Alternative.html#drawbacks",
    "relUrl": "/community/howto/Takuya/Klicky_Probe_AutoZ_Alternative.html#drawbacks"
  },"13": {
    "doc": "Klicky Probe as Endstop with constant Z-Offset",
    "title": "How to set it up",
    "content": "In klicky-variables.cfg . | Replace the following lines: variable_z_endstop_x: 1000 variable_z_endstop_y: 1000 . with . variable_z_endstop_x: 0 variable_z_endstop_y: 0 . #### Why change variable_z_endstop_ to 0 on both axis? . # if a separate Z endstop switch is in use, # specify the coordinates of the switch here (Voron). # Set to 0 to have the probe move to center of bed . | Open your printer.cfg | Comment out or Replace in [stepper_z] endstop_pin: . with . endstop_pin: probe:z_virtual_endstop . | Comment out position_endstop | Set your probe offsets in [probe] section x_offset: 0 y_offset: 19.75 z_offset: 6.42 . | Calibrate your z-offset the old fashioned paper way. Make sure to SAVE TO PROBE and not SAVE TO ENDSTOP! | Enjoy :) | . ",
    "url": "/community/howto/Takuya/Klicky_Probe_AutoZ_Alternative.html#how-to-set-it-up",
    "relUrl": "/community/howto/Takuya/Klicky_Probe_AutoZ_Alternative.html#how-to-set-it-up"
  },"14": {
    "doc": "Klicky Probe as Endstop with constant Z-Offset",
    "title": "Important Notes &amp; Tips",
    "content": "Always test your freshly-set-up Z-offset on the outer edges of your print surface. If anything goes wrong, you will only scratch the edge and not the middle. What if I swap my nozzle? . If you install a nozzle that is longer than your old one, you need to decrease your [probe] z_offset. If your new nozzle is shorter than the old one, you need to increase the z_offset. If it´s the same length, you can reuse the current value. ",
    "url": "/community/howto/Takuya/Klicky_Probe_AutoZ_Alternative.html#important-notes--tips",
    "relUrl": "/community/howto/Takuya/Klicky_Probe_AutoZ_Alternative.html#important-notes--tips"
  },"15": {
    "doc": "MAX31865 PT100 Guide",
    "title": "MAX31865 PT100 Guide",
    "content": " ",
    "url": "/community/electronics/xbst_/PT100.html",
    "relUrl": "/community/electronics/xbst_/PT100.html"
  },"16": {
    "doc": "MAX31865 PT100 Guide",
    "title": "Parts",
    "content": ". | PT100 Sensor | MAX31865 Board | Depending on your config, Dupont Jumper Cables | . PT100 Sensor Options . Many 3D printer part manufacturers (like E3D or Trianglelab) sell 2-wire PT100 sensors in the v6 thermistor form factor. You can use these options on most of the hotends we recommend including the v6, Dragon, Dragonfly, Mosquito/Spider, and more. 3-wire PT100 sensors are also an option. The advantage with this option is theoretically more accurate readings and reduced fluctuation caused by electrical noise on the readings. These are harder to source, but they can still be found in v6 form factor on Aliexpress. These will require a different configuration of the jumpers on your MAX31865 boards. MAX31865 Board Options . The easiest to use option is Ray’s PT100 stick. It slots into a stepstick slot on your SKR board, and the PT100 is connected via the stepper motor connector. This also eliminates the need for jumper cables, so the setup is cleaner, and more reliable (SPI bus doesn’t like traveling on wires) This option is slightly more expensive then Adafruit/Clone/CJMCU option and it is harder to source, but it can be found on Aliexpress, or can be ordered from a PCB manufacturer by providing them the gerbers. Another option is using an Adafruit/Clone/CJMCU MAX31865 module. These can be found on Adafruit’s website, Aliexpress and many other online stores. The primary difference between the Adafruit/Clone and CJMCU modules is the size (CJMCU is smaller) and the order of the pins. ",
    "url": "/community/electronics/xbst_/PT100.html#parts",
    "relUrl": "/community/electronics/xbst_/PT100.html#parts"
  },"17": {
    "doc": "MAX31865 PT100 Guide",
    "title": "Step 1: Jumping Pads",
    "content": "This step requires soldering. You need to bridge some pads to configure your MAX31865 board to work with your PT100 sensor. The pads to jump are marked with red rectangles and traces to cut are marked with a red “x”. 2-Wire PT100 Sensors . | PT100 Stick | Adafruit/Clone | CJMCU | . | The PT100 stick now comes pre-configured to work with 2-wire PT100 sensors. You can skip this step. | | | . 3-Wire PT100 Sensors . | PT100 Stick | Adafruit/Clone | CJMCU | . | | | | . 4-Wire PT100 Sensors . | PT100 Stick | Adafruit/Clone | CJMCU | . | | This module comes pre-configured to work with 4-wire PT100 sensors. You can skip this step. | This module comes pre-configured to work with 4-wire PT100 sensors. You can skip this step. | . ",
    "url": "/community/electronics/xbst_/PT100.html#step-1-jumping-pads",
    "relUrl": "/community/electronics/xbst_/PT100.html#step-1-jumping-pads"
  },"18": {
    "doc": "MAX31865 PT100 Guide",
    "title": "Step 2: Soldering Headers/Terminals",
    "content": "This step is self explanatory. Solder the headers and the screw terminals (only on Adafruit/Clone/CJMCU) on your board. ",
    "url": "/community/electronics/xbst_/PT100.html#step-2-soldering-headersterminals",
    "relUrl": "/community/electronics/xbst_/PT100.html#step-2-soldering-headersterminals"
  },"19": {
    "doc": "MAX31865 PT100 Guide",
    "title": "Step 3: Jumpers on SKR",
    "content": "Remove the jumpers marked with green and add jumpers marked with blue. SKR v1.3 . SKR v1.4 . ",
    "url": "/community/electronics/xbst_/PT100.html#step-3-jumpers-on-skr",
    "relUrl": "/community/electronics/xbst_/PT100.html#step-3-jumpers-on-skr"
  },"20": {
    "doc": "MAX31865 PT100 Guide",
    "title": "Step 4: Wiring",
    "content": "PT100 Stick . Insert your PT100 stick to the E1 stepper driver slot. Pay attention to the orientation. The “EN” pin is marked on the PT100 stick, and it should match the “EN” pin on your board. Adafruit/Clone . Connect the SPI pins to the E1 Stepstick Slot: . Connect VIN (not 3V3) and GND to free 3V3 and GND pins available on your SKR board. Here is a recommendation: . CJMCU . Connect the SPI pins to the E1 Stepstick Slot: . Connect VIN (not 3V3) and GND to free 3V3 and GND pins available on your SKR board. Here is a recommendation: . ",
    "url": "/community/electronics/xbst_/PT100.html#step-4-wiring",
    "relUrl": "/community/electronics/xbst_/PT100.html#step-4-wiring"
  },"21": {
    "doc": "MAX31865 PT100 Guide",
    "title": "Step 5: Wiring PT100",
    "content": ". | For PT100 Stick: Connect to the E1 stepper connector. | For Adafruit/Clone/CJMCU: Connect to the screw terminals. | . For 3-Wire sensors, the side you wire 2 wires is the side with the jumped pads marked with 3-wire . ",
    "url": "/community/electronics/xbst_/PT100.html#step-5-wiring-pt100",
    "relUrl": "/community/electronics/xbst_/PT100.html#step-5-wiring-pt100"
  },"22": {
    "doc": "MAX31865 PT100 Guide",
    "title": "Step 6: Klipper Configuration",
    "content": ". | SSH into your rPi and edit your printer.cfg file using nano. | Remove any old thermistor configuration under [extruder]. (sensor_type, sensor_pin, etc.) | Under [extruder] add these lines: | . | SKR v1.3 | SKR v1.4 | . | sensor_type: MAX31865sensor_pin: P1.1spi_speed: 4000000spi_software_sclk_pin: P0.4spi_software_mosi_pin: P4.28spi_software_miso_pin: P0.5rtd_nominal_r: 100rtd_reference_r: 430 | sensor_type: MAX31865sensor_pin: P1.1spi_speed: 4000000spi_software_sclk_pin: P0.4spi_software_mosi_pin: P1.17spi_software_miso_pin: P0.5rtd_nominal_r: 100rtd_reference_r: 430 | . | Add this line &amp; edit it for the pt100 sensor you used: rtd_num_of_wires: 2 . | If you are in EU or any 50 Hz country add this line: rtd_use_50Hz_filter: True . | Save your changes by typing CTRL+X, Y, [ENTER]. Send FIRMWARE_RESTART from the console in Octoprint and test! It should work. | Run PID tuning. PT100 readings will be different from your previous thermistor. For the best thermal accuracy, follow this to PID tune: . 1. Heat your bed to 100C. 2. Move your hothend to the center and 5-10 mm above bed 3. Set fans to 25%: \"M106 S64\" 4. Run: \"PID_CALIBRATE HEATER=extruder TARGET=245\" 5. This will run for a few minutes. When finished, save with: \"SAVE_CONFIG\" . | . ",
    "url": "/community/electronics/xbst_/PT100.html#step-6-klipper-configuration",
    "relUrl": "/community/electronics/xbst_/PT100.html#step-6-klipper-configuration"
  },"23": {
    "doc": "MAX31865 PT100 Guide",
    "title": "Troubleshooting",
    "content": ". | ADC_OUT_OF_RANGE . | If you never get a reading; check your wiring. | If you get this error after some time; first try adding a capacitor (explained below), if it doesn’t help, try shielded wires or a 3-wire sensor. | . | Under &amp; Over Voltage . | Possibly a wiring issue, check wiring, replace with thicker wires if possible. | Possibly a software SPI issue, try using a Pi MCU (explained below) for troubleshooting. | Possibly electrical noise issue, try adding a capacitor (explained below). | If nothing helps, try shielded wires or a 3-wire sensor. | . | RTD_INPUT_DISCONNECTED . | Wiring issue, check your wires. | . | . Adding a capacitor . All modules in this guide have a 100 nF capacitor on the RTD input, per MAX31865 spec sheet. This is usually enough, but if there is too much electrical noise, adding another capacitor can help filter the noise and prevent reading errors. Add a 100-500 nF capacitor between the - and + RTD wires. Here is an example on the Adafruit board: . Pi MCU . This is not recommended as a permanent solution, but it can be used for troubleshooting. | Enable Pi MCU . | Wire according to this diagram: . | Add at the top of printer.cfg: . [mcu pi] serial: /tmp/klipper_host_mcu . | Replace the MAX31865 lines with these: (change the 50hz filter and wire count according to your setup) . sensor_type: MAX31865 sensor_pin: pi:gpio22 rtd_nominal_r: 100 rtd_reference_r: 430 rtd_num_of_wires: 2 rtd_use_50Hz_filter: True . | Do a FIRMWARE_RESTART and test. | . ",
    "url": "/community/electronics/xbst_/PT100.html#troubleshooting",
    "relUrl": "/community/electronics/xbst_/PT100.html#troubleshooting"
  },"24": {
    "doc": "Trident Gantry Wires",
    "title": "Trident Gantry Wires",
    "content": "This chart only includes what goes into the cable chains to the gantry. It does NOT include exhaust fan, filament runout sensor, or other non-essential wiring. Lengths . | Chain | 250x250x250 | 300x300x250 | 350x350x250 | . | X (Toolhead) | 190cm | 200cm | 210cm | . | Y (Endstop Pod) | 160cm | 165cm | 170cm | . | Z (Bed) | 100cm | 100cm | 100cm | . Wire Counts . | Chain | Signal | 24AWG | 20 AWG | . | X | Hot End Heater |   | 2 | . | X | Thermistor | 2 |   | . | X | Extruder Motor | 4 |   | . | X | Inductive Probe | 3 |   | . | X | Hot End Fan | 2 |   | . | X | Part Fan | 2 |   | . | Y | X Endstop | 2 |   | . | Y | Y Endstop | 2 |   | . | Z | Ground |   | 1 | . | Z | Bed Heater |   | 2 | . | Z | Bed Thermistor | 2 |   | . | Z | Z Endstop | 2 |   | . ",
    "url": "/build/electrical/Trident_gantry_wires.html",
    "relUrl": "/build/electrical/Trident_gantry_wires.html"
  },"25": {
    "doc": "V1 Gantry Wires",
    "title": "V1 Gantry Wires",
    "content": "This chart only includes what goes into the cable chains to the gantry. It does NOT include exhaust fan, filament runout sensor, or wiring of anything at or below the bed. Lengths . | Chain | 250^3 | 300^3 | . | X (Toolhead) | 155cm | 165cm | . | Z (Bed) | 60cm | 60cm | . Wire Counts . | Chain | Signal | 24AWG | 20 AWG | . | X | Hot End Heater |   | 2 | . | X | Thermistor | 2 |   | . | X | Extruder Motor | 4 |   | . | X | Inductive Probe | 3 |   | . | X | Hot End Fan | 2 |   | . | X | Part Fan | 2 |   | . | X | X Endstop | 2 |   | . | - | Y Endstop | 2 |   | . ",
    "url": "/build/electrical/V1_gantry_wires.html",
    "relUrl": "/build/electrical/V1_gantry_wires.html"
  },"26": {
    "doc": "V2 Gantry Wires",
    "title": "V2 Gantry Wires",
    "content": "This chart only includes what goes into the cable chains to the gantry. It does NOT include exhaust fan, filament runout sensor, or wiring of anything at or below the bed. Lengths . | Chain | 250^3 | 300^3 | 350^3 | . | X (Toolhead) | 270cm | 285cm | 300cm | . | Y (Endstop pod) | 205cm | 215cm | 225cm | . | Z (AB Motors) | 150cm | 155cm | 160cm | . Wire Counts . | Chain | Signal | 24AWG | 20 AWG | . | X | Hot End Heater |   | 2 | . | X | Thermistor | 2 |   | . | X | Extruder Motor | 4 |   | . | X | Inductive Probe | 3 |   | . | X | Hot End Fan | 2 |   | . | X | Part Fan | 2 |   | . | Y | X Endstop | 2 |   | . | Y | Y Endstop | 2 |   | . | Z | A Motor | 4 |   | . | Z | B Motor | 4 |   | . ",
    "url": "/build/electrical/V2_gantry_wires.html",
    "relUrl": "/build/electrical/V2_gantry_wires.html"
  },"27": {
    "doc": "Voron V2 / Trident - MKS Makerbase Monster8 Wiring",
    "title": "Voron V2 / Trident - MKS Makerbase Monster8 Wiring",
    "content": " ",
    "url": "/community/electronics/Deuce/Voron2_Monster8_v1.0_Config.html",
    "relUrl": "/community/electronics/Deuce/Voron2_Monster8_v1.0_Config.html"
  },"28": {
    "doc": "Voron V2 / Trident - MKS Makerbase Monster8 Wiring",
    "title": "Initial Preparation",
    "content": "Set jumpers as shown: . | Green – Add Jumper | Red – Remove Jumper . | Insert only the jumper in the Green and remove all other jumpers in the Red in order to use TMC2209 UART mode. | Remove all the jumpers of DIAG to avoid the influence of TMC2209 DIAG on the endstop. | Set the USB-PWR jumper to off to avoid the interaction between the USB 5V of raspberry pi and the DC-DC 5V of the motherboard. | Set the six jumpers to VIN to set the fan voltage to the system supply voltage. | Set the jumper to VIN to set the probe voltage to the system supply voltage. | Set the two jumpers into I2C to enable the I2C output pins. | Set the jumper to 5V to set the driver power. | . | . ",
    "url": "/community/electronics/Deuce/Voron2_Monster8_v1.0_Config.html#initial-preparation",
    "relUrl": "/community/electronics/Deuce/Voron2_Monster8_v1.0_Config.html#initial-preparation"
  },"29": {
    "doc": "Voron V2 / Trident - MKS Makerbase Monster8 Wiring",
    "title": "Wiring",
    "content": ". | Connect 24V and GND (V+ and V-) from the PSU to POWER (marking on rear of board) | Connect the B Motor (gantry left) to Driver0 | Connect the A Motor (gantry right) to Driver1 | Connect the Z motor (front-left) to Driver2-2 (leaving an empty connector between A and Z) | Connect the Z1 motor to Driver3 | Connect the Z2 motor to Driver4 | Connect the Z3 motor to Driver5 (v2 only) | Connect the extruder motor to Driver7 (leaving an empty connector between Z3 and E) | Connect the hot end heater to HE0 | Connect the bed SSR (DC Control Side) to H-BED (marking on rear of board) | Connect the hot end fan to FAN0 | Connect the part cooling fan to FAN1 | Connect the chamber exhaust fan to FAN2 | Connect the controller fans to HE1 | Connect the hot end thermistor to TH0 | Connect the bed thermistor to TB | Connect the X endstop to X+ | Connect the Y endstop to Y+ | Connect the Z endstop to Z- | Connect the probe with BAT85 to Z+ | if using a mini12864 display, connect to EXP1 &amp; EXP2, only after completing the steps shown below | . ",
    "url": "/community/electronics/Deuce/Voron2_Monster8_v1.0_Config.html#wiring",
    "relUrl": "/community/electronics/Deuce/Voron2_Monster8_v1.0_Config.html#wiring"
  },"30": {
    "doc": "Voron V2 / Trident - MKS Makerbase Monster8 Wiring",
    "title": "mini 12864 Display",
    "content": ". | See the mini12864 guide | . ",
    "url": "/community/electronics/Deuce/Voron2_Monster8_v1.0_Config.html#mini-12864-display",
    "relUrl": "/community/electronics/Deuce/Voron2_Monster8_v1.0_Config.html#mini-12864-display"
  },"31": {
    "doc": "Voron V2 / Trident - MKS Makerbase Monster8 Wiring",
    "title": "Other",
    "content": ". | example config is located here | full pinout, and other MKS Makerbase documentation is located here | Monster8 v1.0_003 pinout is located here | DIN rail mount for Monster8 is located here | Display bracket for MKS mini12864 V3.0 is located here | . ",
    "url": "/community/electronics/Deuce/Voron2_Monster8_v1.0_Config.html#other",
    "relUrl": "/community/electronics/Deuce/Voron2_Monster8_v1.0_Config.html#other"
  },"32": {
    "doc": "About Voron",
    "title": "About Voron",
    "content": "The original goal of the VORON project, back in 2015, was to create a no-compromise 3D printer that was fun to assemble and a joy to use. It had to be quiet, clean, pretty, and continue to operate 24 hours a day without requiring constant fiddling. In short a true home micro-manufacturing machine without a hefty price tag. It took over a year in development, with every part being redesigned, stress tested and optimized. Shortly after the release a vibrant community formed around the project and continues to grow today. This community is part of what makes VORON such a special experience. What was once a one-person operation has grown into a small tight-knit group of engineers united under a common design ethos. We’re dedicated to creating production-quality printers you can assemble in your kitchen. It’s this passion and dedication that drive us to push the boundaries just a little further. We build space shuttles with gardening tools so anyone can have a space shuttle of their own. Welcome to VORON Design . Motion System . All Voron printers are built using CoreXY or CoreXZ configurations to reduce the amount of moving mass, allowing increased acceleration and speeds. Depending on the printer, linear rails (MGN7, MGN9, MGN12) or linear rods may be used along the X, Y, and/or Z axes. Gates 6mm and/or 9mm belts are used for movement; genuine Gates Unitta belts are recommended over generic versions for improved reliability and performance. A simple stack of flanged F695 bearings are often used as smooth belt idlers, as the bearings are much larger than the more common GT2 idlers. This provides increased service life. Frames . All V1, V2, and Legacy frames are constructed with 2020 aluminum extrusions with a 6mm slot width. The V0 is built with 1515 Makerbeam XL extrusions, and the Switchwire is constructed with 6030 and 3030 extrusions. Be sure to pay attention to the extrusion profile–not all extrusion types are the same, even if the outer dimensions are equal! . Motion Control - Klipper . All Voron printers use Klipper firmware. Klipper uses a Raspberry Pi for all the computation-heavy tasks and sends a list of preprocessed orders to the controller board. This gives a considerable amount of flexibility as a variety of control boards (or combination of boards) can be easily configured. As well, more complex features such as input shaping (to reduce ringing) can be added no matter what control board is used. Finally, configuring firmware is fast and easy. Change to your desired parameter in an easy to read printer configuration file, save, and restart Klipper–a few seconds later the printer is ready to go! . Serial Numbers . In 2015, the very first set of 18 Voron printers were packaged in RCF’s garage and shipped as kits. As a fun addition, he gave each kit a serial number. While those were the only printers ever sold directly by RCF, the tradition has lived on as a way to represent the hard work each Voron owner puts into sourcing, assembling, and configuring their printer. It also is a great way to show how the community has grown throughout the years! . All it takes to receive a serial number after you have completed your build is to post a video of your printer printing on the Voron Subreddit. Be sure to have your printer cleaned up with all cable management above the deck plate done. Wiring can be tricky, but do your best! . Note: the serial submission process has become more automated now. In order to have the bot pick up your serial request video, be sure to use the “Serial Request” flair and add your full Discord name, including the unique 4 digit number (for example, #1234) after your username. Mods will review the requests periodically! . Next: Choosing a Printer / Extruder . ",
    "url": "/about.html",
    "relUrl": "/about.html"
  },"33": {
    "doc": "Automating Klipper MCU Updates",
    "title": "Automating Klipper MCU Updates",
    "content": "This document describes a method to make updating your MCUs to the latest Klipper version easy, especially with multiple boards. ",
    "url": "/community/howto/drachenkatze/automating_klipper_mcu_updates.html",
    "relUrl": "/community/howto/drachenkatze/automating_klipper_mcu_updates.html"
  },"34": {
    "doc": "Automating Klipper MCU Updates",
    "title": "Terminology",
    "content": ". | Host System: The system where you run the host part of Klipper on, usually on a Raspberry Pi. | MCU: The board(s) where your microcontroller unit (MCU) runs on, like the SKR, Octopus or Spider, but also the RPI itself if you are using SPI for the ADXL345 accelerometer. | . ",
    "url": "/community/howto/drachenkatze/automating_klipper_mcu_updates.html#terminology",
    "relUrl": "/community/howto/drachenkatze/automating_klipper_mcu_updates.html#terminology"
  },"35": {
    "doc": "Automating Klipper MCU Updates",
    "title": "Prerequisites",
    "content": ". | Basic knowledge on how to update Klipper on the command line via SSH | A board which supports flashing the firmware via an SD-Card, which almost all modern 32-bit controller boards support. | . ",
    "url": "/community/howto/drachenkatze/automating_klipper_mcu_updates.html#prerequisites",
    "relUrl": "/community/howto/drachenkatze/automating_klipper_mcu_updates.html#prerequisites"
  },"36": {
    "doc": "Automating Klipper MCU Updates",
    "title": "Introduction",
    "content": "Whenever you update Klipper on your host system, you should also update Klipper on all your MCUs. This is because Klipper on your host system and Klipper on your MCUs need to use the same communication protocol. If one of them is out of date, you get an error like this: . mcu 'mcu': Command format mismatch: endstop_home oid=%c clock=%u sample_ticks=%u sample_count=%c rest_ticks=%u pin_value=%c trsync_oid=%c trigger_reason=%c vs endstop_home oid=%c clock=%u sample_ticks=%u sample_count=%c rest_ticks=%u pin_value=%c This type of error is frequently caused by running an older version of the firmware on the micro-controller (fix by recompiling and flashing the firmware). However, MCU updates are often skipped because: . | Updating all MCUs is tedious, especially with multiple controller boards | Error-prone because if different boards are used, make menuconfig needs to be called multiple times | Updates are technically only necessary if the communication protocol has changed, often causing the updates to feel “unnecessary” | . ",
    "url": "/community/howto/drachenkatze/automating_klipper_mcu_updates.html#introduction",
    "relUrl": "/community/howto/drachenkatze/automating_klipper_mcu_updates.html#introduction"
  },"37": {
    "doc": "Automating Klipper MCU Updates",
    "title": "menuconfig Theory",
    "content": "Klipper uses the menuconfig system, which was originally developed to make configuring the Linux Kernel easier. The menuconfig system is a more user-friendly way of setting options in the configuration file (usually called .config). Because the name of the configuration file does not change inbetween invocations of make menuconfig, settings done for one MCU board will overwrite the previous settings in the default .config file. Fortunately, the menuconfig infrastructure supports custom configuration files, so we can easily add one configuration file for each of our MCUs. This is achieved by passing KCONFIG_CONFIG=name to the script, where name is the desired name of the configuration file instead of .config. Note that the .config file is often not visible because files starting with a dot are treated as hidden files by Linux/Unix systems. To view the contents of this file, simply type cat .config in your Klipper directory or use ls -all to view all files in the directory. An example would be: . make clean KCONFIG_CONFIG=config.spider make menuconfig KCONFIG_CONFIG=config.spider make KCONFIG_CONFIG=config.spider . All the settings would now be stored in the file config.spider. If you skip the KCONFIG_CONFIG parameter, the system would revert to the .config filename. ",
    "url": "/community/howto/drachenkatze/automating_klipper_mcu_updates.html#menuconfig-theory",
    "relUrl": "/community/howto/drachenkatze/automating_klipper_mcu_updates.html#menuconfig-theory"
  },"38": {
    "doc": "Automating Klipper MCU Updates",
    "title": "flash-sdcard Theory",
    "content": "Usually you would copy the firmware file onto your SD-Card and then restart your board(s), then waiting for the board(s) to flash the new firmware for you. Thanks to Klipper’s flash-sdcard.sh script, this can be automated. In a nutshell, this script places the new firmware file on the card, restarts the board, waits for the new firmware to be flashed, and then verifies the new firmware. This can be done with a single command after the firmware is compiled: ./scripts/flash-sdcard.sh /dev/ttyACM0 btt-skr-v1.3 . Note that the serial path and the board parameters need to be adjusted for your particular board, please refer to the flash-sdcard.sh Documentation . ",
    "url": "/community/howto/drachenkatze/automating_klipper_mcu_updates.html#flash-sdcard-theory",
    "relUrl": "/community/howto/drachenkatze/automating_klipper_mcu_updates.html#flash-sdcard-theory"
  },"39": {
    "doc": "Automating Klipper MCU Updates",
    "title": "Full Example",
    "content": "Here is a simple example for my v1.8 where I have a Fysetc Spider and an RPI MCU. sudo service klipper stop cd ~/klipper git pull make clean KCONFIG_CONFIG=config.spider make menuconfig KCONFIG_CONFIG=config.spider make KCONFIG_CONFIG=config.spider ./scripts/flash-sdcard.sh /dev/ttyAMA0 fysetc-spider-v1 make clean KCONFIG_CONFIG=config.rpi make menuconfig KCONFIG_CONFIG=config.rpi make flash KCONFIG_CONFIG=config.rpi sudo service klipper start . You could simply place all the required commands in a text file update-all.sh within the Klipper directory, and then run all the above commands by using one single command: bash update-all.sh. Note that you still need to watch for errors during the build process! . ",
    "url": "/community/howto/drachenkatze/automating_klipper_mcu_updates.html#full-example",
    "relUrl": "/community/howto/drachenkatze/automating_klipper_mcu_updates.html#full-example"
  },"40": {
    "doc": "Automating Klipper MCU Updates",
    "title": "Elegant Example",
    "content": "This example adds an input prompt to hit [Enter] after each step, so it’s easier to spot errors during the previous step. sudo service klipper stop cd ~/klipper git pull make clean KCONFIG_CONFIG=config.spider make menuconfig KCONFIG_CONFIG=config.spider make KCONFIG_CONFIG=config.spider read -p \"Spider firmware built, please check above for any errors. Press [Enter] to continue flashing, or [Ctrl+C] to abort\" ./scripts/flash-sdcard.sh /dev/ttyAMA0 fysetc-spider-v1 read -p \"Spider firmware flashed, please check above for any errors. Press [Enter] to continue, or [Ctrl+C] to abort\" make clean KCONFIG_CONFIG=config.rpi make menuconfig KCONFIG_CONFIG=config.rpi make KCONFIG_CONFIG=config.rpi read -p \"RPi firmware built, please check above for any errors. Press [Enter] to continue flashing, or [Ctrl+C] to abort\" make flash KCONFIG_CONFIG=config.rpi sudo service klipper start . ",
    "url": "/community/howto/drachenkatze/automating_klipper_mcu_updates.html#elegant-example",
    "relUrl": "/community/howto/drachenkatze/automating_klipper_mcu_updates.html#elegant-example"
  },"41": {
    "doc": "Automating Klipper MCU Updates",
    "title": "FAQ",
    "content": "Can I just skip the menuconfig line? . You could, but if Klipper decides to add another configuration option during an update, the new option would be missing from the config file and the build process would complain. Running make menuconfig ensures that the new option is added with the defaults. ",
    "url": "/community/howto/drachenkatze/automating_klipper_mcu_updates.html#faq",
    "relUrl": "/community/howto/drachenkatze/automating_klipper_mcu_updates.html#faq"
  },"42": {
    "doc": "bbEdit Config Editor (macOS)",
    "title": "bbEdit Config Editor (macOS)",
    "content": ". | Install bbEdit. The free version works great! | Under File, select Open from FTP/SFTP Server…” | Under Server, type in your Raspberry Pi’s IP address (will be different) | Select SFTP | Enter “pi” as the user | Enter your password, it will be “raspberry” unless you changed it. | Select Continue | Find “printer.cfg” in the file browser and double click to open the file | Make any necessary edits and save the file . Remember to restart klipper from the Octoprint terminal to see your changes take affect! . | . ",
    "url": "/build/software/bbedit.html",
    "relUrl": "/build/software/bbedit.html"
  },"43": {
    "doc": "Bed Heater Flickering",
    "title": "Lights Flickering with Bed Heater",
    "content": "This is caused by crappy wiring in your house + the bed heater being on. By default the heater is using a PID algorithm to keep its temperature at the set value – this switches the heater on and off quickly (a bigger VORON has 700W+ mains heater; a 300mm V2 can pull 6-8 Amps at peak load, which can overload a circuit if there is too much else going on), this causes the flicker in your home electrical network. In the [heater_bed] section make the following changes: . | If line power is 60Hz, add a line pwm_cycle_time: 0.0166 | If line power is 50Hz, add a line pwm_cycle_time: 0.02 | . ",
    "url": "/community/troubleshooting/120decibell/bed_heater_flickering.html#lights-flickering-with-bed-heater",
    "relUrl": "/community/troubleshooting/120decibell/bed_heater_flickering.html#lights-flickering-with-bed-heater"
  },"44": {
    "doc": "Bed Heater Flickering",
    "title": "Bed Heater Flickering",
    "content": " ",
    "url": "/community/troubleshooting/120decibell/bed_heater_flickering.html",
    "relUrl": "/community/troubleshooting/120decibell/bed_heater_flickering.html"
  },"45": {
    "doc": "Blob of Death",
    "title": "Blob of Death",
    "content": "Wake up from running an overnight print of ABS and find this? . Do not panic! It is recoverable. | Remove all parts that can be easily removed - back half of mount, zip ties, screws, etc. (A pair of heavy diagonal pliers may help) | Find / purchase an acetone-proof container. Local hardware stores frequently carry metal paint cans which work well for this purpose. | While at the hardware store, purchase some acetone. Typically found in most paint / stain sections. | With some solid steel or copper wire, suspend what is left of the toolhead by the hot end itself from the lid of the container. | Pour some actone into the bottom of the container. | Lower everyting into the container so that the toolhead is suspended at least an inch or two above the acetone, and close the lid. | The acetone vapors will begin to melt the ABS. | Check on it every few days, the softened ABS may need to be scraped away to allow the acetone vapors to reach the still-hard ABS. | Eventually all of the ABS can be removed, some final cleanup will be required. | . ",
    "url": "/community/troubleshooting/120decibell/blob_of_death.html",
    "relUrl": "/community/troubleshooting/120decibell/blob_of_death.html"
  },"46": {
    "doc": "Calculating Driver Current Settings",
    "title": "Calculating Driver Current Settings",
    "content": "When using the 2208 / 2209 drivers, the voltage &amp; current are set in software. In Klipper, the motor currents have two settings: run and hold. However, it is no longer recommended to specify a hold_current for most motors. Klipper current settings are based on root-mean-squared (RMS) and not on peak current. The spec sheets for most motors list the peak current capacity. Calculating Currents . To calculate the maximum Klipper current settings for a given stepper, follow this process: . | Look up the specifications for the stepper motor and locate the peak current limits of the motor. | Multiply the peak current by 0.707 to determine the maximum current in RMS. This is the maximum run current. (Typically round down to the nearest .1) | If you plan to set a separate hold current, multiply the maximum run current by 0.6 to determine the hold current. (Typically round to the nearest (0.05) | . Example . The LDO 42STH130-1684 is specified with a maximum current of 1.68 Amps. Maximum run current is 1.68 * .707 = 1.1877, rounded down to a maximum RMS run current of 1.1 Amps. Maximum hold current is 1.1877 * 0.6 = 0.712, rounded to a maximum hold current of 0.7 Amps. Maximums . Whatever the maximum calculated current of the motor is, the maximum capacity of the 2209 driver is 1.2 Amps. Also, the calculation is for the maximum the motor can handle. It is recommended to start with smaller values and work from there. Starting from the high end may result in melted motor mounts. ",
    "url": "/community/howto/120decibell/calculating_driver_current.html",
    "relUrl": "/community/howto/120decibell/calculating_driver_current.html"
  },"47": {
    "doc": "Chamber Temperature & Exhaust Fan",
    "title": "Chamber Temperature &amp; Exhaust Fan",
    "content": "While the two functions can be combined, if doing just chamber temperature the process is slightly different so they are documented separately. The exhaust fan is already configured as part of the default build so no information on installation is provied. References . https://github.com/alchemyEngine/VoronUsers/tree/master/firmware_configurations/klipper/alch3my . ",
    "url": "/community/howto/alchemyEngine/chamber_temperature_exhaust_fan.html#chamber-temperature--exhaust-fan",
    "relUrl": "/community/howto/alchemyEngine/chamber_temperature_exhaust_fan.html#chamber-temperature--exhaust-fan"
  },"48": {
    "doc": "Chamber Temperature & Exhaust Fan",
    "title": "Thermistor Wiring",
    "content": ". | Place the chamber temperature thermistor in the selected location and run the cables down to MCU Z. | Plug the thermistor connector into MCU Z, TH0 (z:P0.24) | . ",
    "url": "/community/howto/alchemyEngine/chamber_temperature_exhaust_fan.html#thermistor-wiring",
    "relUrl": "/community/howto/alchemyEngine/chamber_temperature_exhaust_fan.html#thermistor-wiring"
  },"49": {
    "doc": "Chamber Temperature & Exhaust Fan",
    "title": "Klipper Configuration",
    "content": "Chamber Temperature Only . If just doing chamber temperature monitoring, add the following code to the printer configuration. Note: Confirm that the thermistor type matches the type used. [temperature_sensor chamber] sensor_type: NTC 100K beta 3950 sensor_pin: z:P0.24 min_temp: 0 max_temp: 100 gcode_id: C . Restart Klipper with a FIRMWARE_RESTART . Temperature Controlled Exhaust Fan . To have the exhaust fan controlled by the chamber temperature, do the following. | Comment out the entire section with the header [heater_fan exhaust_fan] | Add the following section | . Note: Confirm that the thermistor type matches the type used. [temperature_fan chamber] pin: z:P2.7 max_power: 1.0 shutdown_speed: 0.0 kick_start_time: 5.0 cycle_time:0.01 off_below:0.1 sensor_type: NTC 100K beta 3950 sensor_pin: z:P0.24 min_temp: 0 max_temp: 70 target_temp: 35.0 control: watermark gcode_id: C . Add another section with a new macro. [gcode_macro M141] default_parameter_S: 0 default_parameter_P: 0 gcode: SET_TEMPERATURE_FAN_TARGET temperature_fan=\"chamber\" target={S} . Restart Klipper with a FIRMWARE_RESTART . With this configuration, the fan will run at 100% anytime the chamber temperature is above 35C. The temperature is configurable later. Note: As of Klipper 0.8.0, the fan speed is not dynamically changeable using the temperature_fan object. ",
    "url": "/community/howto/alchemyEngine/chamber_temperature_exhaust_fan.html#klipper-configuration",
    "relUrl": "/community/howto/alchemyEngine/chamber_temperature_exhaust_fan.html#klipper-configuration"
  },"50": {
    "doc": "Chamber Temperature & Exhaust Fan",
    "title": "OctoPrint Configuration",
    "content": "In Octoprint, enable the chamber temperature sensor by going into Settings -&gt; Printer Profiles -&gt; Printer. Edit the profile and go under “Print bed and Build volume”. Locate the checkbox for “Heated Chamber” and enable it. The chamber temperature will now be displayed and graphed in the temperature chart. None of the Voron printers include a chamber heater so setting the chamber temperature will not function. ",
    "url": "/community/howto/alchemyEngine/chamber_temperature_exhaust_fan.html#octoprint-configuration",
    "relUrl": "/community/howto/alchemyEngine/chamber_temperature_exhaust_fan.html#octoprint-configuration"
  },"51": {
    "doc": "Chamber Temperature & Exhaust Fan",
    "title": "Display Configuration",
    "content": "To display the chamber temperature on the front panel display, additional configuration is required. | Download the lcd_tweaks.cfg configuration file and load onto the pi. | Edit printer.cfg and add the line [include lcd_tweaks.cfg] to include the file. | If only doing chamber temperature, edit the line {% set chamber = printer['temperature_fan chamber'] %} . and replace with . {% set chamber = printer['temperature_sensor chamber'] %} . | Restart Klipper with a FIRMWARE_RESTART | If the display does not come on or only partially displays, check the /tmp/klippy.log for more information. | . ",
    "url": "/community/howto/alchemyEngine/chamber_temperature_exhaust_fan.html#display-configuration",
    "relUrl": "/community/howto/alchemyEngine/chamber_temperature_exhaust_fan.html#display-configuration"
  },"52": {
    "doc": "Chamber Temperature & Exhaust Fan",
    "title": "Exhaust Fan Temperature Control (if chosen)",
    "content": "In the slicer or with other commands, run the M141 command anytime to change the set point of the exhaust fan. For example: . | Place a M141 S70 in the start g-code to hold the chamber at a high temperature for the duration of the print | Place a M141 S35 in the ending g-code to cooldown the chamber after a print is completed. | . ",
    "url": "/community/howto/alchemyEngine/chamber_temperature_exhaust_fan.html#exhaust-fan-temperature-control-if-chosen",
    "relUrl": "/community/howto/alchemyEngine/chamber_temperature_exhaust_fan.html#exhaust-fan-temperature-control-if-chosen"
  },"53": {
    "doc": "Chamber Temperature & Exhaust Fan",
    "title": "Chamber Temperature & Exhaust Fan",
    "content": " ",
    "url": "/community/howto/alchemyEngine/chamber_temperature_exhaust_fan.html",
    "relUrl": "/community/howto/alchemyEngine/chamber_temperature_exhaust_fan.html"
  },"54": {
    "doc": "Software Configuration",
    "title": "Software Configuration",
    "content": " ",
    "url": "/build/software/configuration.html",
    "relUrl": "/build/software/configuration.html"
  },"55": {
    "doc": "Software Configuration",
    "title": "Initial Voron Printer Configuration",
    "content": "Download the respective Voron base configuration file from the following links: . | V0 SKR mini e3 1.2 note: Not compatible with V0.1 | V0 SKR mini e3 2.0 | V0 SKR mini e3 3.0 | V1 SKR 1.4 | V2 SKR 1.3 | V2 SKR 1.4 | V2 Spider | V2 Octopus | SW SKR mini e3 V2.0 | SW Einsy Rambo | Legacy SKR 1.3 | Trident Octopus | . Rename the downloaded file to printer.cfg . Mainsail: Upload the file via Mainsail’s interface. Go to the “Machine” tab, and under “Config Files”, press the “Upload File” button . Fluidd: Upload the file via Fluidd’s interface. Go to the “Configuration” Tab, and under “Configuration Files”, press “+”-&gt;”Upload” . Octoprint: Use a secure file transfer program (WinSCP, Cyberduck, Notepad++, NppFT, BBEdit, scp), to transfer the file to your Raspberry Pi, placing it in the folder /home/pi. ",
    "url": "/build/software/configuration.html#initial-voron-printer-configuration",
    "relUrl": "/build/software/configuration.html#initial-voron-printer-configuration"
  },"56": {
    "doc": "Software Configuration",
    "title": "Editing printer.cfg",
    "content": "Note: There are many ways of editing the config file that vary by personal preference. Mainsail &amp; Fluidd both offer built in printer.cfg editors. Using Nano editor through SSH is simple but not always user friendly. Notepad++ with the NppFTP plugin (Windows) or bbEdit (macOS) are user friendlier alternatives. | Mainsail: Click “Settings”, “Machine”, then on the “printer.cfg” | Fluidd: Click “Configuration”, then “printer.cfg”, and choose “edit” from the menu that appears . | Notepad++ Information | bbEdit Information . | Nano: The nano command is slightly different, depending on whether you are using Mainsail, Fluidd, or Octoprint . | Mainsail &amp; Fluidd: nano ~/klipper_config/printer.cfg | Octoprint:nano ~/printer.cfg | . | . ",
    "url": "/build/software/configuration.html#editing-printercfg",
    "relUrl": "/build/software/configuration.html#editing-printercfg"
  },"57": {
    "doc": "Software Configuration",
    "title": "Review printer.cfg",
    "content": "There are a variety of entries in printer.cfg which will need to be edited to match your particular build. Open it with your choice of editors, and go through it carefully. While the key edits are highlighted below, you should read the entire file, and make sure you have found everything which needs your attention. Klipper is CASE SENSITIVE. Be sure everything except comments is LOWER CASE. ",
    "url": "/build/software/configuration.html#review-printercfg",
    "relUrl": "/build/software/configuration.html#review-printercfg"
  },"58": {
    "doc": "Software Configuration",
    "title": "Required Changes",
    "content": "The following items must be updated before the printer can function. | MCU path(s) | Thermistor types - hot end, heated bed . | See ‘sensor types’ list at end of stock configuration file | . | Stepper settings (X, Y, Z(s), extruder) . | Endstop position | Max position | Stepper type | . | Bed Screw / Tilt / Quad Gantry positions | Z endstop location | . ",
    "url": "/build/software/configuration.html#required-changes",
    "relUrl": "/build/software/configuration.html#required-changes"
  },"59": {
    "doc": "Software Configuration",
    "title": "Change Details",
    "content": "Printer Definitions . In this section you set your maximum accelerations and velocity. The stock config is configured fast - so if you are facing issues - you can tweak these values lower and then increase them as you finish tuning your printer. These are the highest values that klipper will allow regardless of what you may have configured in your slicer. [printer] kinematics: corexy max_velocity: 350 max_accel: 3000 max_z_velocity: 50 max_z_accel: 350 square_corner_velocity: 10.0 . Square corner velocity is defined as: . The maximum velocity (in mm/s) that the toolhead may travel a 90 degree corner at. A non-zero value can reduce changes in extruder flow rates by enabling instantaneous velocity changes of the toolhead during cornering. This value configures the internal centripetal velocity cornering algorithm; corners with angles larger than 90 degrees will have a higher cornering velocity while corners with angles less than 90 degrees will have a lower cornering velocity. If this is set to zero then the toolhead will decelerate to zero at each corner. The default is 5mm/s. Update Controller Path . Locate the section starting with [mcu]. The V2 will have an additional section starting with [mcu z] as it has two controllers. These sections are where the controllers are defined and identifying them so that Klipper which which components are connected (and to which controller if there is more than one). | Begin with all controllers disconnected from the Raspberry Pi. | For printers with just one controller, connect that controller to the Raspberry Pi. For printers with two controllers, connect the X/Y/E controller. | On the Raspberry Pi, run ls /dev/serial/by-id/. | The listing should look similar to this: | . Note: If the device identifier has the word ‘marlin’ in it, the Klipper firmware is not loaded properly. Go back and re-load the Klipper firmware before continuing. | Copy the device ID (e.g. usb-Klipper_lpc1768_1FB0000802094AAF07825E5DC52000F5-if00) from the terminal window and paste into a temporary text file. | Open the configuration file and navigate to the [mcu] section. Modiffy the “serial: /dev/serial” line and paste in the controller path so that is looks like the following: serial: /dev/serial/by-id/usb-Klipper_lpc1768_1FB0000802094AAF07825E5DC52000F5-if00 | Exit the text editor, and save when prompted. | . Update Second Controller Path (V2) . This section only applies to printers with more than one controller. | Connect the Z controller to the Raspberry Pi. | On the Raspberry Pi, re-run ls -l /dev/serial/by-id/. | The listing should look similar to this: | . Note: If the device identifier has the word ‘marlin’ in it, the Klipper firmware is not loaded properly. Go back and re-load the Klipper firmware before continuing. | Identify the new device ID (e.g. usb-Klipper_lpc1768_0650000AA39C48AFABD4395DC22000F5-if00) and copy from the terminal window and paste into a temporary text file. | Open the configuration file and navigate to the [mcu z] section. Modiffy the “serial: /dev/serial” line and paste in the controller path so that is looks like the following: serial: /dev/serial/by-id/usb-Klipper_lpc1768_0650000AA39C48AFABD4395DC22000F5-if00 | Exit the text editor with CTRL-X and save when prompted. | . Updating Printer Specific Settings . | Open printer.cfg file again and scan through the file. | Locate [stepper_x]. Uncomment the position_endstop and position_max that corresponds to your printer’s size and delete the other options to prevent confusion. | Under [tmcXXXX stepper_x], replace XXXX with either 2208 or 2209 to match the type of TMC drivers that are installed. For example, [tmc2209 stepper_x] for TMC 2209 drivers. | Repeat steps 2 &amp; 3 for the [stepper_y] section. | Under [stepper_z], uncomment position_max for your printer size and delete the other options to prevent confusion. Also in the same method as step 3, update the [tmcXXXX_stepper] for configuration with the installed stepper type for all four Z motors (Z, Z1, Z2, Z3 as applicable). | Under [extruder] verify that the sensor_type is correct. Do not worry about step_distance or PID values for now, they will be updated later in the setup process. Update [tmcXXXX extruder] in the same fashion as step 3 to match the installed stepper driver for the extruder. | Under [heater_bed], verify the temperature sensor type is correct. | Under [display], uncomment the display section that matches the installed display. Delete the others to prevent confusion. | If printer is a V1, Under [z_tilt] and [screws_tilt_adjust], uncomment the sections appropriate to the printer size. Delete the other options to prevent confusion. | If printer is a V2, Under [quad_gantry_level], uncomment the gantry_corners and points sections appropriate to the printer size. Delete the other options to prevent confusion. | Exit the text editor with CTRL-X and save when prompted. | . Additional Changes: MainsailOS only . | Add the following entry to your printer.cfg: [include mainsail.cfg] . | . Additional Changes: FluiddOS only . | Add the following entries to your printer.cfg: [include fluidd.cfg] . | . Community References . Calculating Driver Current Settings . Restart to take effect . Under Mainsail or Fluidd’s console, or Octoprint’s terminal tab type FIRMWARE_RESTART and press enter to send the command to restart Klipper. The console window should show the following: . Recv: // Klipper state: Disconnect [...] Recv: // Klipper state: Ready . If after 30-60 seconds there is no Ready message, then run STATUS in the terminal window. If Klipper comes back Not Ready it will notify if there is a configuration issue that needs to be corrected. Next: Initial Startup . ",
    "url": "/build/software/configuration.html#change-details",
    "relUrl": "/build/software/configuration.html#change-details"
  },"60": {
    "doc": "Credits",
    "title": "Credits",
    "content": "This documentation would not exist without contributions from the following people: . | Eddie | Chron | Lakabos | Fermion | Timmitt | Insurgus | Defib | Nemb | Mjoaris | Shiftingtech | Failopen | Dunar | Fulg | RCF | many others | . ",
    "url": "/credits.html",
    "relUrl": "/credits.html"
  },"61": {
    "doc": "Filament Runout Sensor",
    "title": "Filament Runout Sensor",
    "content": "Klipper supports a filament runout sensor to automatically pause and resume a print if filament ends. This guide goes through the process of setting up a Triagle Labs filament runout sensor. Note: Some other printers and sensors support jam detection with the same sensor. That capability is not currently in Klipper. ",
    "url": "/community/electronics/120decibell/filament_runout_sensor.html",
    "relUrl": "/community/electronics/120decibell/filament_runout_sensor.html"
  },"62": {
    "doc": "Filament Runout Sensor",
    "title": "Hardware / Wiring",
    "content": "The Triangle Labs filament sensor takes a 3-wire connection: 5V power, Ground, and Signal. If using one of the common SKR boards, the 3 wires line up directly with the sensor connections. For V2 owners, a replacement filament guide / mount is available in the VoronUsers repository to locate the Triangle Labs sensor in the same spot as the filament guide is intended to go. Common MCU ports . | V0 - SKR mini E3: E0-STOP (PC15) | V1 / V2 - SKR 1.3: Z+ STOP (P1.24) | V1 / V2 - SKR 1.4: E0DET (P1.26) | V2 - FLY FLYF407ZG: Z3 (PC14) | . ",
    "url": "/community/electronics/120decibell/filament_runout_sensor.html#hardware--wiring",
    "relUrl": "/community/electronics/120decibell/filament_runout_sensor.html#hardware--wiring"
  },"63": {
    "doc": "Filament Runout Sensor",
    "title": "Klipper Configuration",
    "content": "Add the following to the printer configuration file. Be sure to update the pin ID! . [filament_switch_sensor my_sensor] pause_on_runout: True runout_gcode: PARK_MACRO M117 Out of Filament insert_gcode: M117 Resuming RESUME_MACRO event_delay: 3.0 pause_delay: 0.5 switch_pin: P1.26 . There is no current standard for the process for how to handle parking / changing filament / resuming printing, so that is not documented here. Check in the macros page to see if anything has been contributed. ",
    "url": "/community/electronics/120decibell/filament_runout_sensor.html#klipper-configuration",
    "relUrl": "/community/electronics/120decibell/filament_runout_sensor.html#klipper-configuration"
  },"64": {
    "doc": "Filament Tuning",
    "title": "Filament Tuning",
    "content": "Steps and guides for getting filament printing just right. This process should be run with every brand and type of filament, and potentially even between different colors as pigment can affect filament performance. Some slicers (such as SuperSlicer) have a number of these process steps built-in. This can make the process much simpler. ",
    "url": "/tuning/filament_tuning.html",
    "relUrl": "/tuning/filament_tuning.html"
  },"65": {
    "doc": "Filament Tuning",
    "title": "Temperature",
    "content": "The first step with any process is to identify the ideal temperature for the filament. The most common process is to print a temperature tower. A temperature tower help identify the ideal temperature for a filament. Take note - with enclosures, some filaments such as PLA may need to have the doors opened and the exhaust fan running (and even the sides removed) in order to keep the enclosure cool enough. Be sure to experiement with your setup. ",
    "url": "/tuning/filament_tuning.html#temperature",
    "relUrl": "/tuning/filament_tuning.html#temperature"
  },"66": {
    "doc": "Filament Tuning",
    "title": "Extrusion Rate",
    "content": " ",
    "url": "/tuning/filament_tuning.html#extrusion-rate",
    "relUrl": "/tuning/filament_tuning.html#extrusion-rate"
  },"67": {
    "doc": "Filament Tuning",
    "title": "Cooling",
    "content": " ",
    "url": "/tuning/filament_tuning.html#cooling",
    "relUrl": "/tuning/filament_tuning.html#cooling"
  },"68": {
    "doc": "Filament Tuning",
    "title": "Pressure Advance",
    "content": " ",
    "url": "/tuning/filament_tuning.html#pressure-advance",
    "relUrl": "/tuning/filament_tuning.html#pressure-advance"
  },"69": {
    "doc": "First Print",
    "title": "First Print",
    "content": "Download the “voron_design_cube_v7.stl” from the Voron Github page, and open the file in the chosen slicer. Use the default slicer settings, but make sure the hotend temperature and bed temperature is correct for the filament you are using. A good starting point is 240C hotend temperature, 100C heated bed temperature, and 92% flow for ABS. Slice the file and save the .gcode file to your desktop (if you haven’t set up the Octoprint Plugin or your slicer, Mainsail and Fluidd do not need plugins). Navigate to Octoprint, Mainsail, or Fluidd in your web browser, and upload the file. Press “Print” and closely watch the beginning of the print. If your nozzle is too far or close to the bed, on your printer display press the knob, navigate to “Tune”, and adjust the Z offset distance (+ is further from the bed, - is closer). Once you are printing (with your printer fully assembled), take a quick video, upload it to the Voron subreddit and eat a well deserved bowl of cereal! . ",
    "url": "/build/slicer/first_print.html",
    "relUrl": "/build/slicer/first_print.html"
  },"70": {
    "doc": "First Print",
    "title": "Next Steps",
    "content": "Done with your cereal? The printer’s not not done yet! There is still lots of adjusting to do so the printer can turn out high speed perfection. Head over to the Tuning Guides and dial it in. ",
    "url": "/build/slicer/first_print.html#next-steps",
    "relUrl": "/build/slicer/first_print.html#next-steps"
  },"71": {
    "doc": "FLY FLYF407ZG Klipper Firmware",
    "title": "FLY FLYF407ZG Klipper Firmware",
    "content": "Required Items . | Klipper must be installed onto the Raspberry Pi | At least one microSD card needs to be available depending on number of controllers. | . Build Firmware Image . | Login to the Raspberry Pi | Run the following: | . sudo apt install make cd ~/klipper make menuconfig . In the menu structure there are a number of items to be selected. | Ensure that “Enable extra low-level configuration options” is selected | Ensure that the micro-controller architecture is set to ‘STMicroelectronics STM32’ | Ensure that the Processor model is set to “STM32F407” | Ensure that the Bootloader offet is set to “32KiB bootloader” | Ensure that Clock Reference is set to “8 MHz crystal” | Ensure that “Use USB for communication (instead of serial)” is selected | . Once the configuration is selected, select “Exit” and “Yes” if asked to save the configuration. Run the following: . make clean make . The make command, when completed, creates a firmware file klipper.bin that is store in the folder /home/pi/klipper/out. This file need to be copied to the FLY board. The easiest way to do this is to use a GUI like WinSCP on Windows or either Cyberduck or scp (from terminal) on Mac to copy the file to your computer. Load Firmware Image . Copy the klipper.bin to the desktop, then rename it to firmware.bin . Important: If the file is not renamed, the bootloader will not be updated properly. Ensure that the FLY board is not powered, then remove the microSD card that is installed. Connect the microSD card to the computer with the firmware.bin file. Open the microSC card in the file browser. There may be a file named ‘fly.cur’, that file can be deleted or left alone, it will be overwritten later. Copy the firmware.bin from the desktop onto the microSD card. If problems are encountered transferring the file(s) to the microSD card, reformat the microSD card with a FAT32 filesystem and try again. Replace the microSD card(s) into the FLY. If more than one, it does not matter which card goes into which controller. Turn on the power supply to power on the FLY board. If named properly, the FLY will automatically update with the Klipper firmware. Important: If the FLY not powered with 12-24V, Klipper will be unable to communicate with the TMC drivers via UART and the FLY will automatically shut down. Back to Software Installation . ",
    "url": "/build/software/flyf407zg_klipper.html",
    "relUrl": "/build/software/flyf407zg_klipper.html"
  },"72": {
    "doc": "Hall Effect Endstop Setup",
    "title": "Hall Effect Endstop Setup",
    "content": "The hall effect endstop is only designed for a V2.4. It will not work on any other models! . The hall effect endstop board is a non-mechanical alternative to the X and Y endstop switches. It triggers on magnets installed in the X carriage and one Z joint. ",
    "url": "/community/electronics/120decibell/hall_effect_endstop_setup.html",
    "relUrl": "/community/electronics/120decibell/hall_effect_endstop_setup.html"
  },"73": {
    "doc": "Hall Effect Endstop Setup",
    "title": "Requirements",
    "content": ". | The alternate Z joint “z_joint_upper_hall_effect” must be printed, quantity 1. | | The alternate endstop pod “[a]_endstop_pod_hall | _effect” must be printed, quantity 1. | . | 4 wires must be installed into the cable chain. | . ",
    "url": "/community/electronics/120decibell/hall_effect_endstop_setup.html#requirements",
    "relUrl": "/community/electronics/120decibell/hall_effect_endstop_setup.html#requirements"
  },"74": {
    "doc": "Hall Effect Endstop Setup",
    "title": "Wiring",
    "content": ". | The hall effect endstop requires 5V and GND to operate. | The standard connector is a Molex SL 4-pin locking connector. | The connector pinout is silkscreened onto the board. (GND, X, Y, Vin) | SKR 1.3 and SKR 1.4 have 5V and GND available at all endstop connections. Common wiring is 5V and X on one connector, then Y and GND on another. Check the pinout for the board to confirm. | . ",
    "url": "/community/electronics/120decibell/hall_effect_endstop_setup.html#wiring",
    "relUrl": "/community/electronics/120decibell/hall_effect_endstop_setup.html#wiring"
  },"75": {
    "doc": "Hall Effect Endstop Setup",
    "title": "Assembly",
    "content": ". | The alternate Z joint should be installed at the Z2 position, next to the A motor. | Using (2) M3x8 SHCS, install the hall effect board into the endstop pod. | Using (2) M3x30 SHCS, install the hall effect pod into the right XY joint. | Connect the wiring to the hall effect module. | Do not install the magnets at this time. | Power on the printer. | . ",
    "url": "/community/electronics/120decibell/hall_effect_endstop_setup.html#assembly",
    "relUrl": "/community/electronics/120decibell/hall_effect_endstop_setup.html#assembly"
  },"76": {
    "doc": "Hall Effect Endstop Setup",
    "title": "Hall Effect Calibration",
    "content": "The hall effect sensors are sensitive to polarity so the magnets must be installed correctly. | Using a small screwdriver, center the two potentiometers on the board. | Verify the magnet poles and install. | Take a single magnet and slowly move it close to the hall effect board’s Y sensor. | If the light does not come on with the magnet 5-10mm away, flip the magnet over and try again. | Once the pole has been identified install the magnet (in exactly the same oriantation!) into the Z joint. | Repeat for X axis, magnet is installed into the X carriage over top of a SHCS. | . | For each axis, move the gantry or carriage back and forth watching the LED for the trigger point. Adjust the potentiometer to set the gap for when the endstop is triggered. The gap should not be any smaller than 1-2mm. | . ",
    "url": "/community/electronics/120decibell/hall_effect_endstop_setup.html#hall-effect-calibration",
    "relUrl": "/community/electronics/120decibell/hall_effect_endstop_setup.html#hall-effect-calibration"
  },"77": {
    "doc": "Hall Effect Endstop Setup",
    "title": "Verification",
    "content": ". | Manually move the gantry away from the endstops and run QUERY_ENDSTOPS. Both X and Y endstops should read as open. | If any of them say “triggered” instead of “open”, double-check to make sure the gantry is away from the homeing corner and that both LEDs are off. | Manually move the gantry to close the X endstop and run QUERY_ENDSTOPS. The X endstop should read triggered and the Y endstop should read open. | Manually move the gantry into the endstop corner and run QUERY_ENDSTOPS. Both X and Y endstops should read triggered. | If it is found that one of the endstops has inverted login (i.e. it reads as “open” when it is pressed and “triggered” when not pressed), go into the printer configuration file (typically printer.cfg) and add or remove the ! in front of the pin identifier. For example, if the X endstop was inverted, add a ! in front of the pin number as follows: endstop_pin: P1.28 -&gt; endstop_pin: !P1.28 | Attempt a home with G28 X Y. The gantry should not physically contact the XY joint or the A motor assembly. If it does the sensitivity must be adjusted to prevent contact. | . ",
    "url": "/community/electronics/120decibell/hall_effect_endstop_setup.html#verification",
    "relUrl": "/community/electronics/120decibell/hall_effect_endstop_setup.html#verification"
  },"78": {
    "doc": "Choosing a Printer / Extruder",
    "title": "Choosing a Printer / Extruder",
    "content": "This is a guide to help people in selecting and building their first Voron printer and/or extruder. ",
    "url": "/hardware.html",
    "relUrl": "/hardware.html"
  },"79": {
    "doc": "Choosing a Printer / Extruder",
    "title": "Printer Models",
    "content": "There are currently 5 printers in the Voron lineup. One is not necessarily better than the other, just different. All printers (except Legacy) are capable of being fully enclosed to print ABS but can just as easily print PLA, PETG, or even Nylon. All printers in the Voron lineup are designed to use a Raspberry Pi linked to one or more motor controller board(s) to manage all of the printer functions and interface controls. Note: Pricing estimates are in US Dollars and do not include any necessary tools or other common building supplies. Costs vary widely depending on sourcing, part selection, and shipping costs. ",
    "url": "/hardware.html#printer-models",
    "relUrl": "/hardware.html#printer-models"
  },"80": {
    "doc": "Choosing a Printer / Extruder",
    "title": "Voron Zero",
    "content": "The Voron Zero is a traditional CoreXY design with the bed moving along the Z axis. It has a tiny 120mm^3 print area, built with 1515 extrusions. It encloses naturally so printing ABS is possible. Currently, all single mechanical parts for Trident and V2 can be printed on a Voron Zero bed. The design accounts for stock Makerbeam XL extrusion lengths (which come tapped) and standard MGN7 linear rail lengths, so scaling the design will start to increase cost or labor involved with tapping. The bed is also cantilevered which will also restrict scaling. This printer can be built for between $400 - $600. Current release is V0.1. V0 Preview . ",
    "url": "/hardware.html#voron-zero",
    "relUrl": "/hardware.html#voron-zero"
  },"81": {
    "doc": "Choosing a Printer / Extruder",
    "title": "Voron Trident",
    "content": "The Voron Trident is a traditional CoreXY design with a fixed gantry and the 3-point bed moves along the Z axis. It is simpler to build compared to V2 and can be built for between $1,000 - $1,300. It encloses naturally so ABS or other temperature sensitive filaments can be printed easily. It uses linear rails for all axes, driven by belts on the X and Y axes and stepper motors with integrated leadscrews on the Z axis. Standard sizes include a 250x250mm plate, a 300x300mm plate, or a 350x350mm plate. Z height is somewhat restrictive due to the limited options with integrated lead screw steppers, maxing out at 250mm without custom leadscrew motors. Trident Homing Routine . ",
    "url": "/hardware.html#voron-trident",
    "relUrl": "/hardware.html#voron-trident"
  },"82": {
    "doc": "Choosing a Printer / Extruder",
    "title": "Voron 2",
    "content": "The Voron V2 is a modified CoreXY design with a static bed and a gantry that moves along the Z axis. It is a much more complex build because it includes things such as 4-point gantry tramming to align to the print surface, dual MCUs, and other unique features. It is also designed to be fully enclosed so it prints ABS or similar filaments very well. Due to the linear rails the design is scalable in stock form from 250mm^3 and 300mm^3 all the way up to 350mm^3. More linear rails, larger print surface, and other V2-specific items make this printer more expensive, at between $1,500 - $1,900. Current release is V2.4r1. V2.4 Quad Level . ",
    "url": "/hardware.html#voron-2",
    "relUrl": "/hardware.html#voron-2"
  },"83": {
    "doc": "Choosing a Printer / Extruder",
    "title": "Switchwire",
    "content": "The Switchwire is a Voron take on a classic Mendel (aka “bedflinger”) design. It is a CoreXZ design so the print head is belt driven in both the X and Z axis eliminating the typical leadscrew Z drive allowing for very fast Z movement speeds and less weight on the gantry by moving the X motor to the frame. The stiff 3030/3060 contructed frame is just large enough to cover the entire swing of the Prusa 250x210mm bed and allows for a natural enclosure. Without having an existing Prusa printer to pull parts from, cost is between $700 - $900 . Switchwire Introduction Video . ",
    "url": "/hardware.html#switchwire",
    "relUrl": "/hardware.html#switchwire"
  },"84": {
    "doc": "Choosing a Printer / Extruder",
    "title": "Legacy",
    "content": "The Legacy is a tribute to the roots of the Voron project and the RepRap project. It returns to the classic design using LM8UU rods and bearings in the 230mm^3 size but retains the new Afterburner toolhead. It is not designed to be enclosed. The electronics enclosure is very small, adding to the open-air vibe. Costs are variable depending on the builder’s old stock of LM8UU components but are expected to be between $600 - $800. Legacy Introduction Video . ",
    "url": "/hardware.html#legacy",
    "relUrl": "/hardware.html#legacy"
  },"85": {
    "doc": "Choosing a Printer / Extruder",
    "title": "Extruders and Variants",
    "content": " ",
    "url": "/hardware.html#extruders-and-variants",
    "relUrl": "/hardware.html#extruders-and-variants"
  },"86": {
    "doc": "Choosing a Printer / Extruder",
    "title": "Mobius (M4)",
    "content": "Mobius is the original Bowden extruder for Voron printers, designed to be mounted on the frame. Highly optimized, dual gear, and very effective for Bowden setups. Driven by a full-size or a compact “pancake” NEMA17 motor. M4 Introduction Video . ",
    "url": "/hardware.html#mobius-m4",
    "relUrl": "/hardware.html#mobius-m4"
  },"87": {
    "doc": "Choosing a Printer / Extruder",
    "title": "Jetpack",
    "content": "Jetpack is a modified Mobius designed to be mounted on the X axis for a shorter Bowden. Was designed as an intermediary solution to reduce the Bowden tube lengths before the introduction of Afterburner and has been superceded by the M4. It is driven by a compact “pancake” NEMA17 motor. ",
    "url": "/hardware.html#jetpack",
    "relUrl": "/hardware.html#jetpack"
  },"88": {
    "doc": "Choosing a Printer / Extruder",
    "title": "Afterburner",
    "content": "Afterburner is not specifically an extruder, but the collective name for the Voron direct-drive interchangeable toolhead system. The Afterburner system has three interchangeable components: the extruder, the toolhead holding the hot end, and the cooling assembly. Each of those can be swapped without affecting the other components. Afterburner Announcement Video . ",
    "url": "/hardware.html#afterburner",
    "relUrl": "/hardware.html#afterburner"
  },"89": {
    "doc": "Choosing a Printer / Extruder",
    "title": "Mini Afterburner",
    "content": "Mini Afterburner refers to the V0.1 toolhead with a built-in direct-drive extruder based on the Pocketwatch from the original Voron Zero. ",
    "url": "/hardware.html#mini-afterburner",
    "relUrl": "/hardware.html#mini-afterburner"
  },"90": {
    "doc": "Choosing a Printer / Extruder",
    "title": "Clockwork",
    "content": "Clockwork is the name given to the original extruder system for Afterburner. It is a repackaged BMG dual-gear extruder driven by a compact “pancake” NEMA17 motor. The Afterburner term is commonly (but incorrectly) used to refer to this extruder. ",
    "url": "/hardware.html#clockwork",
    "relUrl": "/hardware.html#clockwork"
  },"91": {
    "doc": "Choosing a Printer / Extruder",
    "title": "Pocketwatch",
    "content": "Pocketwatch is the Afterburner Clockwork repackaged for the smaller size needed by the Voron Zero printer. Pocketwatch is available as a standalone extruder for Bowden setups. ",
    "url": "/hardware.html#pocketwatch",
    "relUrl": "/hardware.html#pocketwatch"
  },"92": {
    "doc": "Choosing a Printer / Extruder",
    "title": "Galileo",
    "content": "Galileo is the newest extruder designed to fit on an Afterburner toolhead. It is based on the Orbiter extruder and incorporates a planetary gear reduction to allow a smaller housing size and even smaller motor to be used in order to reduce weight. Note: While not a Voron product, the Bondtech LGX is a drop-in fit on the Afterburner system. Next: Sourcing Information . ",
    "url": "/hardware.html#galileo",
    "relUrl": "/hardware.html#galileo"
  },"93": {
    "doc": "Voron History",
    "title": "Voron History",
    "content": "Printers go brrrrrrrrrrrrr . ",
    "url": "/history.html",
    "relUrl": "/history.html"
  },"94": {
    "doc": "IGUS Chan Length Ordering Guide",
    "title": "IGUS Chan Length Ordering Guide",
    "content": "PLEASE NOTE THAT THE BOM VARIES FROM THE SOURCING GUIDE ON THIS. FOR THE X&amp;Y CHAINS YOU WANT TO USE E2i CHAINS AND NOT THE E2 CHAINS. E2i CHAINS OPEN TO THE INSIDE OF THE CURVE RADIUS AND WILL BE ACCESSIBLE WHERE AS THE E2 CHAINS THE OPENING SIDE WILL LAY AGAINST THE EXTRUSIONS. When ordering IGUS chains you need to cross reference your BOM with the Sourcing Guide. The BOM will give you the length of chain whereas the Sourcing Guide will give you a count of links. IGUS’s site isn’t exactly intuitive as to what number you should enter. The BOM and Sourcing Guide give you the resultant CALCULATED values on the IGUS website and NOT the numbers you enter in the IGUS Configurator. My examples will show what to spec (as of 9/9/2020) for a Voron 2.4 but the general principles apply across all models. For a 2.4 350^3 model, the BOM calls out IGUS E2i-10-10-018-0 Chain (405mm [1.33ft]) for x/y and IGUS E2-15-10-028-0 Chain (545mm [1.79ft]) for z. The Sourcing Guide calls out for 21 links and 28 links respectively. In the IGUS Configurator you need to adjust the TRAVEL DISTANCE until you reach the number of links specified in the Sourcing Guide. In the case of the E2i-10-10-018-0 Chain, I had to set the TRAVEL DISTANCE to 2.0 ft which resulted in a CHAIN LENGTH of 1.3825 ft. That length corresponds to a count of 21 links as noted in the Sourcing Guide. Going any smaller on the TRAVEL DISTANCE length would give us fewer than 21 links. Note that the resultant CHAIN LENGTH is longer than specified in your BOM. You want to have those two numbers as close as possible while maintaining the number of links specified in the sourcing guide. For the IGUS E2-15-10-028-0 You will need to set the TRAVEL DISTANCE to 2.8 ft resulting in a CHAIN LENGTH of 1.8433 ft. Again, this will be longer than the specified 1.79 ft but the link count will be 28 which matches the Sourcing Guide. ",
    "url": "/community/howto/amonkeybutler/igus_chain_ordering_guide.html",
    "relUrl": "/community/howto/amonkeybutler/igus_chain_ordering_guide.html"
  },"95": {
    "doc": "Software Installation",
    "title": "Software Installation",
    "content": "All stock Voron printers run on the Klipper firmware. However, there are a few different web interfaces available for managing your printer. The Voron Project recommends using Mainsail or Fluidd, although it is also possible to use Octoprint. Mainsail and Fluidd are both developed specifically for Klipper based printers, whereas Octoprint is a more general-use platform. Note: If you are using a Pi Zero, such as in the Voron Legacy, you must use Mainsail or Fluidd . | Mainsail | Fluidd | Octoprint | . | | | | . ",
    "url": "/build/software/",
    "relUrl": "/build/software/"
  },"96": {
    "doc": "Software Installation",
    "title": "Installation",
    "content": "Mainsail . Mainsail is a lightweight web interface for Klipper and other subsystems. It does not support plugins but generally doesn’t need to. Installing Mainsail . Fluidd . Fluidd is a lightweight web interface for Klipper and other subsystems that is very similar to Mainsail but has a different look and feel. It also does not support plugins. Installing Fluidd . Octoprint . Octoprint has been a popular system for many years. It supports plugins but also requires substantial CPU and memory. Installing Octoprint . ",
    "url": "/build/software/#installation",
    "relUrl": "/build/software/#installation"
  },"97": {
    "doc": "Software Installation",
    "title": "Firmware Flashing",
    "content": "At this point Klipper will be installed on the Raspberry Pi. The next step is to compile and install the Klipper firmware onto the controller(s). | SKR 1.3 | SKR 1.4 | SKR mini e3 V1.2 | SKR mini e3 V2.0 | FLY FLYF407ZG | Fysetc Spider | BTT Octopus | . Next: Software Configuration . ",
    "url": "/build/software/#firmware-flashing",
    "relUrl": "/build/software/#firmware-flashing"
  },"98": {
    "doc": "Voron Documentation",
    "title": "Voron Documentation",
    "content": "Welcome to the world of Voron 3D printers! . This is the Voron Documentation site. All of the information needed to go from zero to a working Voron printer can be found here. If this is the first time building a Voron printer (especially if this is the first 3D printer), it is strongly suggested to build 100% to spec using the documentation provided here. The spec configurations have been tested extensively and are well supported. Credits . ",
    "url": "/",
    "relUrl": "/"
  },"99": {
    "doc": "Mechanical Assembly",
    "title": "Mechanical Assembly",
    "content": " ",
    "url": "/build/mechanical/",
    "relUrl": "/build/mechanical/"
  },"100": {
    "doc": "Mechanical Assembly",
    "title": "Tips",
    "content": "General . | Avoid excessive force! | Take your time, measure twice. | This is not rocket science (it’s garden tools), we do not need 0.001mm precision. | . Frame . | A granite countertop or other similarly flat surface will assist with extrusion alignment to ensure a square frame | Measure diagonals to check squareness - measurements should be &lt; 2mm different. | Extrusions that are attached using blind joints may rotate. This will be prevented by the panel corners and skirts later in the build | . Idler / drive unit assembly . | M5 standard washer thickness is 1mm ±0.2mm, so washer counts in the manual are meant as guidance. As an option, you may purchase 1mm thick shims which have tighter tolerances. It may be useful to have 0.5mm washers at hand to align pulleys and bearings optimally in your build or to swap in and out to ensure proper fitment | Make sure your toothed pulleys are GT2/2GT! | Make sure your pulleys do not wobble. Rotate them on a shaft and look for eccentric movement of the teeth. The flanges are not critical | Use genuine Gates GT2/2GT belts for the open loop belts–off brand/generic GT2/2GT belt is commonly wider than 6mm which will cause it to ride up on the flanges of the idler bearings | . Belts . | Make sure that both A/B or X/Z (Switchwire) belts are of equal length! This helps validate belt paths and tension during assembly. | If using a belted Z (V2), make sure all Z belts are the same length. This helps with tensioning. | Do not cut belts flush once assembled, leave an inch or two for adjustments or reassembly | . Gantry Assembly . | The gantry can be assembled and belted before you install it in the frame. Measure the outer width of the gantry before tightening to make sure it is correct | Routing the belt in the a/b drives looks tricky, but there are several ways to ease this: . | Fix something stiff like a cable tie or some wire to the end of the belt to help with routing | Use dental picks to guide the belt | . | For V2, Z joint screws should not be too tight to allow movement when doing quad gantry adjustments | For V1, V2, and Legacy, gantry should be squared with equal belt tension. See the guide for setting gantry belt tension. | Measure both diagonals to ensure squareness | . Bed . | Bed screws should always be left slightly loose during initial assembly and finished tightening while bed is heated after a few heating cycles. | Trident and V2 should firmly tighten one screw, then slightly tighten 2 others. (V2 can leave one screw alone) | V0 is leveled using the bed screws and has a different process. | . | . ",
    "url": "/build/mechanical/#tips",
    "relUrl": "/build/mechanical/#tips"
  },"101": {
    "doc": "Mechanical Assembly",
    "title": "Build Manuals",
    "content": " ",
    "url": "/build/mechanical/#build-manuals",
    "relUrl": "/build/mechanical/#build-manuals"
  },"102": {
    "doc": "Mechanical Assembly",
    "title": "V0",
    "content": "Current . V0.1 Assembly Manual . Historical . | V0 Assembly Manual | V0 Pocketwatch Manual | V0 Dozuki Guides | . ",
    "url": "/build/mechanical/#v0",
    "relUrl": "/build/mechanical/#v0"
  },"103": {
    "doc": "Mechanical Assembly",
    "title": "V1",
    "content": "Historical . | V1.8 Assembly Manual | V1.6 Assembly Manual | V1.6 Dozuki Guides | V1.5 Documentation | V1.0 Documentation | . ",
    "url": "/build/mechanical/#v1",
    "relUrl": "/build/mechanical/#v1"
  },"104": {
    "doc": "Mechanical Assembly",
    "title": "Trident (Replaces V1)",
    "content": "Trident Assembly Manual V1 Upgrade Manual . ",
    "url": "/build/mechanical/#trident-replaces-v1",
    "relUrl": "/build/mechanical/#trident-replaces-v1"
  },"105": {
    "doc": "Mechanical Assembly",
    "title": "V2",
    "content": "Current . V2.4r2 Assembly Manual . Historical . | V2.4 Assembly Manual | V2.2 Assembly Manual | V2.1 Assembly Manual | . ",
    "url": "/build/mechanical/#v2",
    "relUrl": "/build/mechanical/#v2"
  },"106": {
    "doc": "Mechanical Assembly",
    "title": "Switchwire",
    "content": "Current . | Switchwire Assembly Manual | . ",
    "url": "/build/mechanical/#switchwire",
    "relUrl": "/build/mechanical/#switchwire"
  },"107": {
    "doc": "Mechanical Assembly",
    "title": "Legacy",
    "content": "Current . (coming soon) . Next: Electrical Wiring . ",
    "url": "/build/mechanical/#legacy",
    "relUrl": "/build/mechanical/#legacy"
  },"108": {
    "doc": "Community Documentation",
    "title": "Community Documentation",
    "content": "This is a repository of the tremendous amount of knowledge that has been put together by Voron owners. ",
    "url": "/community/",
    "relUrl": "/community/"
  },"109": {
    "doc": "Troubleshooting",
    "title": "Troubleshooting",
    "content": "| Guide Name / Link | Author | . | Blob of Death | 120decibell | . | Klipper Common Errors | eddie | . | printer.cfg Changes | shiftingtech | . | Rail Misalignment Causing Twist | badnoob | . | Twisted X Extrusion Diagnostics | Bryansj | . ",
    "url": "/community/troubleshooting/",
    "relUrl": "/community/troubleshooting/"
  },"110": {
    "doc": "Custom Macros",
    "title": "Macros",
    "content": "Macros are an essential tool for configuring and managing Klipper. A number of macros are pre-defined in the example configurations but a lot more is possible. Klipper macros are always in the following format: . [gcode_macro &lt;macro_name&gt;] gcode: &lt;gcode&gt; &lt;gcode&gt; . Important: The tab / spaces before the gcode is required. ",
    "url": "/community/macros/#macros",
    "relUrl": "/community/macros/#macros"
  },"111": {
    "doc": "Custom Macros",
    "title": "Required / Pre-built",
    "content": "To see examples of the macros themselves, look at the standard printer.cfg for the printer. Homing Override / Safe Z Home . By default, all printers are setup with a [homing_override] configuration section that includes a gcode macro for the home process. This macro is updating during thee setup process to define the Z endstop location. However the homing override method always homes X and Y before homing Z. The [safe_z_home] configuration allows for a Z homing process without requiring a repeat home of X and Y. To enable safe z homing disable homing override and provide a X,Y coordinate of your Z endstop pin. Be aware that enabling safe Z home will likely require a change in other processes / macros. [safe_z_home] home_xy_position: 175.5,253 z_hop: 5.0 . G32 . The G32 macro is included with the stock configuration for most printers. This is typically used as a “full home” process that will home and perform leveling / tilt adjustments. PRINT_START . The PRINT_START macro is called at the start of every print by slicers that are confgured to be aware of it. PRINT_END . The PRINT_END macro is called at the end of every print by slicers that are configured to be aware of it. ",
    "url": "/community/macros/#required--pre-built",
    "relUrl": "/community/macros/#required--pre-built"
  },"112": {
    "doc": "Custom Macros",
    "title": "User Macros",
    "content": "| Creator | Macros | Bed Size | . | 120decibell | CG28, G32, G141, PURGE_BUCKET, TEST_SPEED_FAST | 350mm | . Contributors - please make sure your macros are well documented! . ",
    "url": "/community/macros/#user-macros",
    "relUrl": "/community/macros/#user-macros"
  },"113": {
    "doc": "Custom Macros",
    "title": "Custom Macros",
    "content": " ",
    "url": "/community/macros/",
    "relUrl": "/community/macros/"
  },"114": {
    "doc": "How-To's",
    "title": "How-To’s",
    "content": "Community-generated documentation for the many items that the official guide may not cover. | Guide Name / Link | Author | . | Calculating Driver Current Settings | 120decibell | . | Chamber Temperature Exhaust Fan | alchemyEngine | . | IGUS Chain Ordering Guide | AMonkeyButler | . | Installing a Bed Heater with RTV | Fulg | . | Installing BetterBootLoader on a SKR | kage-chan | . | Z Endstop Configuration | 120decibell | . | I wish I had known | simonthecat | . | Automating Klipper MCU Updates | Drachenkatze | . | Switchwire Screws Adjust | DoubleT | . | Print Tuning Guide | Ellis | . | Multi-Colour Prints with a Single Nozzle | mikhail | . | Custom Raspberry Pi Boot screens | samwiseg0 | . | Klicky Probe as Endstop with constant Z Offset | Takuya &amp; Clee | . | Setting Up and Calibrating Sensorless XY Homing | clee | . External Links . | Assembling Limit Switches | Changing OctoPi Hostname | Cleaning and greasing Linear Rails Be sure to read the description first | Drill and Counterbore Voron Bed | Printed 80t pulley assembly | RAMPS 24V Conversion | . ",
    "url": "/community/howto/#how-tos",
    "relUrl": "/community/howto/#how-tos"
  },"115": {
    "doc": "How-To's",
    "title": "How-To's",
    "content": " ",
    "url": "/community/howto/",
    "relUrl": "/community/howto/"
  },"116": {
    "doc": "Slicer Setup",
    "title": "Slicer Setup",
    "content": "All modern mainstream slicers are able to produce high quality prints when properly configured for your printer. The Voron community maintains a set of slicer profiles that you can use as a known good starting point for further tuning. Proper understanding of slicer settings will have a tremendous impact on print results. Try to learn more about your favorite slicer and tweak the settings to meet your needs. While using different slicers for different kinds of prints can be beneficial avoid blindly hopping between slicers and slicer profiles just because someone posted a nice print sliced with a different slicer. ",
    "url": "/build/slicer/",
    "relUrl": "/build/slicer/"
  },"117": {
    "doc": "Slicer Setup",
    "title": "Slicer Selection",
    "content": "There are two slicers that come with built in profiles for most Voron printers: . | Cura | Super Slicer | . Other slicers that can be configured to support Voron printers but do not have built in support: . | Prusa Slicer | Simplify3D | Slic3r | . Some slicers (e.g. PrusaSlicer) do not recognize the Klipper PRINT_START macro as a valid start macro and add an additional bed heat and nozzle heat to the start gcode. If examination of the output gcode shows an M109 and/or M190 before the PRINT_START macro, consider using a different or newer slicer that recognizes that macro as a valid start macro. ",
    "url": "/build/slicer/#slicer-selection",
    "relUrl": "/build/slicer/#slicer-selection"
  },"118": {
    "doc": "Slicer Setup",
    "title": "Slicer Profile Creation",
    "content": "Both Cura and SuperSlicer (in current versions) have built-in profiles for V2 printers which can be setup usin each software’s normal processes. The V1 is similar enough to V2 that the profile can be re-used. Some pre-built slicer profiles are available from Voron. | Voron 2.4 - PrusaSlicer / SuperSlicer | Voron 2.4 - Cura | . Profile generation for V0 and Switchwire is ongoing. ",
    "url": "/build/slicer/#slicer-profile-creation",
    "relUrl": "/build/slicer/#slicer-profile-creation"
  },"119": {
    "doc": "Slicer Setup",
    "title": "Preheat and Start Sequences",
    "content": "For maximum quality and accuracy, preheating the printer is recommended. This can be part of a scripted process or separate. A preheat of at least 10 minutes is highly recommended in order to bring all components to thermal expansion equilibrium. This time may vary depending on many factors including the size of the printer and bed heater. _ In testing, a 350^3 V2 grew 0.2mm in height after heating up for an hour._ . Every printer is going to have a start sequence that typically involves homing and/or leveling to prepare the printer. This is in addition to heating the nozzle and bed and doing other tasks. Look at the PRINT_START macro in the printer.cfg for the standard process. For additional information or ideas, check the macros page. Next: First Print . ",
    "url": "/build/slicer/#preheat-and-start-sequences",
    "relUrl": "/build/slicer/#preheat-and-start-sequences"
  },"120": {
    "doc": "Tuning Guides",
    "title": "Tuning Guides",
    "content": "Tuning steps and processes after everything is working. ",
    "url": "/tuning/",
    "relUrl": "/tuning/"
  },"121": {
    "doc": "Initial Startup",
    "title": "Initial Startup Checks",
    "content": "This section provides a list of steps to help confirm the pin settings in the Klipper printer.cfg file. During this guide, it may be necessary to make changes to the Klipper config file. Be sure to issue a RESTART command after every change to the config file to ensure that the change takes effect (type “restart” in the Octoprint or Mainsail terminal and then click “Send”). It’s also a good idea to issue a STATUS command after every RESTART to verify that the config file is successfully loaded. Any time commands are requested to be issued, those will happen in the ‘Terminal’ tab of the OctoPrint, Mainsail, or Fluidd web UI, in the box for entering commands directly. Any time movements need to be made, those will happen in the ‘Control’ tab / section of the Octoprint, Mainsail, or Fluidd web UI. The numbers underneath X, Y, and Z control the movement distance. ",
    "url": "/build/startup/#initial-startup-checks",
    "relUrl": "/build/startup/#initial-startup-checks"
  },"122": {
    "doc": "Initial Startup",
    "title": "Verify Temperature",
    "content": "Start by verifying that temperatures are being properly reported. Navigate to the Octoprint/Mainsail temperature graph. Verify that the temperature of the nozzle and bed are present and not increasing. If it is increasing, remove power from the printer. If the temperatures are not accurate, review the “sensor_type” and “sensor_pin” settings for the extruder and/or bed. ",
    "url": "/build/startup/#verify-temperature",
    "relUrl": "/build/startup/#verify-temperature"
  },"123": {
    "doc": "Initial Startup",
    "title": "Verify heaters",
    "content": "Navigate to the OctoprintMainsail temperature graph and type in 50 followed by enter in the “Tool” temperature target feild. The extruder temperature in the graph should start to increase (within about 30 seconds or so). Then go to the “Tool” temperature drop-down box and select “Off”. After several minutes the temperature should start to return to its initial room temperature value. If the temperature does not increase then verify the “heater_pin” setting in the config. perform the above test again with the bed. ",
    "url": "/build/startup/#verify-heaters",
    "relUrl": "/build/startup/#verify-heaters"
  },"124": {
    "doc": "Initial Startup",
    "title": "Stepper Motor Check",
    "content": "To verify that each stepper motor is operating correctly, send the following command in the terminal: . STEPPER_BUZZ STEPPER=stepper_x . Run this command for each of the motors: . V0, SW . | stepper_x | stepper_y | stepper_z | extruder | . V1, Legacy . | stepper_x | stepper_y | stepper_z | stepper_z1 | extruder | . Trident . | stepper_x | stepper_y | stepper_z | stepper_z1 | stepper_z2 | extruder | . V2 . | stepper_x | stepper_y | stepper_z | stepper_z1 | stepper_z2 | stepper_z3 | extruder | . The STEPPER_BUZZ command will cause the given stepper to move one millimeter in a positive direction and then it will return to its starting position. (If the endstop is defined at position_endstop=0 then at the start of each movement the stepper will move away from the endstop.) It will perform this oscillation ten times. If the stepper does not move at all, then verify the “enable_pin” and “step_pin” settings for the stepper. If the stepper motor moves but does not return to its original position then verify the “dir_pin” setting. If the stepper motor oscillates in an incorrect direction, then it generally indicates that the “dir_pin” for the axis needs to be inverted. This is done by adding a ‘!’ to the “dir_pin” in the printer config file (or removing it if one is already there). If the motor moves significantly more or significantly less than one millimeter then verify the “rotation_distance” setting. V2 motor positions (Others may vary) . ",
    "url": "/build/startup/#stepper-motor-check",
    "relUrl": "/build/startup/#stepper-motor-check"
  },"125": {
    "doc": "Initial Startup",
    "title": "Endstop Check",
    "content": "Make sure that none of the X, Y, or Z endstops are being pressed. Then send a QUERY_ENDSTOPS command. The terminal window should respond with the following: . Send: QUERY_ENDSTOPS Recv: x:open y:open z:open . If any of them say “triggered” instead of “open”, double-check to make sure none of them are pressed. Next, manually press the X endstop switch, send the QUERY_ENDSTOPS command again, and make sure that the X enstop says “triggered and the Y and Z endstops stay open. Repeat with the Y and Z endstops. If it is found that one of the endstops has inverted login (i.e. it reads as “open” when it is pressed and “triggered” when not pressed), go into the printer configuration file (typically printer.cfg) and add or remove the ! in front of the pin identifier. For example, if the X endstop was inverted, add a ! in front of the pin number as follows: . endstop_pin: P1.28 -&gt; endstop_pin: !P1.28 . ",
    "url": "/build/startup/#endstop-check",
    "relUrl": "/build/startup/#endstop-check"
  },"126": {
    "doc": "Initial Startup",
    "title": "XY Homing Check",
    "content": "At this point everything is ready to home X and Y. Important: You need to be able to quickly stop the printer in case something goes wrong (e.g. the tool head goes the wrong direction). There are a few ways of doing this: . | Use the E-stop button on the display (if installed). On the Mini12864 it is the small button underneath the main control knob. Test the button and see what happens - Klipper should shut down. Raspberry Pi and OctoPrint/Mainsail/Fluidd should still be running but disconnected from Klipper. Press “Connect” in the upper left corner of OctoPrint, then in the Octoprint terminal window send a FIRMWARE_RESTART to get the printer back up and running. | Have a computer right next to the printer with the RESTART or M112 command already in the terminal command line in OctoPrint. When you start homing the printer, if it goes in the wrong direction, quickly send the restart command and it will stop the printer. | As a “nuclear” option, power off the printer with the power switch if something goes wrong. This is not ideal because it may corrupt the files on the SD card and to recover would require reinstalling everything from scratch. | . Once there is a tested process for stopping the printer in case of something going wrong, you can test X and Y movement. note: you will need to test X AND Y before you can correctly determine what adjustments are needed. First, send a G28 X command. This will only home X: The tool head should move up slightly and then move to the right until it hits the X endstop. If it moves any other direction, abort, take note, but still move on to testing Y. Next, test Y: run G28 Y. The toolhead should move to the back of the printer until it hits the Y endstop. In a CoreXY configuration, both motors have to move in order to get the toolhead to go in only and X or Y direction (think Etch A Sketch). If the gantry moves downward first before moving to the right, you must reverse your z stepper directions in the config. If either axis does not move the toolhead in the expected or correct direction, refer to the table below to figure out how to correct it. If you need to invert the direction of one of the motors, invert the direction pin definition by adding a ! to the pin name. For example, dir_pin: PB2 would become dir_pin: !PB2. (if the entry already has a !, remove it instead). If the motors are going in directions that match the lower row of the chart, physically swap your X and Y (A and B) motor connectors on the MCU. | [stepper x] = Motor B | [stepper y] = Motor A | . ",
    "url": "/build/startup/#xy-homing-check",
    "relUrl": "/build/startup/#xy-homing-check"
  },"127": {
    "doc": "Initial Startup",
    "title": "Motor Configuration Guides",
    "content": "V0: . V1, Legacy: . Trident: . V2: . SW: . Important: Do not unplug or re-plug motors from MCUs without powering down the printer. Damage to MCU may result. ",
    "url": "/build/startup/#motor-configuration-guides",
    "relUrl": "/build/startup/#motor-configuration-guides"
  },"128": {
    "doc": "Initial Startup",
    "title": "Bed locating (V2)",
    "content": "The print bed location of the V2 is much more adjustable than on any of the other models. Before the 0,0 point and Z endstop locations are set, the physical locations of the Z endstop and print bed need to be finalized. The Z endstop should be located to be in line with the nozzle, when the toolhead is at max Y position. Home X and Y with G28 X Y and then traverse just X to locate a Z endstop position at the maximum Y travel that will still trigger the endstop. Lock down the Z endstop at that position. Once the Z endstop is fixed into position the base plate should be adjusted so that the Z endstop pin is approximately 2-3mm from the aluminum base plate. The base plate should be measured on each side to ensure it is centered and level / even with the front edge of the frame. If in that process the extrusions the base is mounted on have to be moved, double-check the Z endstop to confirm it can still be reached. When tightening the mounting screws for the bed, a good practice is to have one screw tight, 2 firm, and the last one loose (best done hot). ",
    "url": "/build/startup/#bed-locating-v2",
    "relUrl": "/build/startup/#bed-locating-v2"
  },"129": {
    "doc": "Initial Startup",
    "title": "Bed locating (V1, Trident, Legacy)",
    "content": "Before the 0,0 point and Z endstop locations are set, the physical locations of the Z endstop and print bed need to be finalized. The Z endstop should be located at close to max X position. Home X and Y with G28 X Y and then traverse just Y to locate a Z endstop position at the maximum X travel that will still trigger the endstop. Lock down the Z endstop at that position. Once the Z endstop is fixed into position the base plate should be adjusted so that the Z endstop pin is approximately 2-3mm from the aluminum base plate. ",
    "url": "/build/startup/#bed-locating-v1-trident-legacy",
    "relUrl": "/build/startup/#bed-locating-v1-trident-legacy"
  },"130": {
    "doc": "Initial Startup",
    "title": "Define 0,0 Point (V0, V1, Trident, V2, Legacy)",
    "content": "The homing position is not at the typical location of 0,0 but at the maximum travel location. The actual numbers vary by printer build size. Depending on bed location, the positional parameters may need to be adjusted to re-locate the 0,0 point. | Start by re-running G28 X Y to home X and Y. After this, the nozzle will be at the maximum X,Y as defined by position_max under [stepper_x] and [stepper_y]. | Using the OctoPrint or Mainsail controls, move the nozzle to the front left corner of the bed. | If the from left corner of the bed cannot be reached within 3-5mm, the bed location needs to be physically adjusted (if possible). Move the bed on the extrusions or move the extrusions to get the bed location within range. | For V2, Make sure whatever bed position results still allows the nozzle to reach the Z endstop switch (See ‘Bed Locating’). | If questionable, turn off motors and attempt to move the gantry by hand to see if the front left corner can physically be reached by the nozzle. | . | Once the nozzle is close to the front left corner of the bed but still on the bed, send an M114 command to retrieve the current location. | Note: Due to other tolerances, it is usually not recommended to have the 0,0 exactly on the corner of the bed or build surface. Spec bed sizes are always slightly larger than the defined print volume so print volume loss will be minimal. | . | . If X and Y offsets are less than 1mm and 0,0 is over the bed, nothing needs to be changed. If X and Y offsets are within 5mm or 0,0 is past the bed, the postition_max values should be adjusted to change where the 0,0 point is computed. If the 0,0 is over the bed, the distance from the home point to the front left (position_max) must be increased. If the 0,0 is past the bed, the distance must be decreased. The amount is determined by the output of the M114 command. Update position_max and position_endstop for both [stepper_x] and [stepper_y] as follows: . | For X: New = Current - Get Position X (M114) Result | For Y: New = Current - Get Position Y (M114) Result | . If the Z endstop pin location has been previously defined, be sure to re-follow the process to set the Z endstop pin location (if applicable). If anything is updated in the printer configuration file, save the file and restart Klipper using FIRMWARE_RESTART. ",
    "url": "/build/startup/#define-00-point-v0-v1-trident-v2-legacy",
    "relUrl": "/build/startup/#define-00-point-v0-v1-trident-v2-legacy"
  },"131": {
    "doc": "Initial Startup",
    "title": "Z Endstop Pin Location (V1, Trident, V2, Legacy)",
    "content": ". | Start by re-running G28 X Y to home X and Y. | Using the software controls, move the nozzle until it is directly over the Z endstop switch. | Send an M114 command and record the X and Y values. | Update the homing routing in the printer configuration file under [homing_override] or [safe_z_home] with those values. | Restart Klipper with FIRMWARE_RESTART. | Run a full G28 and make sure that the printer properly homes X, Y, and Z. | . ",
    "url": "/build/startup/#z-endstop-pin-location-v1-trident-v2-legacy",
    "relUrl": "/build/startup/#z-endstop-pin-location-v1-trident-v2-legacy"
  },"132": {
    "doc": "Initial Startup",
    "title": "Z Endstop Location (V0)",
    "content": "The V0 uses the bed assembly to contact the Z endstop switch via an adjustable screw in the T8 nut block. Ideally the activation of that switch will be at the exact bed height at which your nozzle also reaches the bed surface. However there is a window of travel from the moment that switch is activated to the point at which that switch bottoms out, this window is about 0.6mm. by using the adjustable screw in the T8 nut block and by being able to physically move the endstop switch up or down along the extrusion you need to position these so that the point at which your nozzle touches the bed (your Z0 point) happens within that 0.6mm window of travel. You can then use the ENDSTOP_CALIBRATEroutine to then tell your printer where within that window you land, or in other words, what the offset between the z0 position and the endstop trigger point is. ",
    "url": "/build/startup/#z-endstop-location-v0",
    "relUrl": "/build/startup/#z-endstop-location-v0"
  },"133": {
    "doc": "Initial Startup",
    "title": "Inductive Probe Check (V1, Trident, V2, Switchwire, Legacy)",
    "content": "Probe Testing . With the toolhead in the center of the bed, reconfirm that the probe is working correctly. When it is far from the bed, QUERY_PROBE should return “open”. When a metal object is close to the probe, QUERY_PROBE should return “triggered”. If the signal is inverted, add a “!” In front of the pin definition (ie, pin: ! z:P1.24). Slowly reduce your Z height and run QUERY_PROBE each time until QUERY_PROBE returns “triggered” - make sure the nozzle is not touching the print surface (and has clearance). Probe Accuracy Check . With the bed and hotend cold (for now), move the probe to the center of the bed and run PROBE_ACCURACY. It will probe the bed 10 times in a row and output a standard deviation value at the end. Make sure that the sensed distance is not trending (gradually decreasing or increasing over the 10 probes) and that the standard deviation is less than 0.003mm. Example of unstable PROBE_ACCURACY (trending downward during warm up). Send: PROBE_ACCURACY Recv: // PROBE_ACCURACY at X:125.000 Y:125.000 Z:7.173 (samples=10 retract=2.000 speed=2.0 Send: M105 Recv: // probe at 125.000,125.000 is z=4.975000 Recv: // probe at 125.000,125.000 is z=4.960000 Recv: // probe at 125.000,125.000 is z=4.955000 Recv: // probe at 125.000,125.000 is z=4.952500 Recv: // probe at 125.000,125.000 is z=4.950000 Recv: // probe at 125.000,125.000 is z=4.947500 Recv: // probe at 125.000,125.000 is z=4.942500 Recv: // probe at 125.000,125.000 is z=4.937500 Recv: // probe at 125.000,125.000 is z=4.937500 Recv: // probe at 125.000,125.000 is z=4.932500 Recv: // probe accuracy results: maximum 4.975000, minimum 4.932500, range 0.042500, average 4.949000, median 4.948750, standard deviation 0.011948 . ",
    "url": "/build/startup/#inductive-probe-check-v1-trident-v2-switchwire-legacy",
    "relUrl": "/build/startup/#inductive-probe-check-v1-trident-v2-switchwire-legacy"
  },"134": {
    "doc": "Initial Startup",
    "title": "PID Tune Bed &amp; Hotend",
    "content": "The PID tune is important for tuning the printer for a given hardware configuration to ensure that temperatures can remain as stable as possible during operation. PID Tune Heated Bed . Move nozzle to the center of the bed and approximately 5-10mm above the bed surface, then run: . PID_CALIBRATE HEATER=heater_bed TARGET=100 . It will perform a PID calibration routine that will last about 10 minutes. Once it is finished, type SAVE_CONFIG which will save the parameters into your configuration file. PID Tune Hotend . Set the part cooling fans to 25% (M106 S64) and then run: . PID_CALIBRATE HEATER=extruder TARGET=245 . It will perform a PID calibration routine that will last about 5 minutes. Once it is finished, type SAVE_CONFIG which will save the parameters into your configuration file. ",
    "url": "/build/startup/#pid-tune-bed--hotend",
    "relUrl": "/build/startup/#pid-tune-bed--hotend"
  },"135": {
    "doc": "Initial Startup",
    "title": "Bed Leveling",
    "content": "Depending on the printer type and capability, the following command(s) are used: . | V0: BED_SCREWS_ADJUST | V1, SW, Legacy: Z_TILT_ADJUST, SCREWS_TILT_CALCULATE | V2: QUAD_GANTRY_LEVEL | . Bed Screws (V0) . The V0 uses manual bed leveling, the bed is small enough and thick enough that a mesh or other types of per print leveling are not needed. there is a Macro in Klipper to help with the manual bed leveling process  BED_SCREWS_ADJUST . This tool will move the printer’s nozzle to each screw XY location and then move the nozzle to a Z=0.3 height. At this point one can use the “paper test” to adjust the bed screw directly under the nozzle. See the information described in “the paper test”, but adjust the bed screw instead of commanding the nozzle to different heights. Adjust the bed screw until there is a small amount of friction when pushing the paper back and forth. this process will move all three mounting points of your bed closer to the nozzle so it is critical that you re-run the Z offset adjust after completing this section. Once the screw is adjusted so that a small amount of friction is felt, run either the ACCEPT or ADJUSTED command. Use the ADJUSTED command if the bed screw needed an adjustment (typically anything more than about 1/8th of a turn of the screw). Use the ACCEPT command if no significant adjustment is necessary. Both commands will cause the tool to proceed to the next screw. (When an ADJUSTED command is used, the tool will schedule an additional cycle of bed screw adjustments; the tool completes successfully when all bed screws are verified to not require any significant adjustments.) One can use the ABORT command to exit the tool early. After the BED_SCREWS_ADJUST command has been completed rerun the Z_ENDSTOP_CALIBRATE command to to bring your nozzle to the correct Z=0 position. Bed Tilt (V1, Legacy) . The V1 and Legacy use a combination of automated and manual bed leveling. There are two macros built into Klipper to assist with the function. First run the BED_TILT macro. This will go back and forth between the predefined points to level the two Z motors. This setting is dynamically changed and nothing will need to be saved. Second run the SCREWS_TILT_CALCULATE macro. It will check the 3 positions defined in the [screws_tilt_adjust section] of printer.cfg for level, then return how much to adjust the front thumbscrew by. Re-run the process at least one more time to verify the adjustment. After both processes have been completed rerun the Z_ENDSTOP_CALIBRATE command to to bring your nozzle to the correct Z=0 position. Z Tilt (Trident) . The Trident uses automated bed leveling using 3 motors. There is a macro Z_TILT_ADJUST built into Klipper for that function. It is very similar to the QUAD_GANTRY_LEVEL used by V2, but supports 3 or more motors. Run the Z_TILT_ADJUST and it will probe each of the 3 points 3 times, average the readins, then make adjustments until the grantry is level. After that process has been completed, rehome z by running G28 Z, and then rerun the Z_ENDSTOP_CALIBRATE command to to bring your nozzle to the correct Z=0 position. Quad Gantry Level (V2) . Since the V2 uses 4 independent Z motors, the entire gantry system must be specially levelled. The macro to call this process is QUAD_GANTRY_LEVEL (sometimes referred to in conversation as ‘QGL’). It will probe each of 4 points 3 times, average the readings, then make adjustments until the gantry is level. If the process fails due to an “out of bounds” error, disable your stepper motors and slowly move your gantry or bed by hand until it is approximately flat. Re-home your printer (G28) and then rerun the sequence. You may have to run it more than once. Make sure that the adjustment value for each stepper motor converges to 0. If it diverges, check to make sure you have your stepper motors wired to the correct stepper driver (check documentation). Tilt / QGL With Heated Bed and Chamber (V1, Trident, V2) . Run a G28 command to home the printer since a SAVE_CONFIG restarts the printer. This will be the first time that a Quad Gantry Level has been run at a high chamber temperature. To ensure that the probe has stabilized with the heated bed at 100C and the hot end at 240C, run PROBE_ACCURACY with the nozzle at the center of the bed. If the values are trending (increasing or decreasing) throughout the 10 probes or the standard deviation is greater than 0.003mm, wait another 5 minutes and try again. Once the readings are stable, run Z_TILT_ADJUST or QUAD_GANTRY_LEVEL. Make a note of how long the probe readings took to stabilize for when starting prints - typically a cold printer takes 10-20 minutes to stabilize at temperature. Common QGL Problems . | If the QGL is having issues with too high of a standard deviation and the printer is heated and stable, check Z belt tension. Make sure they are reasonably tight and even. | If QGL fails with being unable to reach the probe in time, do a FIRMWARE_RESTART, manually level the bed as closely as possible, then home (G28) and re-attempt. | . Bed Mesh Only (Switchwire) . Crazy things. More to come. ",
    "url": "/build/startup/#bed-leveling",
    "relUrl": "/build/startup/#bed-leveling"
  },"136": {
    "doc": "Initial Startup",
    "title": "Z Offset Adjustment",
    "content": "If you did not run PID tuning, set your extruder to 245C and heated bed to 100C and let the printer heat up for at least 15 minutes. Initial / Simple Process . Preparation . | V1: Run a G28, and then a Z_TILT_ADJUST, and then another G28. | V2: Run a G28, and then a QUAD_GANTRY_LEVEL, and then another G28. | All others: Run a G28. | Move the nozzle to the center of the bed if it is not already. | Clear any stored bed meshes with BED_MESH_CLEAR | . Run Z_ENDSTOP_CALIBRATE (V0, Trident, V2) or PROBE_CALIBRATE (Switchwire) . Slowly move the nozzle toward the bed by using TESTZ Z=-1 Until the nozzle is relatively close to the bed, and then stepping down with TESTZ Z=-0.1 Until the nozzle touches a piece of paper on top of the build plate. If you go far down, you can move the nozzle back up with: TESTZ Z=0.1 Once you are satisfied with the nozzle height, run ACCEPT and then SAVE_CONFIG. Important: Klipper assumes that this process is being done cold. If being performed hot, do an additional TESTZ Z=-0.1 before accepting. If an “out of bounds” error occurs, send Z_ENDSTOP_CALIBRATE, ACCEPT, and then SAVE_CONFIG. This will redefine the 0 bed height so you will be able to get closer. V2: If you get this error it likely means that the shaft for your Z Endstop is too long and may catch on the print head during a print. It is best to cut the shaft or raise the bed (with a washer, for instance) so that it is within 1mm of the build surface. Fine Tuning Z Height . With LCD Screen . The Z offset can be adjusted during a print using the Tune menu on the display, and the printer configuration can be updated with this new value. Remember that higher values for the position_endstop means that the nozzle will be closer to the bed. Mainsail and Fluidd . The “babystepping” controls may be used to fine tune the z offset. Without LCD Screen . If you’re running your printer headless, the Z height can still be adjusted on-the-fly using the web interface. This is built into Mailsail and Fluidd, but requires some additional work for Octoprint. 1) (Optional) Create macros in your printer.cfg file so that the commands are easier to remember/run: . [gcode_macro ZUP] gcode: SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1 [gcode_macro ZDOWN] gcode: SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1 . 2) Run ZUP or ZDOWN (or the associated SET_GCODE_OFFSET command) as needed in the terminal window until you have perfected your squish. 3) Run GET_POSITION and look for “gcode base”. Note the Z value. Saving your results (V0,Trident, V2) . All of the above methods are “transient”. The changes are lost as soon as your printer restarts. Once you find an adjustment you are happy with, you may make it permanent, by applying it to the position_endstop in your config file: run the command Z_OFFSET_APPLY_ENDSTOP followed by SAVE_CONFIG. This will restart your printer, with the adjustment permanently applied to the endstop position. Saving your results (Switchwire) . All of the above methods are “transient”. The changes are lost as soon as your printer restarts. Once you find an adjustment you are happy with, you may make it permanent, by applying it to the probe’s z_offset in your config file: run the command Z_OFFSET_APPLY_PROBE followed by SAVE_CONFIG. This will restart your printer, with the adjustment permanently applied to the probe offset. Community References . Z Endstop Configuration . ",
    "url": "/build/startup/#z-offset-adjustment",
    "relUrl": "/build/startup/#z-offset-adjustment"
  },"137": {
    "doc": "Initial Startup",
    "title": "Extruder Calibration (e-steps)",
    "content": "Before the first print,make sure that the extruder extrudes the correct amount of material. | With the hotend at temperature, make a mark between your roll of filament and your extruder, between 120mm and 150mm away from the entrance to the extruder. Measure the distance from the extrance of the extruder to that mark. | In Octoprint / Mailsail, extrude 50mm 2 times (for a total of 100mm since Klipper doesn’t allow you to extrude more than 50mm at a time). | Measure from the entrance of your extruder to the mark you made previously. | In a perfect world, assuming the mark is at 120mm, it would measure 20mm (120mm - 20mm = 100mm), but usually won’t be. | . | Update rotation_distance in the extruder section of the configuration file using this formula: . | New Config Value = Old Config Value * (Actual Extruded Amount/Target Extruded Amount) | . | . Note: a higher configuration value means that less filament is being extruded. Paste the new value into the configuration file, restart Klipper, and try again. Once the extrusion amount is within 0.5% of the target value (ie, 99.5-100.5mm for a target 100mm of extruded filament), the extruder is calibrated! . Typical rotation_distance values should be around 22.6789511 for Afterburner and Mobius (update gear_ratio to 80:20 for Mobius). Next: Slicer Setup . ",
    "url": "/build/startup/#extruder-calibration-e-steps",
    "relUrl": "/build/startup/#extruder-calibration-e-steps"
  },"138": {
    "doc": "Initial Startup",
    "title": "Initial Startup",
    "content": " ",
    "url": "/build/startup/",
    "relUrl": "/build/startup/"
  },"139": {
    "doc": "The Build",
    "title": "The Build",
    "content": "This guide contains all the the steps to go from a pile of parts to a functioning printer with a known working configuration. Please read the guide carefully, there are many details that seem trivial but are included because one or more people got stuck at these points. We as a community want to make sure that everyone has the best experience possible. If you find something confusing and would like clarification, that likely means someone else in the past or future will also find it difficult. Please reach out and we will gladly update the document! . This guide designed to be a “universal” setup guide that can be used across all printers in the Voron lineup. If you are building a printer and there is a section marked for a different printer, that section can be skipped. If you need help and are not there already, please join the Discord! . ",
    "url": "/build/",
    "relUrl": "/build/"
  },"140": {
    "doc": "Electrical Wiring",
    "title": "Electrical Wiring",
    "content": " ",
    "url": "/build/electrical/",
    "relUrl": "/build/electrical/"
  },"141": {
    "doc": "Electrical Wiring",
    "title": "Safety Note",
    "content": "When wiring your printer electronics, you will be working with line voltage wiring (120V / 220V AC). Always double check to make sure your printer is unplugged and the capacitors in the power supplies have discharged before touching any wire or terminal. The recommendations made in here are typically out of an abundance of caution to prevent fires. ",
    "url": "/build/electrical/#safety-note",
    "relUrl": "/build/electrical/#safety-note"
  },"142": {
    "doc": "Electrical Wiring",
    "title": "Risk of Damage",
    "content": "Never plug or unplug any device while the printer is powered. In addition to being a safety hazard, it is very easy to damage electronic components. In particular the stepper drivers can be easily damaged by connecting or disconnecting stepper motors while powered. ",
    "url": "/build/electrical/#risk-of-damage",
    "relUrl": "/build/electrical/#risk-of-damage"
  },"143": {
    "doc": "Electrical Wiring",
    "title": "Tips",
    "content": ". | Depending on your level of expertise it may be useful to practice crimping and soldering before wiring everything up. Bad crimps are a major source of problems later on and sometimes hard to identify! . | AC wiring should be properly dimensioned. Use at least 18 AWG (0.75 mm²) for mains AC wiring, even better would be 16 AWG (1.25 mm²) | Buy a quality SSR (see the official sourcing guide), cheap clones may overheat and fail closed causing a heater thermal runaway. Add a 115-125°C thermal fuse to your bed heater as an additional safety measure | Dont run your bed above 110°C, this reduces the lifespan of the adhesive holding it onto the build plate | If using an AC powered bed, be sure to ground the bed regardless of if the assembly manual specifies it or not. | Grounding the frame is recommended. | . ",
    "url": "/build/electrical/#tips",
    "relUrl": "/build/electrical/#tips"
  },"144": {
    "doc": "Electrical Wiring",
    "title": "Connectors",
    "content": "The recommended MicroFit 3.0 connectors are specified for up to 5A and should be used for all connections to the stepper motors, hotend and limit switches The JST connectors are used for connections to the MCU board(s). JST connnectors are not available as mid-wire connectors so they must be mixed. Adding Molex connectors to all stepper motors is useful. Use a 3pin MLX connector (see the official sourcing guide) to allow your bed to be removable without disconnecting from the SSR directly. The thermistor can use a 2pin Microfit connector. Microfit Pins . When assembling Microfit connectors, the male pins are inserted into the female housings and the female pins are inserted into the male housings. For larger wires, such as heater cartridge wiring, heatshrink tubing is helpful. ",
    "url": "/build/electrical/#connectors",
    "relUrl": "/build/electrical/#connectors"
  },"145": {
    "doc": "Electrical Wiring",
    "title": "Cables",
    "content": "Silicone wiring has been specified because it has a high strand count which means it has higher fatigue life. Silicone insulation withstands heat and is more flexible which is good in high movement applications. It is less prone to snagging on other wires or the walls inside the cable chain. Check your cable loom before installing the chains. PTFE or Heluflon wires are a premium option as they have a thinner insulation and a lower friction coefficient, which increases bending capabilities and decreases wear. But these advantages are most useful in printers that use cable chains. For printers with an umbilical cord cabling setup (V0 Toolhead, Legacy), they might be overkill. Automation cable such as IGUS can be used, but the minimum bend radius of the cable needs to be verified as the typical bend radius for Voron cable chains is very small. See the cable lengths and count section for specific counts. Do not downsize the hot end heater wires, they are oversized for safety reasons. You may add additional wires to your cable chains as a replacement in case of wire breaks. However, these cables will be heated/cooled and moved around as much as your live cables and may be broken already when you need them! So may be better to keep extra wires as spares outside of the printer. Buy some cable holders (e.g. with adhesive) to organize your cables in the electronics compartment. Keep in mind that the adhesive fails over time due to exposure to above room temperature. Cables can be hidden in the rails. Optionally print cable covers for the rails. ",
    "url": "/build/electrical/#cables",
    "relUrl": "/build/electrical/#cables"
  },"146": {
    "doc": "Electrical Wiring",
    "title": "Stepper Motor Wiring",
    "content": "There is no standard either for the color of wire on stepper motors, nor for the order of wires in the connector. As a result, it is often necessary to re-order stepper motor wires even on motors sold specifically for use in Vorons. If you are using the exact BOM motors, the colors shown in the wiring guides should work, however in any other case, you should verify your motor wiring. All control boards currently used with voron expect one winding to be connected on pins 1&amp;2, and the other on pins 3&amp;4. Note that other details, such as identifying winding A vs winding B is not critical. At worst, your motor will run backwards, which you can easily fix later, in software. Identifying Windings . There are 3 basic options for identifying windings: 1) Check the documentation. Many motors come with a card which tells you what wire colors are on the same winding. If there’s no card, the manufacturer’s website may have something. 2) Use a multimeter: put your meter in “continuity” mode. Pick one wire, and then find any other wire that shows continuity with it. Those two wires are on the same winding. By process of elimination, it should be safe to assume the other two represent the other winding. 3) If you don’t have a meter available, you can twist 2 wires together, and then try to spin the shaft of the motor. If the wires are on the same winding, it will become noticably harder to spin the shaft. Symptoms of miswired motors . Traditionally, trying to move a stepper that’s miswired, has either resulted in nothing happening, or a nasty buzzing sound. However, recent versions of klipper will generally detect the miswiring, and simply shutdown. If, during your motor checks, klipper immediately shuts down: check your logs. If there is a wiring issue with your stepper, it will report something like . TMC 'stepper_y' reports DRV_STATUS: 001900d0 s2vsa=1(LowSideShort_A!) ola=1(OpenLoad_A!) olb=1(OpenLoad_B!) CS_ACTUAL=25 Transition to shutdown state: TMC 'stepper_y' reports error: DRV_STATUS: 001900d0 s2vsa=1(LowSideShort_A!) ola=1(OpenLoad_A!) . ",
    "url": "/build/electrical/#stepper-motor-wiring",
    "relUrl": "/build/electrical/#stepper-motor-wiring"
  },"147": {
    "doc": "Electrical Wiring",
    "title": "DC Power Supply Wiring",
    "content": "Many of the latest generation of Voron printers spec the use of two or more independent power supplies. That can include 24V, 5V, and 12V power supplies depending on configuration. Important! Connect the DC 0V (typically labelled V-) on all of your DC power supplies together to ensure they all have the same voltage reference. If this is not done then it may be difficult to diagnose issues (devices may not turn on or may be damaged due to exceeding voltage limits). Smaller Printers (V0, Legacy) . Instead of multiple power supplies, the V0 uses a DC-DC converter to generate a 5V bus instead of a dedicated 5V power supply. Larger Printers (V1, Trident, V2, Switchwire) . Please see the associated assembly guides for power supply configurations. ",
    "url": "/build/electrical/#dc-power-supply-wiring",
    "relUrl": "/build/electrical/#dc-power-supply-wiring"
  },"148": {
    "doc": "Electrical Wiring",
    "title": "Wiring Configuration / Setup",
    "content": "Wire counts / lengths . The following are guides for each printer model for planning of wire counts and lengths. As always, these are recommendations and adding allowances is always a good idea. | V1 Gantry Wires | Trident Gantry Wires | V2 Gantry Wires | . Gantry Routing . While some extruder motors and inductive probes come with wire leads long enough to reach part or all of the way down the cable chain, resist the urge to use them. The wires typically found in them are not rated for the constant bending encountered in the cable chains and may break much sooner than desired. Terminate all connections to silicone or PTFE wire before entering the cable chain. Wire Terminals . Different controller boards use different terminal types. The RAMPS boards use Dupont terminals but the SKR boards use JST-XH terminals. If using an SKR board, a JST-XH connector kit is required with 2-pin, 3-pin, and 4-pin connectors (see the BOM). Unlike Dupont connectors, JST-XH connectors are keyed and will only fit one orientation so pay close attention when inserting pins. For wiring the stepper motors, keep the same wire color sequence that your stepper motors came with and use that same sequence for all stepper motors in the printer. If the BOM spec motors from StepperOnline are used, the wires should be in the color order as shown in the wiring diagrams. If the purchased steppers do not match the color order in the documentation, there is no need to rewire just to change colors. There is not a “standard” wire color order for these parts. If the builder decides to reterminate to change connector types or whatever, be sure to use the same order as before. The spec motors also come with a datasheet or card so you can double check the work. One can also use a multimeter to find wire pairs in the motor by measuring continuity between leads. Each lead should have continuity to the other lead in its pair. Important: If the motors are found later on to be going the wrong direction, repinning the connectors is not required. The direction can be inverted in the software configuration later. Inductive Probe Wiring (V1, Trident, V2, Switchwire) . The BOM spec PL-08N inductive probe (and the alterate Omron probe) that is used for Bed Mesh, Z Tilt Adjust (V1/Legacy) or Quad Gantry Leveling (V2) needs to be powered with 12-24V, not the typical 5V that is used for end stop switches. This is critical because if powered with 5V the sense distance is reduced enough to cause a nozzle crash. If not closely following the BOM spec, ensure that the inductive probe purchased is a normally closed (NC) version rather than normally open (NO). The configuration cannot be changed as that is built specifically from the factory. A normally open (NO) probe may cause crashes if a wire breaks. BAT85 Diode . Due to the switching used by the sensor the output voltage is approximately the same voltage as the sensor is powered with. If the sensor is powered with the common 24V, it will send 24V to an input on the MCU that is never intended to see more than 5V. The BAT85 diode is used to alleviate this issue. It is oriented so that when the probe signal wire is high (12-24V), not current will flow into the MCU input pin. As a result the MCU will read HIGH voltage due to the internal pull-up resistor. If the probe signal is LOW (0V), current will flow from the MCU input pin through the diode, through the probe, and to ground (V-). This will pull the MCU pin low and trigger appropriately. Important: The BAT85 diode should always be wired with the black band toward the probe, not toward the MCU. Below is a circuit diagram with more details. Endstop Wiring . Endstops can be wired one of two ways: normally closed (NC) or normally open (NO). For normally closed configurations, the endstop switch allows current to flow through when not triggered. For normally open configurations, the endstop switch only allows current to flow through whe triggered. While both of these configurations will work fine in an ideal world, normally closed (NC) configurations are more robust. If a wire breaks or a terminal becomes disconnected, the printer will think the endstop has triggered and will stop movement before the toolhead crashes into the bed or frame. Note that you should always still observe the homing routine - an intermittent break in an X or Y wire can still result in a crash as the nozzle will drop to where it thinks the Z endstop is and instead hit the bed (not applicable to V0 or Switchwire). Wiring mechanical endstop switches for NC operation is easy as the BOM spec switches have 3 pins exposed. With a multimeter, probe each combination of the three pins until a pair is found that has continuity (&lt;10 ohms resistance) when the switch is not triggered (normal state), but does not have continuity (&gt;10M ohms resistance) when the switch is triggered (depressed). Typically the outer two pins are the NC pins, but should be verified prior to installation. X/Y Endstop Wiring (Trident, V2) . The X/Y endstop connector can be strapped to the bottom of the joint. Just make sure the cable is long enough, be sure to install the cover to keep any prints that fly off from bonding to your endstops. ",
    "url": "/build/electrical/#wiring-configuration--setup",
    "relUrl": "/build/electrical/#wiring-configuration--setup"
  },"149": {
    "doc": "Electrical Wiring",
    "title": "Controller (MCU) Wiring",
    "content": "Follow the links to the wiring configuration guides specific to your printer and controller selection. There are other controllers on the market that may work (such as Duet), but those are not commonly used so standard configurations have not been developed. Voron 0 . | V0.0 - mini e3 V1.2 | V0.0 - mini e3 V2.0 | V0.1 - SKR Pico | . Voron 1 . | V1 - SKR 1.3 | V1 - SKR 1.4 | . Trident . | Trident - BigTreeTech Octopus | Trident - MKS Makerbase Monster8 | . Voron 2 . | V2 - SKR 1.3 | V2 - SKR 1.4 | V2 - FLYboard FLYF407ZG | V2 - Fysetc Spider | V2 - BigTreeTech Octopus | V2 - BigTreeTech Octopus Pro in UART Mode | V2 - BigTreeTech Octopus Pro in SPI Mode | V2 - MKS Makerbase Monster8 | . Voron Switchwire . | SW - mini e3 V2.0 | SW - Einsy Rambo | . ",
    "url": "/build/electrical/#controller-mcu-wiring",
    "relUrl": "/build/electrical/#controller-mcu-wiring"
  },"150": {
    "doc": "Electrical Wiring",
    "title": "Additional Items",
    "content": "Mini12864 Display (V1, Trident, V2, Switchwire) . If installing a Mini12864 display, please follow the Mini12864 Klipper Guide. Using non-24V fans with a 24V powered MCU . It is possible to use the SKR (and possibly other controllers) to control fans, LEDs, and other devices even when those devices use a different voltage. The SKR, like most controllers, uses the (-) pin to control if a device is switched on or off. For a given device, is the V+ is wired to an external power supply (e.g. 5V or 12V), and the V- is wired to the SKR, the fan can be switched on or off. As mentioned above, this will only work if the DC 0V of all of the power supplies is tied together. Note: In the diagram below, only DC wires are shown. Red represents V+, black represents V-. ",
    "url": "/build/electrical/#additional-items",
    "relUrl": "/build/electrical/#additional-items"
  },"151": {
    "doc": "Electrical Wiring",
    "title": "Next: Software Installation",
    "content": " ",
    "url": "/build/electrical/#next-software-installation",
    "relUrl": "/build/electrical/#next-software-installation"
  },"152": {
    "doc": "Alternate Electronics",
    "title": "Alternate Electronics",
    "content": "Community-generated documentation for alternate (non-spec) electronics and related configurations.. | Guide Name / Link | Author | . | BigTreeTech Expansion Module | BrewWeasel | . | Filament Runout Sensor | 120decibell | . | Hall Effect Endstop Setup | 120decibell | . | PT100 MAX31865 Setup | xbst_ | . | MKS Makerbase Monster8 v1.0 | Deuce | . External Links . | Klipper Expander | . ",
    "url": "/community/electronics/",
    "relUrl": "/community/electronics/"
  },"153": {
    "doc": "Installing BetterBootLoader on a SKR board",
    "title": "Installing BetterBootLoader on a SKR board",
    "content": "First and foremost, I would like to thank Arksine for this great tool. When I installed BetterBootLoader I thought it was a lot more complicated, partly because I was unable to find any detailed installation instructions, especially on how to flash Klipper through USB. So I have decided to write this very short step-by-step installation instructions, in the hope it might help somebody installing this excellent tool in the future. A word of warning: This potentially can brick (soft-brick) your SKRs if something goes wrong. If you have the propper programming tool, you might be able to reflash the original firmware back to the SKRs, but most people won’t have these. Be careful! . BetterBootLoader is a replacement to the stock firmware of the SKR or, for that matter, any LPC17xx-Board. The most important difference to the original firmware is that it allows installing Klipper on the SKR from the Pi through the USB connection without physical access to the SKR’s SD card. ",
    "url": "/community/howto/kage-chan/installing_better_bootloader.html",
    "relUrl": "/community/howto/kage-chan/installing_better_bootloader.html"
  },"154": {
    "doc": "Installing BetterBootLoader on a SKR board",
    "title": "Prerequisites",
    "content": "This guide is written with a VoronDesign v2 printer in mind, which usually has two SKRs as controllers, but it will also work for other printers with the same control board. The described firmware will only install on compatible controllers that use a LPC17xx MCU. This includes the SKR 1.3 or 1.4 used in the Voron v1 and v2. Do not attempt this on your SKR E3 mini in case you have a Voron v0 or switchwire! In addition, a Klipper environment that is set up and configured to operate properly is assumed. After going through this guide you will be able to flash new Klipper versions to your SKRs without accessing the SD cards. Things you need to prepare: . | Turn off your printer | Get access to the SD cards of your SKRs (for the last time, hopefully!) | . ",
    "url": "/community/howto/kage-chan/installing_better_bootloader.html#prerequisites",
    "relUrl": "/community/howto/kage-chan/installing_better_bootloader.html#prerequisites"
  },"155": {
    "doc": "Installing BetterBootLoader on a SKR board",
    "title": "Installing",
    "content": "It does not matter if you do both SKRs at the same time or if you do them one at a time. | Download betterbootloader.bin (only this one file) from the latest release. Copy the just downloaded betterbootloader.bin to the root directory of your SKRs’ SD cards and rename them to “firmware.bin”. Leave the “firmware.cur” file in there if it exists. | Put the SD cards back into your SKRs and power your printer. Leave it powered for about 10 seconds. Then cut the power again. Do not cut it earlier, you might risk soft-bricking your SKR. You can now flip your printer back into a upright position. After all LEDs have turned off, power your printer back up. | Connect to the Raspberry Pi in your printer through SSH. | Go to your Klipper directory and update it . | . cd ~/klipper git pull . | Most people will not have USB communication enabled for their SKRs, which must be done at this point, otherwise Klipper will not be able to communicate with the SKRs after a system restart. To enable USB communication, klipper needs to be reconfigured: | . make menuconfig . Enable USB communication (see image below) and Exit the configuration dialog. | After updating and reconfiguring your local repository remove any existing binaries or compiled object files and recompile Klipper: | . make clean make . | In the next step, flashing Klipper through the USB connection to the SKRs, the filesystem paths to the two SKRs must be known. My two SKRs are accessible through the following paths: /dev/serial/by-path/platform-3f980000.usb-usb-0:1.3:1.0 /dev/serial/by-path/platform-3f980000.usb-usb-0:1.5:1.0 . | . A list of full paths for your SKRs can be shown by executing . ls -d1 /dev/serial/by-path/* . Or simply take them from your existing printer.cfg. With these paths at hand, Klipper can now be flashed to the SKRs: . make flash FLASH_DEVICE=&lt;path to first SKR&gt; make flash FLASH_DEVICE=&lt;path to second SKR&gt; . As an example, for my two SKRs it would look like this: . make flash FLASH_DEVICE=/dev/serial/by-path/platform-3f980000.usb-usb-0:1.3:1.0 make flash FLASH_DEVICE=/dev/serial/by-path/platform-3f980000.usb-usb-0:1.5:1.0 . Make sure to replace the paths with those of your SKRs, if they are different. In the future you will be able to update Klipper on your SKRs with the steps shown above, starting from step 3. Have fun and enjoy! . -kage-chan . ",
    "url": "/community/howto/kage-chan/installing_better_bootloader.html#installing",
    "relUrl": "/community/howto/kage-chan/installing_better_bootloader.html#installing"
  },"156": {
    "doc": "Installing Fluidd",
    "title": "Installing Fluidd",
    "content": "The recommended way to install Fluidd on a Raspberry Pi is to use FluiddPi, a pre-packaged disk image. If you are building a custom configuration, you may need to skip these instructions and install Fluidd manually. ",
    "url": "/build/software/installing_fluidd.html",
    "relUrl": "/build/software/installing_fluidd.html"
  },"157": {
    "doc": "Installing Fluidd",
    "title": "FluiddPi",
    "content": "To install Fluidd on a Raspberry Pi: . | Download the latest fluiddPi Release | Unzip the .img file from your download. | Use BalenaEtcher to write the .img on to an 8GB, or larger SDcard. THIS WILL DESTROY ALL DATA ON YOUR CARD. | . note: It is a good idea to use a premium SDcard from a reputable manufacturer such as Sandisk, Kingston or Samsung. Low end cards will often fail quickly when used in this application . | If you will be using wifi, edit the file fluiddpi-wpa-supplicant.txt with your Wifi information. If you are having trouble seeing this file on the sdcard, try removing it and re-inserting it into your card reader. | Make sure that your MCU(s) is connected to your pi, If you will be using wired networking, also make sure your ethernet cable is connected. | Insert the SDcard into your Pi, and power on the Pi. | Find your pi on the network, and ssh into it, (Using PuTTY on Windows or the terminal on MacOS) . | If your network supports bonjour, the pi should show up as fluiddpi.local | If your network automatically assigns DNS hostnames, it may simply show up as fluiddpi | Failing these two options, you may need to check your router’s DHCP server, and find out what IP address as been assigned to the device. | . | Also connect to your pi in a web browser: http://fluiddpi.local or whatever you determined the host name/ip to be in the previous step | When you first connect, fluiddpi will ask you to “provide the moonraker api uri”: enter the same host name or IP address once more. (fluiddpi.local) | . Software Update . As soon as you have Fluiddpi loaded, it is highly recommended that you make sure all the software is up to date. (at times, the downloaded image file contains fairly out of date software) . | Access Fluidd through a webbrowser, using whatever IP or hostname you found above. (Note, you will see some errors regarding the non-configured state of your printer. these can be ignored for now) | Click the “Settings” button on the left side of the screen | Scroll down to the “Software Updates” section | Click the “check for updates” button | Click “update” for each component that needs it. | . Next: Firmware Flashing . ",
    "url": "/build/software/installing_fluidd.html#fluiddpi",
    "relUrl": "/build/software/installing_fluidd.html#fluiddpi"
  },"158": {
    "doc": "Installing Fluidd",
    "title": "Fluidd Manual Installation",
    "content": "Coming soon. Back: Software Installation . ",
    "url": "/build/software/installing_fluidd.html#fluidd-manual-installation",
    "relUrl": "/build/software/installing_fluidd.html#fluidd-manual-installation"
  },"159": {
    "doc": "Installing Heater with RTV",
    "title": "Installing Heater with RTV",
    "content": "In some cases the bed heater may need / want to be installed with something other than the normally provided 468MP adhesive sheet. This can be a heter ordered without the adhesive, a heater being reinstalled, or a desire to have the heater glued on above the rated temperature of the 468MP adhesive. Note: This guide is not intended for installing a heater that already came with a 468MP adhesive sheet installed. In the installation manual Keenovo recommends sealing the edges of the pad with RTV, that is not the same as using RTV as the main adhesive. In their case it is a safety measure to ensure the pad cannot peel off with time. Slathering RTV all over the pad is not helpful. In my experience 468MP starts to degrade when going over 115C, not that there is a risk of adhesive failure but that it starts to smell really bad, and that smell only gets worse with time. It is permanent. Not everyone is affected though so the exact cause is still unknown. 468MP has a shelf life, it is possible it is related to that (maybe I had old stock, maybe it depends on environmental factors…). If you install your pad with RTV instead of 468MP, then you don’t have to worry about potential failure of the adhesive (either from death smell or actual adhesive failure causing the pad to detach), even if your bed is somehow stuck at full power for extended periods of time. You should still use a thermal fuse to disconnect the power, just like stock builds, as a final safety against a runaway heater. I used RTV106 because I found that it was specifically called out for by an industrial silicone heater pad manufacturer, but for our use case I believe any high-temp RTV will do. Read the instructions for the specific RTV you are using to know how long to cure at room temp (mine was three days). I just let it sit there with some weights until the curing time was up. If you have a magnet to install on the other side, do that before. If you use spring steel, don’t forget that the magnet over the bed also has special adhesive, and that the usual China sources generally don’t use adhesive that is rated for more than 70C. I know SubtleDesign uses 300SLE (which is rated for 148C) for their StayMag sheets so they are a known good source, there may be others depending on where you live. Tools Needed: . | Lots of paper towels | Masking tape | Nitrile/Latex gloves | Trash bag (to keep those used towels &amp; gloves in!) | Spatula (I used a plastic spatula meants for wall plaster) | Face mask (the smell is surprisingly strong!) | . Process: . | Outline the edges of the plate where the RTV shouldn’t go with masking tape. Assume that anything not covered will get RTV on it. | Spread the RTV all over the plate like a cake with the spatula. | Go quickly but don’t rush. You have about 5 minutes to complete the whole process. | Lay down heater, start on one edge and keep going slowly so you don’t trap air bubbles. The RTV will squish out onto the masking tape. | Once you are happy with your application, remove the masking tape. | Add weight (use a cardboard cutout so you don’t crush the silicone bulges in the heater). | Let cure for the time specified by the RTV (between 24-72 hours). | . ",
    "url": "/community/howto/fulg/installing_heater_with_rtv.html",
    "relUrl": "/community/howto/fulg/installing_heater_with_rtv.html"
  },"160": {
    "doc": "Installing Mainsail",
    "title": "Installing Mainsail",
    "content": "The recommended way to install Mainsail on a Raspberry Pi is to use MainsailOS, a pre-packaged disk image. If you are building a custom configuration, you may need to skip these instructions and install Mainsail manually. ",
    "url": "/build/software/installing_mainsail.html",
    "relUrl": "/build/software/installing_mainsail.html"
  },"161": {
    "doc": "Installing Mainsail",
    "title": "MainsailOS",
    "content": "To install Mainsail on a Raspberry Pi: . | Download the latest mainsailOS Release | Unzip the .img file from your download. | Use BalenaEtcher to write the .img on to an 8GB, or larger SDcard. THIS WILL DESTROY ALL DATA ON YOUR CARD. | . note: It is a good idea to use a premium SDcard from a reputable manufacturer such as Sandisk, Kingston or Samsung. Low end cards will often fail quickly when used in this application . | If you will be using wifi, edit the file mainsailos-wpa-supplicant.txt with your Wifi information. If you are having trouble seeing this file on the sdcard, try removing it and re-inserting it into your card reader. | Make sure that your MCU(s) is connected to your pi, If you will be using wired networking, also make sure your ethernet cable is connected. | Insert the SDcard into your Pi, and power on the Pi. | Find your pi on the network, and ssh into it, (Using PuTTY on Windows or the terminal on MacOS) . | If your network supports bonjour, the pi should show up as mainsailos.local | If your network automatically assigns DNS hostnames, it may simply show up as mainsailos | Failing these two options, you may need to check your router’s DHCP server, and find out what IP address as been assigned to the device. | . | . You can also use Raspberry Pi Imager information for both can be found Mainsail docs . Software Update . As soon as you have MainsailOS loaded, it is highly recommended that you make sure all the software is up to date. (at times, the downloaded image file contains fairly out of date software) . | Access Mainsail through a webbrowser, using whatever IP or hostname you found above. (Note, you will see some errors regarding the non-configured state of your printer. these can be ignored for now) | Click the “Machine” button on the left side of the screen | In the “Update Manager” panel, click the refresh button | Click the “Update” button for each component that needs updating. | . Next: Firmware Flashing . ",
    "url": "/build/software/installing_mainsail.html#mainsailos",
    "relUrl": "/build/software/installing_mainsail.html#mainsailos"
  },"162": {
    "doc": "Installing Mainsail",
    "title": "Mainsail Manual Installation",
    "content": "The Mainsail manual installation process is documented on the Mainsail docs . Back: Software Installation . ",
    "url": "/build/software/installing_mainsail.html#mainsail-manual-installation",
    "relUrl": "/build/software/installing_mainsail.html#mainsail-manual-installation"
  },"163": {
    "doc": "Installing Octoprint",
    "title": "Installing Octoprint",
    "content": "Install OctoPrint on the Raspberry Pi by following the instructions found at OctoPrint Download . Once installed, ssh to your Raspberry Pi (Using PuTTY on Windows or the terminal on MacOS) at the address pi@octopi.local. The default password is ‘raspberry’. It is highly recommended to change the default password using the following process: . | Login to Raspberry Pi | sudo raspi-config (password may be requested again) | Select “Change User Password” to change the password | . Klipper Installation . Once at the command line of the Raspberry Pi, run the following commands to download and install the latest version of Klipper: . cd git clone https://github.com/KevinOConnor/klipper ./klipper/scripts/install-octopi.sh . Klipper Octoprint Configuration . Make sure to only do the testing after Klipper is installed . The OctoPrint web server needs to be configured to communicate with the Klipper host software. Using a web browser, login to the OctoPrint web page and then configure the following items: . | Navigate to the Settings tab (the wrench icon at the top of the page) | Under “Serial Connection” in “Additional serial ports” add “/tmp/printer” then click “Save” | Open Settings tab and under “Serial Connection” change the “Serial Port” setting to “/tmp/printer” | In the Settings tab, navigate to the “Behavior” sub-tab and select the “Cancel any ongoing prints but stay connected to the printer” option, then click “Save” | From the main page, under the “Connection” section (at the top left of the page) make sure the “Serial Port” is set to “/tmp/printer” and click “Connect”. (If “/tmp/printer” is not an available selection then try reloading the page) | Once connected, navigate to the “Terminal” tab and type “status” (without the quotes) into the command entry box and click “Send”. The terminal window will likely report there is an error opening the config file - that means OctoPrint is successfully communicating with Klipper. | . ",
    "url": "/build/software/installing_octoprint.html",
    "relUrl": "/build/software/installing_octoprint.html"
  },"164": {
    "doc": "Installing Octoprint",
    "title": "Recommended OctoPrint Plugins",
    "content": ". | OctoKlipper | Themeify | TerminalCommands | Bed Level Visualizer | Print Time Genius | . Back: Software Installation . ",
    "url": "/build/software/installing_octoprint.html#recommended-octoprint-plugins",
    "relUrl": "/build/software/installing_octoprint.html#recommended-octoprint-plugins"
  },"165": {
    "doc": "Klipper Common Errors",
    "title": "Klipper Common Errors",
    "content": "Retrieve Log File (Octoprint) . The Klippy log file (/tmp/klippy.log) contains debugging information. Execute the M112 command in the OctoPrint terminal window immediately after the undesirable event. There is also a logextract.py script that may be useful when analyzing a micro-controller shutdown or similar problem. To use it follow this procedure: . mkdir work_directory cd work_directory cp /tmp/klippy.log . ~/klipper/scripts/logextract.py ./klippy.log . The script will extract the printer config file and MCU shutdown information to work_directory. Mainsail and Fluidd have built-in tools to extract and downlaod the klippy.log. TMC UART Error . This appears when the communication between the TMC drivers and the MCU is not working. Typically this means that you have not powered the SKR board with 12-24V (TMC drivers didn’t boot), you haven’t plugged in the TMC steppers to the correct spots, or you forgot to add or remove a jumper as detailed above. ADC Error . ADC stands for “Analog to Digital Converter” and is what is used to convert thermistor readings to temperatures for your hotend and heated bed. As a safety precaution, if Klipper is expecting a thermistor to be plugged in but it is reading an invalid reading (no thermistor = open, or 0 ohms for a shorted wire as closed), it will go in to this shut down mode. Double check to make sure your thermistors are plugged in to the correct boards and plugs. Unable to Connect . Once the underlying issue is corrected, use the FIRMWARE_RESTART command to reset the firmware, reload the config, and restart the host software. Check MCU IDs match your printer.cfg. Make sure you get the paths right! . ",
    "url": "/community/troubleshooting/eddie/klipper_common_errors.html",
    "relUrl": "/community/troubleshooting/eddie/klipper_common_errors.html"
  },"166": {
    "doc": "Maintenance Guide",
    "title": "Maintenance Guide",
    "content": "Printers need maintenance! . References: . | https://hackmd.io/XdDG0_2vSr6Kwaz8aGk79A | . Periodic Checks . | Periodically check the printers hardware and make sure all components are properly attached and securely fastened. Check printed parts for stress signs (white discoloration) and cracks. | Pay attention to the X carriage. You should not be able to rock the printhead up and down. If you can move it check the seating of the Quick Change Toolhead and the attachment of the carriage to the linear movement. | Verify the proper seating of the PTFE tube, it must be inserted all the way and must not rock in and out. If the tube backs out check the filament path and coupler. | Check the hotend, make sure it does not wiggle and is securly fasted. If you are using a V6 make sure the block is properly attached to the heatbreak | Dust near a pully is indicative of a belt rubbing on the flange of a pully. This will introduce unwanted artifacts into the print and should be resolved. | Periodically check belt tension. Belts will stretch during their break in period. If the belt consistently looses tension check for a hardware fault. | Check the extruder for filament shavings and other debris. If you find an exessive amount the filament path may be obstructed. | Relubrication of the movement is only required every few thousend hours if the recommended lubrication was used. Oil based lubrication may need to be reapplied on a much short schedule. | Other consumeable need to be replaced on a suitable schedule. PTFE tubes on a 500-1000h schedule, nozzles and PEI as required. Refer to the Consumables section. | . Consumables . 3d printing filament is not the only consumable of the printer. Nozzles, PTFE tubes and the PEI print surface are also considered consumables and need periodic replacement. Consider the shipping time for your consumables and if required stock at least one full set of replacement parts. The PTFE tube will wear due to friction of the filament and should be replaced on a 500h schedule to ensure the best possible print results. Nozzles will wear depending on the nozzle material and filament used or may simply clog due to dust and debris entering the filament path. Brass nozzles will wear even with unfilled filaments, consider replacing them on a schedule to ensure consistent print results. The PEI surface may get scratched or otherwise damaged by the removal of prints. While keeping a spare sheet is considered good practice consider the ~1 year shelf life of the 3M 468mp sheets that are used to glue the PEI to the plate. In addition PEI is not immune to acetone and it will develop cracks with frequent usage of acetone. Removing PEI Sheet . DocJeeves’s method: . You will need isopropyl alcohol (IPA, 90% or better purity) I get a razor blade under the PEI sheet at a corner (or other likely spot), and work a fair bit of it up. Then I grab that lifted PEI corner with a pair of pliers, and pull. Usually the whole PEI sheet will come free, but large chunks of adhesive will remain. I spray that all down with 90% rubbing alcohol (70% may work? Never tried it), and walk away. I come back, and the adhesive is now milky white, and comes off with no fuss with a razor blade . Another method is to put in the freezer, this makes it much easier to remove. ",
    "url": "/maintenance.html",
    "relUrl": "/maintenance.html"
  },"167": {
    "doc": "Materials Selection",
    "title": "Voron Materials Selection",
    "content": "When determining what materials to create the Voron printed parts from, there are a number of criteria that need to be considered. | It is common for the chamber temperatures inside an enclosed Voron printer to reach 55C - 60C. The material chosen should have a thermal deformation temperature or “glass temperature” that is at least 80C. | The V2 gantry can become misaligned for a variety of reasons. Since the gantry is 4 points, that misalignment can cause flex in the AB drive units. It is recommended that the material for the AB drive units be able to handle that movement. | . ",
    "url": "/materials.html#voron-materials-selection",
    "relUrl": "/materials.html#voron-materials-selection"
  },"168": {
    "doc": "Materials Selection",
    "title": "PLA",
    "content": "PLA has a glass temperature of around 55C - 60C. It is very stiff and has a low ductility (ability of a material to have its shape changed without losing strength or breaking). It is not recommended for Voron parts. This is due to both the low temperature tolerance and the low ductility that can occasionally cause unexpected cracking. The high temperature variant HTPLA is viable for temperature tolerance but is expensive and still has issues with ductility and risk of cracking. PLA is entirely acceptable for skirts and panel clips as they do not see the same high temperatures or forces. ",
    "url": "/materials.html#pla",
    "relUrl": "/materials.html#pla"
  },"169": {
    "doc": "Materials Selection",
    "title": "PETG",
    "content": "PETG has a glass temperature of around 55C - 60C. It has moderate stiffness depending on the additives and typically high ductility. It is not recommended for Voron parts due to the low temperature tolerance. The thermal properties do not change with additives such as carbon fiber. Some have successfully built a Voron in PETG and used that to reprint in ABS but the part failure rate in that situation is very high. PETG is acceptable for skirts and panel clips. ",
    "url": "/materials.html#petg",
    "relUrl": "/materials.html#petg"
  },"170": {
    "doc": "Materials Selection",
    "title": "ABS",
    "content": "ABS has a glass temperature of around 90C. It had moderate stiffness and moderate ductility. It is the primary recommended material for Voron printers due to the high temperature rating and moderate ductility. This allows for the parts to hold up in a higher temperature environment well yet endure some flex without cracking. Both of the variants ASA and ABS+ are also fully supported. ",
    "url": "/materials.html#abs",
    "relUrl": "/materials.html#abs"
  },"171": {
    "doc": "Materials Selection",
    "title": "Nylon",
    "content": "PA6 nylon has a high glass temperature of 180C. It has moderate stiffness and moderate ductility. It is not recommended for Voron parts due to the tendency of nylon PA6 to creep (slowly deform) under the constant pressure exerted by the bolts clamping on the parts. PA12 nylon has the same temperature rating and a similar stiffness and ductility, but it is a viable option for Voron parts as it exhibits only minimal creep under pressure. However it is quite expensive and is more commonly found in SLS processes than FDM. ",
    "url": "/materials.html#nylon",
    "relUrl": "/materials.html#nylon"
  },"172": {
    "doc": "Materials Selection",
    "title": "Polycarbonate",
    "content": "Polycarbonate (PC) and one of the various blends and/or additives (e.g. PC-ABS, PC-CF) have a high glass temperature of close to 150C but have a very high stiffness and low ductility. Some blends such as PC-ABS have slightly lower stiffness and higher ductility but not by huge amounts. PC and PC blends are not recommended for Voron parts due to the risk of sudden cracking. However some have successfully printed and used toolheads made from PC blends as the mechanical loads are low and the need for thermal tolerance is high. ",
    "url": "/materials.html#polycarbonate",
    "relUrl": "/materials.html#polycarbonate"
  },"173": {
    "doc": "Materials Selection",
    "title": "Resin",
    "content": "While on paper resin printed parts could work for heat resistance depending on the resin type, resin parts typically continue to shrink over time putting them outside of dimensional tolerances. Resin prints also typically exhibit long term creeping under bolt pressure and have a tendency to catastrophically fail after just a few months of use. A viable resin has yet to be found that will sync up to the Voron environment. Resin is strongly discouraged for use in Voron parts. ",
    "url": "/materials.html#resin",
    "relUrl": "/materials.html#resin"
  },"174": {
    "doc": "Materials Selection",
    "title": "Aluminum",
    "content": "There is a recent trend toward printer parts that are CNC machined out of aluminum. While aluminum has more than sufficient heat tolerance the high stiffness may cause issues with the V2 due the slight flexibility needed in the gantry. It is also very common to machine the aluminum parts to match the dimensions of parts designed to be made in ABS. Unfortunately due to the differences in raw material weight and the printed parts averaging 50% hollow the aluminum parts are typically around 5X heavier than their ABS printed versions. ",
    "url": "/materials.html#aluminum",
    "relUrl": "/materials.html#aluminum"
  },"175": {
    "doc": "Materials Selection",
    "title": "Testimonials",
    "content": "@Weaslus . “dissassembling a whole printer to reassemble in ABS, and spending twice on filament, was the worst part. it was a days work I wouldn’t wish on anyone.” . ",
    "url": "/materials.html#testimonials",
    "relUrl": "/materials.html#testimonials"
  },"176": {
    "doc": "Materials Selection",
    "title": "Materials Selection",
    "content": " ",
    "url": "/materials.html",
    "relUrl": "/materials.html"
  },"177": {
    "doc": "Mini12864 Klipper Guide",
    "title": "Mini12864 Klipper Guide",
    "content": " ",
    "url": "/build/electrical/mini12864_klipper_guide.html",
    "relUrl": "/build/electrical/mini12864_klipper_guide.html"
  },"178": {
    "doc": "Mini12864 Klipper Guide",
    "title": "Requirements",
    "content": ". | An MCU must be used that is compatible with the EXP1/EXP2 wiring standard (e.g. SKR, FLY). | The EXP1/EXP2 ports must be available and not connected to another expansion module | . ",
    "url": "/build/electrical/mini12864_klipper_guide.html#requirements",
    "relUrl": "/build/electrical/mini12864_klipper_guide.html#requirements"
  },"179": {
    "doc": "Mini12864 Klipper Guide",
    "title": "Hardware",
    "content": "NOTE: The two connector housings only need to be reversed if the MCU and display are different brands. If you have both a BigTree Tech mini12864 and a BigTree Tech MCU (Or both a FYSETC mini12864 and an FYSETC F6/S6), skip steps 1 &amp; 2 . | Pry off the two black connector housings from the back of the display | Rotate connector housings 180 degrees and insert back onto pins | Fysetc Spider Only: The Fysetc Spider requires certain components to be removed from the mini12864 display. | From a Fysetc display, remove R1 &amp; R4 | From a BTT display, remove R1 &amp; C6 | . | Connect EXP1 and EXP2 cables to the display and to your MCU board, being sure to match port numbers (EXP1 &lt;&gt; EXP1). Note: The Fysetc Spider V1.0 has a silk screen error. for V1.0 only, Connect EXP1 to EXP2, and EXP2 to EXP1 | . ",
    "url": "/build/electrical/mini12864_klipper_guide.html#hardware",
    "relUrl": "/build/electrical/mini12864_klipper_guide.html#hardware"
  },"180": {
    "doc": "Mini12864 Klipper Guide",
    "title": "Klipper Configuration",
    "content": "Most stock Voron configuration files already have appropriate configurations for this display built in, which simply needs to be un-commented. These configs are customized for the specific builds, and should be what you use. _Note: There are multiple config sections required to make the mini12864 fully operational: [display], [neopixel fysetc_mini12864] and [delayed_gcode setdisplayneopixel]_ . Some users find that they want to reverse the direction the menu wheel spins. You can easily reverse its operation by swapping the order of the two pins in the [display] encoder_pins line. For example, if your stock config contains the line . encoder_pins: ^PC7,^PC6 . you would change it to . encoder_pins: ^PC6,^PC7 . ",
    "url": "/build/electrical/mini12864_klipper_guide.html#klipper-configuration",
    "relUrl": "/build/electrical/mini12864_klipper_guide.html#klipper-configuration"
  },"181": {
    "doc": "Mini12864 Klipper Guide",
    "title": "Mini12864 Troubleshooting Checklist",
    "content": "The Mini12864 display can be a little tricky to get running correctly. Here is a short checklist to help double check some of the common issues. | Have you Rotated the headers on the back of the display? See Hardware above | Is EXP1 connected to EXP1, and EXP2 to EXP2? | Have you enabled all the config sections? you must have [display], [output_pin beeper], [neopixel fysetc_mini12864], AND [delayed_gcode setdisplayneopixel] to fully enable all features of your display. (many users may not feel the need to enable [output_pin beeper]) | Voron 2 dual MCU configurations: Is your firmware configuration in agreement with your physical wiring about which MCU board the display is connected to? ( As provided in the stock printer.cfg, the display should be connected to MCU-Z ) | . ",
    "url": "/build/electrical/mini12864_klipper_guide.html#mini12864-troubleshooting-checklist",
    "relUrl": "/build/electrical/mini12864_klipper_guide.html#mini12864-troubleshooting-checklist"
  },"182": {
    "doc": "SKR mini E3 V1.2 Klipper Firmware",
    "title": "SKR mini E3 V1.2 Klipper Firmware",
    "content": "Required Items . | Klipper must be installed onto the Raspberry Pi | At least one microSD card needs to be available depending on number of controllers. | . Build Firmware Image . | Login to the Raspberry Pi | Run the following: | . sudo apt install make cd ~/klipper make menuconfig . In the menu structure there are a number of items to be selected. | Ensure that the micro-controller architecture is set to ‘STM32’ | Ensure that the processor model is set to ‘STM32F103’ | Ensure that “Enable extra low-level configuration options” is selected | Ensure that the Bootloader offset is set to ‘28KiB’ | Ensure that “Use USB for communication (instead of serial)” is selected | Ensure that “GPIO pins to set at micro-controller startup” contains ‘!PC13’. | . Once the configuration is selected, select “Exit” and “Yes” if asked to save the configuration. Run the following: . make clean make . The make command, when completed, creates a firmware file klipper.bin that is store in the folder /home/pi/klipper/out. This file need to be copied to the Mini E3 board. The easiest way to do this is to use a GUI like WinSCP on Windows or either Cyberduck or scp (from terminal) on Mac to copy the file to your computer. Load Firmware Image . Copy the klipper.bin to the desktop, then rename it to firmware.bin . Important: If the file is not renamed, the bootloader will not be updated properly. Ensure that the Mini E3 board is not powered, then remove the microSD card that is installed. Connect the microSD card to the computer with the firmware.bin file. Open the microSC card in the file browser. There will be a file named ‘firmware.cur’, that file can be deleted or left alone, it will be overwritten later. Copy the firmware.bin from the desktop onto the microSD card. If problems are encountered transferring the file(s) to the microSD card, reformat the microSD card with a FAT32 filesystem and try again. Replace the microSD card into the Mini E3. Turn on the power supply to power on the Mini E3 board. If named properly, the SKR will automatically update with the Klipper firmware. Important: If the Mini E3 is not powered with 12-24V, Klipper will be unable to communicate with the TMC drivers via UART and the Mini E3 will automatically shut down. Back to Software Installation . ",
    "url": "/build/software/miniE3_v12_klipper.html",
    "relUrl": "/build/software/miniE3_v12_klipper.html"
  },"183": {
    "doc": "SKR mini E3 V2.0 Klipper Firmware",
    "title": "SKR mini E3 V2.0 Klipper Firmware",
    "content": "Required Items . | Klipper must be installed onto the Raspberry Pi | At least one microSD card needs to be available depending on number of controllers. | . Build Firmware Image . | Login to the Raspberry Pi | Run the following: | . sudo apt install make cd ~/klipper make menuconfig . In the menu structure there are a number of items to be selected. | Ensure that the micro-controller architecture is set to ‘STM32’ | Ensure that the processor model is set to ‘STM32F103’ | Ensure that the Bootloader offset is set to ‘28KiB’ | Ensure that the Clock Reference is set to ‘8 Mhz’ | Ensure that “Enable extra low-level configuration options” is selected. | Ensure that “Use USB for communication (instead of serial)” is selected. | Ensure that “GPIO pins to set at micro-controller startup” includes ‘!PA14’. | . Once the configuration is selected, select “Exit” and “Yes” if asked to save the configuration. Run the following: . make clean make . The make command, when completed, creates a firmware file klipper.bin that is store in the folder /home/pi/klipper/out. This file need to be copied to the Mini E3 board. The easiest way to do this is to use a GUI like WinSCP on Windows or either Cyberduck or scp (from terminal) on Mac to copy the file to your computer. Load Firmware Image . Copy the klipper.bin to the desktop, then rename it to firmware.bin . Important: If the file is not renamed, the bootloader will not be updated properly. Ensure that the Mini E3 board is not powered, then remove the microSD card that is installed. Connect the microSD card to the computer with the firmware.bin file. Open the microSC card in the file browser. There will be a file named ‘firmware.cur’, that file can be deleted or left alone, it will be overwritten later. Copy the firmware.bin from the desktop onto the microSD card. If problems are encountered transferring the file(s) to the microSD card, reformat the microSD card with a FAT32 filesystem and try again. Replace the microSD card into the Mini E3. Turn on the power supply to power on the Mini E3 board. If named properly, the SKR will automatically update with the Klipper firmware. Important: If the Mini E3 is not powered with 12-24V, Klipper will be unable to communicate with the TMC drivers via UART and the Mini E3 will automatically shut down. Back to Software Installation . ",
    "url": "/build/software/miniE3_v20_klipper.html",
    "relUrl": "/build/software/miniE3_v20_klipper.html"
  },"184": {
    "doc": "Multi-Colour Prints with a Single Nozzle",
    "title": "Multi-Body STL’s",
    "content": "For this we’ll be using the multi-body cowling for the Voron V0.1, however any similar file will work. The primary requirement is that you have a file that includes two or more bodies that can be printed separately. Ideally the accent colour piece is no taller than around 0.6mm in the z-axis, just enough to clearly differentiate it from the colours around it. The specific piece we’ve be using the is the [a]_Cowling_dragon_MULTIBODY_x1.STL from the Mini Afterburner. ",
    "url": "/community/howto/mikhail/multi-colour-prints-with-a-single-nozzle.html#multi-body-stls",
    "relUrl": "/community/howto/mikhail/multi-colour-prints-with-a-single-nozzle.html#multi-body-stls"
  },"185": {
    "doc": "Multi-Colour Prints with a Single Nozzle",
    "title": "Slicing Your Accent Pieces",
    "content": "This is where most of the work will be done. We’ll be using Super Slicer, but this should also work in Prusa Slicer and others. Import your STL or other printable model as per usual. Depending on the format you will only see a single model at first. You will need to right-click the file in your part list and select split to parts. This will then split the file into the multiple bodies we need. Identify the bodies that will be your primary colour and your accent colour, in our case the main body will be primary, and the Voron logo (3 separate bodies) will be our accent. We’re first going to slice the accent pieces, so you will need to right click the primary colour piece and select change type and then pick modifier from the list. This tells the slicer this body is no longer a printable body and is instead used to modify the other bodies (for example as support enforcer or blocker). For us we merely just need it to not be printed. You will now slice the remaining accent pieces as normal. If possible omit a skirt as it will make your life easier but it’s not required. Export the resulting gcode and save it to an appropriate place. ",
    "url": "/community/howto/mikhail/multi-colour-prints-with-a-single-nozzle.html#slicing-your-accent-pieces",
    "relUrl": "/community/howto/mikhail/multi-colour-prints-with-a-single-nozzle.html#slicing-your-accent-pieces"
  },"186": {
    "doc": "Multi-Colour Prints with a Single Nozzle",
    "title": "Slicing Your Primary Pieces",
    "content": "Next we’re going to do the primary coloured pieces, and this is where the real magic happens. You will now want to change your accent coloured pieces to be modifiers and change your primary piece back into a part, reversing the bodies we want to print. Then we need to head to printer settings and enable z-hop for this part. It will need to be set to a height taller than the height of the accent pieces, to be safe double the height can be used. For our example piece that would be 1.2mm. You will need to ensure this is active starting from the bottom layer and most likely turn it off once we’ve exceeded the accent part. It can be left on, however you may experience stringing or blobs from the excessive z-hop height. Before we export this gcode we do want to verify that z-hop is enabled as intended. This can be seen in the gcode preview view and turning on travel moves under the show dropdown. It should look similar to the below image, with clear vertical movements on the bottom layers. If you’re not seeing that you will need to go back to your z-hop settings and verify the height you’ve set and that it’s on for layers starting from 0mm (it’s not uncommon to have it off for the first layer). With that verified slice and export your model and save your gcode file accordingly. ",
    "url": "/community/howto/mikhail/multi-colour-prints-with-a-single-nozzle.html#slicing-your-primary-pieces",
    "relUrl": "/community/howto/mikhail/multi-colour-prints-with-a-single-nozzle.html#slicing-your-primary-pieces"
  },"187": {
    "doc": "Multi-Colour Prints with a Single Nozzle",
    "title": "Printing Your Files",
    "content": "Now we’re at the easy part! The order of operations are listed below along with a few gotcha’s to watch out for: . | Start your accent part print as per normal | Once the part has completed, immediately set your bed heater to printing temperatures | Careful remove the skirt if you printed one as well as any purge line, do not move your print surface | Swap filament to your primary colour, being sure to purge enough so there’s no colour bleed | Start your primary part print | . The first part should go down easily and hopefully end up with something like below if you’re using the example model. Once that’s done and your second one is going you should see the toolhead print around our existing part which is quite fun to watch. You should also see the exagerated z-hops on the lower layers of the print to avoid colliding with the first printed part. ",
    "url": "/community/howto/mikhail/multi-colour-prints-with-a-single-nozzle.html#printing-your-files",
    "relUrl": "/community/howto/mikhail/multi-colour-prints-with-a-single-nozzle.html#printing-your-files"
  },"188": {
    "doc": "Multi-Colour Prints with a Single Nozzle",
    "title": "Gotcha’s To Avoid",
    "content": "I can’t account for all the various setups people have but here are a few couple things to watch out for when doing this. My printer homes in the middle of the print surface! While annoying this one is relatively easy to fix, don’t print your accent pieces in the center of your bed! You will have to determine based on your homing setup and print volume where you can safely print, but simply move the file to that location before you split it into multiple bodies. That will allow the printer to safely home without interfering with the existing print. What about my bed mesh at the start of the print?! This is probably the biggest one to work around. You could try and have it that the accent part perfectly sits between probe points but that’s probably asking for trouble. The best solution I’ve found is to remove both the running of the bed mesh and the clearing of old ones from your start gcode. Instead preheat your bed and nozzle to the temperatures you normally do a bed mesh at and run it before your first print, ensuring it gets saved, and then running you prints immediately after. This should ensure you have a relatively good mesh for both prints, as long as you don’t let the bed cool down between meshing and printing. For Klipper users that leverage the print_start macro you can simply edit the macro before hand and restart the firmware. Be mindful if you use G32 in your macro as it by defaults does a clear of any existing bed meshes which you do not want in this case. What I personally have done is created secondary macros called print_start_multi_colour and print_end_multi_colour. These are slightly modified to not clear my bed mesh, not turn off my bed heater at the end of the print, and park my toolhead at the front of the bed so I can easily do a filament swap. I simply adjust my slicers start and end gcode when doing these prints to use the new macro names. ",
    "url": "/community/howto/mikhail/multi-colour-prints-with-a-single-nozzle.html#gotchas-to-avoid",
    "relUrl": "/community/howto/mikhail/multi-colour-prints-with-a-single-nozzle.html#gotchas-to-avoid"
  },"189": {
    "doc": "Multi-Colour Prints with a Single Nozzle",
    "title": "Next Steps",
    "content": "Hopefully that helps you get some nice multi-colour prints done without too much hassle. It’s a little bit of work, but also can produce some really nice results. If you want some inspiration checkout this video by Devin over at Make Anything–he uses a similar technique to create some amazing full colour phone cases! . ",
    "url": "/community/howto/mikhail/multi-colour-prints-with-a-single-nozzle.html#next-steps",
    "relUrl": "/community/howto/mikhail/multi-colour-prints-with-a-single-nozzle.html#next-steps"
  },"190": {
    "doc": "Multi-Colour Prints with a Single Nozzle",
    "title": "Multi-Colour Prints with a Single Nozzle",
    "content": "This is a quick guide on doing a simple multi-colour print using a printer with a single nozzle and extruder setup in Super Slicer–no MMU2S or ERCF required. This is mainly useful for prints that need an accent colour on the side facing the build plate such as the cowling from the Voron V0.1 Mini Afterburner. It will not work well with accent pieces that need to be very deep and while more than one colour can be done, it will add more chances for failure. I’m by no means the first to do this, write about it, or in anyway take credit–this is merely a reminder for myself how to do when the need arises. ",
    "url": "/community/howto/mikhail/multi-colour-prints-with-a-single-nozzle.html",
    "relUrl": "/community/howto/mikhail/multi-colour-prints-with-a-single-nozzle.html"
  },"191": {
    "doc": "Notepad++ Configuration Editor (Windows)",
    "title": "Notepad++ Configuration Editor (Windows)",
    "content": ". | Install Notepad++ | Under the “Plugins” tab, select “Plugins Admin” | Search for “NppFTP”, select the check box, and click “Install” | Restart Notepad++ if necessary | On the right, there will be a new section. Click the gear icon and select “Profile Settings” | In the bottom left, select “Add New” and name the profile as you wish | In the Hostname dialog, enter the IP address of your Raspberry Pi | In Connection Type, select SFTP | Port: 22 | Username: pi | Password: *** (default is raspberry) | Close the dialog box, select the blue symbol, and select the name of the profile you create | Notepad++ will connect to your Raspberry Pi and display the file structure | Navigate to /home/pi and open printer.cfg | Make any applicable edits and then save the file | . Remember to restart klipper from the Octoprint terminal to see your changes take affect! . ",
    "url": "/build/software/notepadplusplus.html",
    "relUrl": "/build/software/notepadplusplus.html"
  },"192": {
    "doc": "Octoprint Serial Timeout",
    "title": "OctoPrint Serial Timeout",
    "content": "OctoPrint has built-in timeout for the internal serial connection to Klipper. Some of the macros such as PRINT_START can take a long time to execute and cause Octoprint to disconnect. Instead of increasing the timeouts, add one or more of the macro names to the list of long-running commands. The long-running commands can be found under ‘Settings’ -&gt; ‘Serial Connection’ -&gt; ‘Firmware &amp; Protocol’. Then under ‘Protocol Fine Tuning’, expand the ‘Advanced’ section to locate the ‘Long Running Commands’ list. ",
    "url": "/community/troubleshooting/120decibell/octoprint_serial_timeout.html#octoprint-serial-timeout",
    "relUrl": "/community/troubleshooting/120decibell/octoprint_serial_timeout.html#octoprint-serial-timeout"
  },"193": {
    "doc": "Octoprint Serial Timeout",
    "title": "Octoprint Serial Timeout",
    "content": " ",
    "url": "/community/troubleshooting/120decibell/octoprint_serial_timeout.html",
    "relUrl": "/community/troubleshooting/120decibell/octoprint_serial_timeout.html"
  },"194": {
    "doc": "Octopus (Pro) Klipper Firmware",
    "title": "Octopus(Pro) Klipper Firmware",
    "content": "The firmware update process for both Octopus and Octopus Pro is the same so the guides have been combined. Prerequisites . | Klipper must be installed onto the Raspberry Pi | It is desirable, though not strictly necessary to have a small sdcard available | Even if you intend to power your Pi with the Octopus, during this flashing process, you will find it far more convenient to power your pi from some other source, such as a regular USB power supply | Voron Design recommends using USB to control the Octopus, which simply requires connecting a USB-A to USB-C cable between the Octopus and Pi. If you prefer a UART connection, please consult the BigTreeTech documentation for the necessary configuration adjustments | . Build Firmware Image . | Login to the Raspberry Pi | Run the following: . sudo apt install make cd ~/klipper make clean make menuconfig . | In the menu structure there are a number of items to be selected. | Select “Enable extra low-level configuration options” | Set the micro-controller architecture is set to STMicroelectronics STM32 | Set the Processor model to STM32F446 or STM32F429 (Depends on the MCU of your motherboard) | Set the Bootloader offset to 32KiB bootloader | Set the Clock Reference to 12 MHz crystal(for STM32F446) or 8 MHz crystal(for STM32F429) | Set the Communication interface to USB (on PA11/PA12) (note: see BigTreeTech documentation if you intend to use UART rather than USB) | . | Once the configuration is selected, press q to exit, and “Yes” when asked to save the configuration. | Run the command make | The make command, when completed, creates a firmware file klipper.bin that is store in the folder /home/pi/klipper/out. | . There are multiple options for getting this firmware file installed onto your Octopus. Firmware Installation . Important: Please write down these steps or bookmark this page - you might need to repeat the following steps if you update Klipper. Option 1: SDcard Firmware Install . | Works regardless of USB vs UART | Requires a microSD card | . | Execute these commands via SSH to rename the firmware file to firmware.bin: cd ~/klipper mv out/klipper.bin out/firmware.bin . Important: If the file is not renamed, the bootloader will not be updated properly. The bootloader looks for a file named firmware.bin. | Use a tool such as cyberduck or winscp to copy the firmware.bin file off your pi, onto your computer. | Ensure that your sdcard is formatted FAT32 (NOT EXFAT!) | copy firmware.bin onto the microSD card | power off the Octopus | insert the microSD card | power on the Octopus | after a few seconds, the Octopus should be flashed. | you can confirm that the flash was successful, by running ls /dev/serial/by-id. if the flash was successful, this should now show a klipper device, similar to: . | . (note: this test is not appicable if the firmware was compiled for UART, rather than USB) . Important: If the Octopus is not powered with 12-24V, Klipper will be unable to communicate with the TMC drivers via UART and the Octopus will automatically shut down. Option 2: DFU Firmware Install . | Requires a USB connection | Requires the installation of an extra jumper on the Octopus | Does NOT require an sdcard | . | Power off Octopus | Install a jumper between BOOT0 and 3.3V | Connect Octopus &amp; Pi via USB-C | Power on Octopus | from your ssh session, run lsusb. and find the ID of the dfu device. The device is typically named STM Device in DFU mode. | If you do not see a DFU device in the list, press the reset button next to the USB connector and run lsusb again. | run make flash FLASH_DEVICE=1234:5678 replace 1234:5678 with the ID from the previous step. Note that the ID is in hexadecimal, it only contains the numbers 0-9 and letters A-F. | power off the Octopus | remove the jumper from BOOT0 and 3.3V | Power on the Octopus | You can confirm that the flash was successful, by running ls /dev/serial/by-id. if the flash was successful, this should now show a klipper device, similar to: | . (note: this test is not appicable if the firmware was compiled for UART, rather than USB) . Back to Software Installation . ",
    "url": "/build/software/octopus_klipper.html#octopuspro-klipper-firmware",
    "relUrl": "/build/software/octopus_klipper.html#octopuspro-klipper-firmware"
  },"195": {
    "doc": "Octopus (Pro) Klipper Firmware",
    "title": "Octopus (Pro) Klipper Firmware",
    "content": " ",
    "url": "/build/software/octopus_klipper.html",
    "relUrl": "/build/software/octopus_klipper.html"
  },"196": {
    "doc": "Print Tuning Guide",
    "title": "Print Tuning Guide",
    "content": "Here is my print tuning guide, covering print/printer tuning and troubleshooting, slicer tricks, macro tricks, and more: . https://github.com/AndrewEllis93/Print-Tuning-Guide . ",
    "url": "/community/howto/ellis/print-tuning-guide.html",
    "relUrl": "/community/howto/ellis/print-tuning-guide.html"
  },"197": {
    "doc": "printer.cfg Changes & Klipper updates",
    "title": "printer.cfg Changes &amp; Klipper updates",
    "content": "You just updated klipper, and now your printer won’t start? Don’t worry. The vast majority of these issues are quickly fixed with a few easy changes to your printer.cfg . Do note: this guide is only intended to highlight changes that show up in at least one stock Voron configuration. If you have a heavily customized config, you will likely also need to have a look at the Klipper config changes document . | Change Date | Printer | changes required | . | 2021-03-04 | All | Moonraker now requires [octoprint_compat] in moonraker.conf, in order to accept octoprint style slicer uploads | . | 2020-12-22 | All | Klipper is depreciating step_distance: in favour of rotation_distance: Please see the rotation_distance document. Although it’s currently in a soft transition period, this change will eventually break all existing printer.cfg | . | 2020-11-20 | Voron-2 | If you are using aliases, aka, a [board_pins] section: add the line mcu: mcu, z | . | 2020-10-29 | All | If you are using a Fystec Mini12864, or other display with neopixels: in the [neopixel] section, replace color_order_GRB: False with color_order: RGB | . | 2020-09-02 | All | If you are using a MAX31865 amplifier, there was a math error, which has now been corrected. you will need to re calibrate all printing temperatures, and re PID-tune your extruder. | . | 2020-08-09 | All | If you are using any custom display menus, the configuration has changed. You will need to remove these menus, or re-write them with the new formatting | . ",
    "url": "/community/troubleshooting/shiftingtech/printer.cfg_changes.html#printercfg-changes--klipper-updates",
    "relUrl": "/community/troubleshooting/shiftingtech/printer.cfg_changes.html#printercfg-changes--klipper-updates"
  },"198": {
    "doc": "printer.cfg Changes & Klipper updates",
    "title": "Okay, my printer.cfg is good, but now I’m getting this other error:",
    "content": "Recv: // Unknown command: queue_digital_out Recv: // This type of error is frequently caused by running an older Recv: // version of the firmware on the micro-controller (fix by Recv: // recompiling and flashing the firmware). Remember, klipper is split into two halves. the main software, which runs on your Pi, and the MCU firmware, which runs on the SKR or other printer control board. These sorts of errors typically mean that you have updated the main software, but not the MCU Firmware. You should follow the flashing process for your specific MCU board, found in the build docs . ",
    "url": "/community/troubleshooting/shiftingtech/printer.cfg_changes.html#okay-my-printercfg-is-good-but-now-im-getting-this-other-error",
    "relUrl": "/community/troubleshooting/shiftingtech/printer.cfg_changes.html#okay-my-printercfg-is-good-but-now-im-getting-this-other-error"
  },"199": {
    "doc": "printer.cfg Changes & Klipper updates",
    "title": "printer.cfg Changes & Klipper updates",
    "content": " ",
    "url": "/community/troubleshooting/shiftingtech/printer.cfg_changes.html",
    "relUrl": "/community/troubleshooting/shiftingtech/printer.cfg_changes.html"
  },"200": {
    "doc": "Pull Request Guide",
    "title": "Pull Request Guide",
    "content": "The following is a basic guide for creating pull requests for submtting to any of the Voron repositories such as Documentation and UserMods. | Create a github user if you don’t have one already. | Browse to the Voron github repo, either VoronUsers or Voron-Documentation. | On the top right, click on ‘Fork’. | It will process for a few seconds, then return back with a fork of the selected repository. The owner will no longer be ‘Voron Designs’, but the user who forked the repository. | Make the desired changes to the local / forked repository. This can be done from the web UI or the command line. | Be sure to create a commit. This actually adds the files to the request. | Return back to the main Voron Designs repo by clicking the link next to “forked from VoronDesign/” | Select Pull Requests and click the New Pull Request button. | Select Compare Across Forks and select your repository. | Give a title for your pull request and fill out the form. | Click Create Pull Request. It will be submitted and will be manually reviewed. | . For a visual reference, please see Nemgrea’s video guide . ",
    "url": "/community/support/pull_request_guide.html",
    "relUrl": "/community/support/pull_request_guide.html"
  },"201": {
    "doc": "Rail Misalignment Causing Twist",
    "title": "Rail Misalignment Causing Twist",
    "content": "Note: The printed tools mentioned below may be found on github . ",
    "url": "/community/troubleshooting/badnoob/rail_misalignment_causing_twist.html",
    "relUrl": "/community/troubleshooting/badnoob/rail_misalignment_causing_twist.html"
  },"202": {
    "doc": "Rail Misalignment Causing Twist",
    "title": "Issue with twist?",
    "content": ". | I had an issue with my first layer height. my bed mesh showed 75,160 and 220,160 should be close to the same z but they were off by 0.08mm. | Discord gurus diagnosed this as evidence of twist. And they are correct, but it is not the extrusion which is twisted. | I found that the rails were slightly misaligned relative to the extrusion, this lets the carriage spiral around a straight extrusion (within the flex of the carriage and tolerance of the rails) | . ",
    "url": "/community/troubleshooting/badnoob/rail_misalignment_causing_twist.html#issue-with-twist",
    "relUrl": "/community/troubleshooting/badnoob/rail_misalignment_causing_twist.html#issue-with-twist"
  },"203": {
    "doc": "Rail Misalignment Causing Twist",
    "title": "Measure twice..",
    "content": "Before Measurement Video . | I mounted a dial indicator to the front of Afterburner and started taking measurements | I found that the measured delta would vary with different z height. If this were simple tilt, the measurements would be the same no matter the z height. | The delta would vary from 19/1000 to 25/1000, the higher I went the larger it was. this allowed me to calculate the amount of “twist” and the rail misalignment | . ",
    "url": "/community/troubleshooting/badnoob/rail_misalignment_causing_twist.html#measure-twice",
    "relUrl": "/community/troubleshooting/badnoob/rail_misalignment_causing_twist.html#measure-twice"
  },"204": {
    "doc": "Rail Misalignment Causing Twist",
    "title": "Identify the issue",
    "content": ". | This diagram shows what I think is going on. In the AB, you align and install the front rail, then align the bottom rail to it. | If the front rail is slightly misaligned higher on the left/lower on the right (black arrows), it will pull up on the carriage (gray arrow) when moved to the left (green arrow). The bottom rail is constrained in that direction, so it moves forward(red arrow), and the carriage is tilted. | From the measurements I took, I was approx. 0.035mm high to the left and 0.035 mm low on the right. I calculated the twist at approx 0.4 degrees. | But why haven’t we seen this before? can’t QGL take care of it? | . ",
    "url": "/community/troubleshooting/badnoob/rail_misalignment_causing_twist.html#identify-the-issue",
    "relUrl": "/community/troubleshooting/badnoob/rail_misalignment_causing_twist.html#identify-the-issue"
  },"205": {
    "doc": "Rail Misalignment Causing Twist",
    "title": "Why 2.2 has no issue here and why QGL can’t fix it for Afterburner",
    "content": ". | With 2.2 there is no bottom rail to turn tilt into twist. QGL can compensate for any misalignment by adjusting the y rails up and down | With afterburner though, the bottom rail can turn this tilt into twist. | QGL cannot fully adjust for twist, because it’s only function is to adjust the 4 z stepper offsets so that 4 measurements are equal. | QGL cannot compensate for twist and remain untilted. because of the size of the relative errors, it is biased to tilt correction | . ",
    "url": "/community/troubleshooting/badnoob/rail_misalignment_causing_twist.html#why-22-has-no-issue-here-and-why-qgl-cant-fix-it-for-afterburner",
    "relUrl": "/community/troubleshooting/badnoob/rail_misalignment_causing_twist.html#why-22-has-no-issue-here-and-why-qgl-cant-fix-it-for-afterburner"
  },"206": {
    "doc": "Rail Misalignment Causing Twist",
    "title": "Effect at nozzle",
    "content": ". | If the front rail is misaligned by 0.035 mm, then the twist over the x axis would be 2* atan(0.035/10)= 0.4 degrees. over the entire rail | The nozzle is 70.79 mm away from centerline. So what is the effect relative to the build surface? | Over 200 mm, the carriage would rotate only 0.2 degrees. but at a distance of 70.79mm from center, that works out to a lift of 0.18mm. (mine was less than this, 0.08 over 150mm) | So yes, that could be the problem. but how to fix? | . ",
    "url": "/community/troubleshooting/badnoob/rail_misalignment_causing_twist.html#effect-at-nozzle",
    "relUrl": "/community/troubleshooting/badnoob/rail_misalignment_causing_twist.html#effect-at-nozzle"
  },"207": {
    "doc": "Rail Misalignment Causing Twist",
    "title": "Remediation",
    "content": "Remediation Video . | BE CAREFUL HERE you are operating on a running printer | Get the printer zeroed out and QGL’d. | The process twill be to loosen up all the bolts in the lower rail, loosen all but one in the frontrail, and use a paper test or dial indicator to check for rail alignment | . ",
    "url": "/community/troubleshooting/badnoob/rail_misalignment_causing_twist.html#remediation",
    "relUrl": "/community/troubleshooting/badnoob/rail_misalignment_causing_twist.html#remediation"
  },"208": {
    "doc": "Rail Misalignment Causing Twist",
    "title": "Making the adjustment",
    "content": ". | Install this adjuster on the far left (x=0) side of the x rail. Move the carriage to the right side of a known flat area on your bed and zero out the indicator. | SAFETY WARNING: Do not home with this adjuster in place! Be very careful when operating at high Y values!! If you do, it will contact well before the y switch does, and you will have bigger problems on your hands loosen all the screws securing the front rail except the one immediately to the carriage’s right, this will be our pivot for the rail adjustment. | Move the carriage left. after the carriage uncovers a screw, adjust the adjuster on the left until the dial indicator reads 0, then tighten down the screw. | Repeat until the front rail is all secured. | Tighten all the screws on the front rail, turn the motors off, and verify that there is smooth movement. | You may need to repeat this a few times. | . ",
    "url": "/community/troubleshooting/badnoob/rail_misalignment_causing_twist.html#making-the-adjustment",
    "relUrl": "/community/troubleshooting/badnoob/rail_misalignment_causing_twist.html#making-the-adjustment"
  },"209": {
    "doc": "Rail Misalignment Causing Twist",
    "title": "Results",
    "content": "Remediation Results Video . | This took several iterations. | . ",
    "url": "/community/troubleshooting/badnoob/rail_misalignment_causing_twist.html#results",
    "relUrl": "/community/troubleshooting/badnoob/rail_misalignment_causing_twist.html#results"
  },"210": {
    "doc": "Rail Misalignment Causing Twist",
    "title": "Effect of twist on mesh",
    "content": ". | Mesh on the left is with the twist (0.4 degree) mesh on right is after fix. | With my twist, as the probe moved left the twist would turn it away from the bed, exaggerating the distance | . ",
    "url": "/community/troubleshooting/badnoob/rail_misalignment_causing_twist.html#effect-of-twist-on-mesh",
    "relUrl": "/community/troubleshooting/badnoob/rail_misalignment_causing_twist.html#effect-of-twist-on-mesh"
  },"211": {
    "doc": "Other Resources",
    "title": "Resources",
    "content": "There’s lots. ",
    "url": "/community/resources.html#resources",
    "relUrl": "/community/resources.html#resources"
  },"212": {
    "doc": "Other Resources",
    "title": "Related Projects",
    "content": "Non-Voron projects that are related to Voron and Klipper. | KlipperScreen | Klipper Installation and Update Helper | . ",
    "url": "/community/resources.html#related-projects",
    "relUrl": "/community/resources.html#related-projects"
  },"213": {
    "doc": "Other Resources",
    "title": "Other Resources",
    "content": " ",
    "url": "/community/resources.html",
    "relUrl": "/community/resources.html"
  },"214": {
    "doc": "Rotation Distance",
    "title": "Rotation Distance",
    "content": "On 2020-12-22, klipper introduced a new system for defining stepper motor movement, replacing the old step_distance setting with a new rotation_distance setting. Currently, we are in a transitional period, where the old step_distance settings are depreciated, but may still be used. Sometime around 2021-06-15, this new system is expected to become mandatory. When this second change occurs, it will break all printer.cfg which have not been adapted to the new system. For full information on the new system, see the klipper documentation . ",
    "url": "/community/troubleshooting/shiftingtech/rotation_distance.html",
    "relUrl": "/community/troubleshooting/shiftingtech/rotation_distance.html"
  },"215": {
    "doc": "Rotation Distance",
    "title": "Changes Required?",
    "content": "You will need to update all stepper motor related sections of your printer.cfg. These include all [stepper_??], [tmcXXXX stepper_??], [extruder], and [tmcXXXX extruder] sections. The specific changes required for each section, on a stock printer are listed below, under . | Voron 0 | Voron Switchwire | Voron 1 | Voron 2 | . Please Note: If you are running a modified printer, only you can validate whether these settings match your printer . ",
    "url": "/community/troubleshooting/shiftingtech/rotation_distance.html#changes-required",
    "relUrl": "/community/troubleshooting/shiftingtech/rotation_distance.html#changes-required"
  },"216": {
    "doc": "Rotation Distance",
    "title": "Voron 0",
    "content": "[stepper_x] and [stepper_y] . | Remove the step_distance: line | Add the line rotation_distance: 40 | Add the line microsteps: 16 (if you have a microstepping other than 16 in your tmc2209 section, use the same number here) | . [tmc2209 stepper_x] and [tmc2209 stepper_y] . | remove the microsteps: line | . [stepper_z] . | Remove the step_distance: line | For a T8x8 Leadscrew (step_distance: 0.0025): Add the line rotation_distance: 8 | For a T8x2 Leadscrew (step_distance: 0.000625 ): Add the line rotation_distance: 2 | Add the line microsteps: 16 (if you have a microstepping other than 16 in your tmc2209 section, use the same number here) | . [tmc2209 stepper_z] . | remove the microsteps: line | . [extruder] . | calculate your new rotation_distance. the basic formula is rotation_distance = &lt;full_steps_per_rotation&gt; * &lt;microsteps&gt; * &lt;step_distance&gt; in most cases, this means: rotation_distance = 200 * 16 * &lt;old_step_distance&gt; | remove the step_distance: line | add the line rotation_distance: x replacing x with the value you calculated above | Add the line microsteps: 16 (if you have a microstepping other than 16 in your tmc* section, use the same number here) | . [tmc2209 extruder] . | remove the microsteps: line | . ",
    "url": "/community/troubleshooting/shiftingtech/rotation_distance.html#voron-0",
    "relUrl": "/community/troubleshooting/shiftingtech/rotation_distance.html#voron-0"
  },"217": {
    "doc": "Rotation Distance",
    "title": "Voron Switchwire",
    "content": "[stepper_x], [stepper_y], and [stepper_z] . | Remove the step_distance: line | Add the line rotation_distance: 40 | Add the line microsteps: 16 (if you have a microstepping other than 16 in your tmc* section, use the same number here) | Only for 0.9 degree steppers: add the line full_steps_per_rotation:400 | . [tmc2209 stepper_x], [tmc2209 stepper_y], [tmc2209 stepper_z] or [tmc2130 stepper_x], [tmc2130 stepper_y], [tmc2130 stepper_z] . | Remove the microsteps: line | . [extruder] . | calculate your new rotation_distance. the basic formula is rotation_distance = &lt;full_steps_per_rotation&gt; * &lt;microsteps&gt; * &lt;step_distance&gt; in most cases, this means: rotation_distance = 200 * 16 * &lt;old_step_distance&gt; | remove the step_distance: line | add the line rotation_distance: x replacing x with the value you calculated above | Add the line microsteps: 16 (if you have a microstepping other than 16 in your tmc* section, use the same number here) | Only for 0.9 degree steppers: add the line full_steps_per_rotation:400 | . [tmc2209 extruder] or [tmc2130 extruder] . | Remove the microsteps: line | . ",
    "url": "/community/troubleshooting/shiftingtech/rotation_distance.html#voron-switchwire",
    "relUrl": "/community/troubleshooting/shiftingtech/rotation_distance.html#voron-switchwire"
  },"218": {
    "doc": "Rotation Distance",
    "title": "Voron 1",
    "content": "[stepper_x] and [stepper_y] . | Remove the step_distance: line | Add the line rotation_distance: 40 | Add the line microsteps: 16 (if you have a microstepping other than 16 in your tmc220* section, use the same number here) | Only for 0.9 degree steppers: add the line full_steps_per_rotation:400 | . [tmc220* stepper_x] and [tmc220* stepper_y] . | remove the microsteps: line | . [stepper_z], [stepper_z1] . | Remove the step_distance: line | Add the line rotation_distance: 8 | Add the line microsteps: 16 (if you have a microstepping other than 16 in your tmc* section, use the same number here) | Only for 0.9 degree steppers: add the line full_steps_per_rotation:400 | . [tmc220* stepper_z], [tmc220* stepper_z1] . | remove the microsteps: line | . [extruder] . | calculate your new rotation_distance. the basic formula is rotation_distance = &lt;full_steps_per_rotation&gt; * &lt;microsteps&gt; * &lt;step_distance&gt; in most cases, this means: rotation_distance = 200 * 16 * &lt;old_step_distance&gt; | remove the step_distance: line | add the line rotation_distance: x replacing x with the value you calculated above | Add the line microsteps: 16 (if you have a microstepping other than 16 in your tmc* section, use the same number here) | Only for 0.9 degree steppers: add the line full_steps_per_rotation:400 | . [tmc220* extruder] . | remove the microsteps: line | . ",
    "url": "/community/troubleshooting/shiftingtech/rotation_distance.html#voron-1",
    "relUrl": "/community/troubleshooting/shiftingtech/rotation_distance.html#voron-1"
  },"219": {
    "doc": "Rotation Distance",
    "title": "Voron 2",
    "content": "[stepper_x] and [stepper_y] . | Remove the step_distance: line | Add the line rotation_distance: 40 | Add the line microsteps: 16 (if you have a microstepping other than 16 in your tmc220* section, use the same number here) | Only for 0.9 degree steppers: add the line full_steps_per_rotation:400 | . [tmc220* stepper_x] and [tmc220* stepper_y] . | remove the microsteps: line | . [stepper_z], [stepper_z1], [stepper_z2], [stepper_z3] . | Remove the step_distance: line | Add the line rotation_distance: 40 | Add the line gear_ratio: 80:16 | Add the line microsteps: 16 (if you have a microstepping other than 16 in your tmc* section, use the same number here) | Only for 0.9 degree steppers: add the line full_steps_per_rotation:400 | . [tmc220* stepper_z], [tmc220* stepper_z1], [tmc220* stepper_z2], [tmc220* stepper_z3] . | remove the microsteps: line | . [extruder] . | calculate your new rotation_distance. the basic formula is rotation_distance = &lt;full_steps_per_rotation&gt; * &lt;microsteps&gt; * &lt;step_distance&gt; in most cases, this means: rotation_distance = 200 * 16 * &lt;old_step_distance&gt; | remove the step_distance: line | add the line rotation_distance: x replacing x with the value you calculated above | Add the line microsteps: 16 (if you have a microstepping other than 16 in your tmc* section, use the same number here) | Only for 0.9 degree steppers: add the line full_steps_per_rotation:400 | . [tmc220* extruder] . | remove the microsteps: line | . ",
    "url": "/community/troubleshooting/shiftingtech/rotation_distance.html#voron-2",
    "relUrl": "/community/troubleshooting/shiftingtech/rotation_distance.html#voron-2"
  },"220": {
    "doc": "Secondary Printer Tuning",
    "title": "Secondary Printer Tuning",
    "content": "Tuning steps and processes after everything is working. ",
    "url": "/tuning/secondary_printer_tuning.html",
    "relUrl": "/tuning/secondary_printer_tuning.html"
  },"221": {
    "doc": "Secondary Printer Tuning",
    "title": "Gantry Racking",
    "content": "Check out Nero’s video on gantry racking . ",
    "url": "/tuning/secondary_printer_tuning.html#gantry-racking",
    "relUrl": "/tuning/secondary_printer_tuning.html#gantry-racking"
  },"222": {
    "doc": "Secondary Printer Tuning",
    "title": "Belt Tension",
    "content": ". | Move your gantry so the side belts from the front idlers to the XY joints are separated center to center 150mm | Adjust tension evenly on both A and B belts until the lowest frequency in your plot registers approximately 110Hz | . This value equals ~2lb of tension on XY, which is on the lower end of the range but should be a good initial setting (without stretching your belts too tight). The phone app I am using is called Sound Spectrum Analysis on iOS, the image below shows the output (not of my belts). Watch this video . ",
    "url": "/tuning/secondary_printer_tuning.html#belt-tension",
    "relUrl": "/tuning/secondary_printer_tuning.html#belt-tension"
  },"223": {
    "doc": "Secondary Printer Tuning",
    "title": "Bed Mesh (Legacy, Trident, 2.4)",
    "content": "Generally when your Voron is first built, Bed Mesh is not necessary. However, it can still be used as an analysis tool to check assembly and see if there’s anything obviously incorrect–just don’t run SAVE_CONFIG at the end of your BED_MESH_CALIBRATE, and run BED_MESH_CLEAR after running bed mesh. The [bed_mesh] configuration options can be found on the Klipper website described in detail. A sample configuration for your Voron printer can be found here. [bed_mesh] speed: 300 horizontal_move_z: 10 ##-------------------------------------------------------------------- ## Uncomment below for 250mm build #mesh_min: 40, 40 #mesh_max: 210,210 ## Uncomment for 300mm build #mesh_min: 40, 40 #mesh_max: 260,260 ## Uncomment for 350mm build #mesh_min: 40, 40 #mesh_max: 310,310 ##-------------------------------------------------------------------- fade_start: 0.6 fade_end: 10.0 probe_count: 5,5 algorithm: bicubic relative_reference_index: 12 . Generally a 5x5 grid is acceptable for even the largest Voron printer, but you can adjust the points to be greater or less than that. It is recommended to use an odd value for numbers of points in X and Y, such as 3x3, 5x5, or 7x7, so that there is always a probe point in the center of your bed. As we use the probe as a relative and not absolute measurement device, it is critical that you have the relative_reference_index parameter. This value will change as you adjust your mesh size: . relative_reference_index = ()(x points * y points) - 1) / 2 . 3x3 mesh = 4 . 5x5 mesh = 12 . 7x7 mesh = 24, etc . You should check your mesh before printing to make sure it sits around 0 on the z axis: . ",
    "url": "/tuning/secondary_printer_tuning.html#bed-mesh-legacy-trident-24",
    "relUrl": "/tuning/secondary_printer_tuning.html#bed-mesh-legacy-trident-24"
  },"224": {
    "doc": "Secondary Printer Tuning",
    "title": "Bed Mesh (Switchwire)",
    "content": "Due to the the use of a thinner prusa-style bed on the switchwire, it will generally require the use of a bed mesh. It should not generally be necessary to make any major adjustments to the mesh configuration included in the stock configuration files, however, if you do wish to fine tune it, detailed information can be found on the Klipper website. Note that unlike other Voron models, the Switchwire uses the probe as a virtual endstop, and thus should NOT use relative_reference_index. To calibrate the mesh on your printer, it is important to check that your probe is correctly calibrated, using PROBE_CALIBRATE, and that your printer is homed (G28). Next, run BED_MESH_CALIBRATE which will actually execute the probing process. Once this completes, you may wish to pause, and inspect the mesh using the visualizer functions built into fluidd/mainsail or the Bed Mesh Visualizer plugin for Octoprint. Assuming the mesh looks plausible, you may now run SAVE_CONFIG to store the mesh permanently, and restart your printer. ",
    "url": "/tuning/secondary_printer_tuning.html#bed-mesh-switchwire",
    "relUrl": "/tuning/secondary_printer_tuning.html#bed-mesh-switchwire"
  },"225": {
    "doc": "Secondary Printer Tuning",
    "title": "Input Shaper",
    "content": "Input Shaper is a Klipper-specific software technique for reducing ringing (also known as echoing, ghosting or rippling) in prints. See the Klipper guide on configuring Input Shaper for more details and the complete process. ",
    "url": "/tuning/secondary_printer_tuning.html#input-shaper",
    "relUrl": "/tuning/secondary_printer_tuning.html#input-shaper"
  },"226": {
    "doc": "Secondary Printer Tuning",
    "title": "Print Tuning",
    "content": "Andrew Ellis’ Print Tuning Guide, covering print/printer tuning and troubleshooting, slicer tricks, macro tricks, and more. ",
    "url": "/tuning/secondary_printer_tuning.html#print-tuning",
    "relUrl": "/tuning/secondary_printer_tuning.html#print-tuning"
  },"227": {
    "doc": "Setting Up and Calibrating Sensorless XY Homing",
    "title": "Setting Up and Calibrating Sensorless XY Homing",
    "content": "When using the TMC2130 / TMC2209 / TMC2660 / TMC5160 drivers, the StallGuard feature makes it possible to set up sensorless homing on the X and Y axes for CoreXY machines. The Klipper project has a page with documentation and recommendations on getting it working. Following are some more detailed instructions and suggestions to supplement the Klipper documentation specifically for Vorons. ",
    "url": "/community/howto/clee/sensorless_xy_homing.html",
    "relUrl": "/community/howto/clee/sensorless_xy_homing.html"
  },"228": {
    "doc": "Setting Up and Calibrating Sensorless XY Homing",
    "title": "Hardware Setup",
    "content": "You need to configure your hardware properly to enable sensorless homing. This involves two main steps: . | If you currently have Hall Effect or microswitch XY endstops connected to your microcontroller (SKR, Spider, Octopus, E3 mini, SKR Pico, etc), then you must physically pull them out of the microcontroller. If you leave the physical endstops connected, sensorless homing will not work. | Install jumpers on the relevant DIAG pins to enable sensorless homing on the X and Y stepper drivers. | . ",
    "url": "/community/howto/clee/sensorless_xy_homing.html#hardware-setup",
    "relUrl": "/community/howto/clee/sensorless_xy_homing.html#hardware-setup"
  },"229": {
    "doc": "Setting Up and Calibrating Sensorless XY Homing",
    "title": "Software Setup",
    "content": "Klipper . You’ll need to modify the endstop_pin values for [stepper_x] and [stepper_y], by adding a pullup ^, moving the current value into the relevant TMC blocks, and updating the endstop_pins to use the virtual_endstop as described in the following sections. Also, as the Klipper docs instruct, set the homing_retract_dist to 0, and make sure your X and Y homing_speed values are set to half of your rotation_distance (homing_speed should be 20 for Vorons with 20T pulleys on the A/B motors). For TMC2209 . The following pin examples are from a BTT E3 mini V2; make sure to adjust based on your own configuration. Before: . [stepper_x] # … endstop_pin: PC0 [tmc2209 stepper_x] # … [stepper_y] # … endstop_pin: PC1 [tmc2209 stepper_y] # … . After: . [stepper_x] endstop_pin: tmc2209_stepper_x:virtual_endstop [tmc2209 stepper_x] # … diag_pin: ^PC0 # use the same pin that was previously the endstop_pin! driver_SGTHRS: 255 [stepper_y] # … endstop_pin: tmc2209_stepper_y:virtual_endstop [tmc2209 stepper_y] # … diag_pin: ^PC1 # use the same pin that was previously the endstop_pin! driver_SGTHRS: 255 # 255 is most sensitive value, 0 is least sensitive . For TMC5160 . The following pin examples are from a BTT Octopus Pro; make sure to adjust based on your own configuration. Before: . [stepper_x] # … endstop_pin: PG6 [tmc5160 stepper_x] # … . After: . [stepper_x] # … endstop_pin: tmc5160_stepper_x:virtual_endstop [tmc5160 stepper_x] # … diag1_pin: ^!PG6 # use the same pin that was previously the endstop_pin! driver_SGT: -64 # -64 is most sensitive value, 63 is least sensitive . Finding the right StallGuard threshold . The calibration process is: . | For TMC2209, start with SET_TMC_FIELD FIELD=SGTHRS STEPPER=stepper_x VALUE=255 in the console. For TMC2130/TMC2660/TMC5160, use SET_TMC_FIELD FIELD=SGT STEPPER=stepper_x VALUE=-64 instead. Start with the most sensitive value for the StallGuard threshold based on which kind of TMC driver you’re using (255 for TMC2209, or -64 for TMC2130/TMC2660/TMC5160). | Try running G28 X0 to see if the toolhead moves along the X axis. | If your toolhead moves all the way to the end of the rail, IMMEDIATELY HIT THE EMERGENCY STOP BUTTON. | The Klipper documentation is good here, with one exception. This information is not correct: Then issue a G28 X0 command and verify the axis does not move at all. When running the G28 X0 or G28 Y0 command, the toolhead WILL move a millimeter or so before it triggers the virtual endstop. This is normal. | Assuming that the toolhead moved a millimeter or so and then stopped, change the VALUE to decrease the sensitivity by 5-10, try again, and keep going until you find the first value that successfully homes your printer. | Follow the Klipper instructions on fine-tuning the value once your toolhead is homing successfully on this axis. Make sure you run G91 G1 X-10 . to back the toolhead off after hitting the end of the rail (assuming you’re homing to the maximum X value) or else Y homing will not work properly. | Update the driver_SGTHRS or driver_SGT value with your new StallGuard threshold. | . Do not forget, you need to repeat this same process for the Y axis. Final setup . If you have a [safe_z_home] section, you need to comment out the entire block (not just the [safe_z_home] line!). Or you could just delete the entire block, but if sensorless homing doesn’t work reliably for you for some reason and you decide you want to go back to a physical endstop setup, you’ll be glad you didn’t delete it. Now you need to create a [homing_override] section. The Klipper docs recommend setting up dedicated SENSORLESS_HOME_X/SENSORLESS_HOME_Y macros. Here’s a setup that has been working well for several Voron owners (you will probably want to tweak the HOME_CUR values for your own setup): . [gcode_macro _SENSORLESS_HOME_X] gcode: # Set current for sensorless homing {% set driver_config = printer.configfile.settings['tmc2209 stepper_x'] %} {% set RUN_CUR = driver_config.run_current|float %} {% set HOME_CUR = 0.7 %} SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR} # Home G28 X # Move away G91 G1 X-10 F1200 # Set current during print SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR} [gcode_macro _SENSORLESS_HOME_Y] gcode: # Set current for sensorless homing {% set driver_config = printer.configfile.settings['tmc2209 stepper_y'] %} {% set RUN_CUR = driver_config.run_current|float %} {% set HOME_CUR = 0.7 %} SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR} # Home G28 Y # Move away G91 G1 Y-10 F1200 # Set current during print SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR} [homing_override] axes: xyz gcode: {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %} {% if home_all or 'X' in params %} _SENSORLESS_HOME_X {% endif %} G4 P2000 {% if home_all or 'Y' in params %} _SENSORLESS_HOME_Y {% endif %} {% if home_all or 'Z' in params %} G28 Z G1 Z10 {% endif %} . Restart Klipper, and now the “Home X”/”Home Y”/”Home Z” buttons in Mainsail and Fluidd will work properly (and so will commands like “G28 X”), using your new sensorless homing setup. ",
    "url": "/community/howto/clee/sensorless_xy_homing.html#software-setup",
    "relUrl": "/community/howto/clee/sensorless_xy_homing.html#software-setup"
  },"230": {
    "doc": "SKR 1.3/1.4 Klipper Firmware",
    "title": "SKR 1.3/1.4 Klipper Firmware",
    "content": "The firmware update process for both SKR 1.3 and SKR 1.4 is the same so the guides have been combined. Required Items . | Klipper must be installed onto the Raspberry Pi | At least one microSD card needs to be available depending on number of controllers. | . Build Firmware Image . | Login to the Raspberry Pi | Run the following: | . sudo apt install make cd ~/klipper make menuconfig . In the menu structure there are a number of items to be selected. | Ensure that the micro-controller architecture is set to ‘LPC176x’ | If the SKR is a Turbo model, ensure the processor model is set to ‘lpc1769 (120 Mhz)’ | If the SKR is a non-Turbo model, ensure the processor model is set to ‘lpc1768 (100 Mhz)’ | . | Ensure that “Target board uses Smoothieware bootloader” is enabled | Ensure that “Use USB for communication (instead of serial)” is enabled | . Once the configuration is selected, select “Exit” and “Yes” if asked to save the configuration. Run the following: . make clean make . The make command, when completed, creates a firmware file klipper.bin that is store in the folder /home/pi/klipper/out. This file need to be copied to both of the SKR boards. The easiest way to do this is to use a GUI like WinSCP on Windows or either Cyberduck or scp (from terminal) on Mac to copy the file to your computer. Load Firmware Image . Copy the klipper.bin to the desktop, then rename it to firmware.bin . Important: If the file is not renamed, the bootloader will not be updated properly. Ensure that all SKR boards are not powered, then remove the microSD card(s) that are installed. Connect one of the microSD cards to the computer with the firmware.bin file. Open the microSC card in the file browser. There will be a file named ‘firmware.cur’, that file can be deleted or left alone, it will be overwritten later. Copy the firmware.bin from the desktop onto the microSD card. If problems are encountered transferring the file(s) to the microSD card, reformat the microSD card with a FAT32 filesystem and try again. V2: Repeat the process with the second microSD card. Replace the microSD card(s) into the SKR(s). If more than one, it does not matter which card goes into which controller. Turn on the power supply to power on the SKR board(s). If named properly, the SKR will automatically update with the Klipper firmware. Important: If the SKR(s) are not powered with 12-24V, Klipper will be unable to communicate with the TMC drivers via UART and the SKR will automatically shut down. Back to Software Installation . ",
    "url": "/build/software/skr13_klipper.html",
    "relUrl": "/build/software/skr13_klipper.html"
  },"231": {
    "doc": "Sourcing Information",
    "title": "Sourcing Information",
    "content": " ",
    "url": "/sourcing.html",
    "relUrl": "/sourcing.html"
  },"232": {
    "doc": "Sourcing Information",
    "title": "Bill of Materials and Source Guide",
    "content": "The Bill of Materials (BOM) is generated from the Voron Design website. Select the printer to be built, then select ‘Configurator’ and choose from the parameters. A customized BOM will be presented. The BOM is considered the absolute guide for what is actually required to build the printer. The Sourcing Guide is made available at the same time as the customized BOM. It is a list of Voron maintained references to where to purchase the various components listed on the BOM for the different printers. The sourcing guide is not customized to the printer. All quantities are mostly incorrect. There are additional tabs at the bottom of the sourcing guide for optional or additional components. ",
    "url": "/sourcing.html#bill-of-materials-and-source-guide",
    "relUrl": "/sourcing.html#bill-of-materials-and-source-guide"
  },"233": {
    "doc": "Sourcing Information",
    "title": "Printing Parts",
    "content": "Material . Please see the materials guide for more detailed information. Print It Forward (PIF) . If you are not able to print the ABS parts of a Voron yourself, there is a community-driven service called Print it Forward (PIF) in place. The goal of PIF is to provide a set of necessary structural parts for a Voron printer of your desire, printed on a Voron 3D Printer, showcasing their print quality. Every PIF-Provider undergoes a thorough vetting procedure in order to provide parts capable of demonstrating of what a Voron is capable of. PIF is a non-profit project, the pricing is set to compensate for the filament, energy and wear on the provider’s rig. More information and the current queue length can be found on the PIF Website. There is also a separate channel on the Voron discord, where questions can be asked. Colors and Quantities . The recommended accent parts are denoted with a “[a]_” in the filename. Many of these are still functional in nature and should still follow the recommended print settings. Filenames that end with “_x#”, indicate that the part must be printed multiple times (ie. x2, x4, etc.) . Typical printers require approximately 1.5kg of the primary color and 0.3kg of the alternate color, assuming no failed or reprinted parts. Most people end up reprinting a few parts and a few mods, so plan on 2kg of the primary color. For informtion on selecting parts to print, clarification of colors and quantities, and even what parts PIF will provide, see the Printed Part Reference spreadsheet. Print Settings . These are the recommended settings. | Layer height: 0.2mm | Extrusion width: 0.4mm, forced | Infill pecentage: 40% | Infill type: grid, gyroid, honeycomb, triangle, or cubic | Wall count: 4 | Solid top/bottom layers: 5 | Supports: NONE | . ",
    "url": "/sourcing.html#printing-parts",
    "relUrl": "/sourcing.html#printing-parts"
  },"234": {
    "doc": "Sourcing Information",
    "title": "Ordering Parts",
    "content": "When purchasing, the sourcing guide and the bill of materials (BOM) are not the same. Be sure to refer to the BOM for all quantities. If unclear please see the explanation of differences. When purchasing small items, it is recommended to buy extras (round up). Having a few extra screws or connectors around may actually help you later. Note: The generated BOM part numbers for Misumi extrusions are the exact part numbers. Enter them into Misumi’s website and they will return exactly what needs to be ordered, including any extra drilling or tapping operations. There are a growing number of suppliers that are assembling kits to build Voron printers. Outside of the sourcing guide, Voron does not implicitly endorse any specific vendor of Voron kits. Parts Selection / Alternates . When choosing extrusions, V-slot extrusions are discouraged. This is due to the use of the MGN9 linear rail as the V-slot and width of the rail are very close and cause misalignment. Vendors of extrusions other than Misumi are generally fine but verification of the extrusion profile is highly recommended to ensure they will fit with the rails. If trying to keep costs down, the display / screen on any printer is entirely optional. Many builders solely use the web interface. Builders are welcome to make substitutions as they see fit but this printer is not a race to be as cheap as possible. It is designed to compete with many other high-end printers while still being affordable. Substituting parts may also have other unintended side effects and cause compatibility issues. Please feel free to ask for advice before any substitutions are made. More sourcing information can be found in the sourcing FAQ . ",
    "url": "/sourcing.html#ordering-parts",
    "relUrl": "/sourcing.html#ordering-parts"
  },"235": {
    "doc": "Sourcing Information",
    "title": "Unsupported Configurations",
    "content": "Large Format Printers . As print volumes for CoreXY printers grow, they become increasingly difficult to build, tune, operate, and maintain. Vorons are no exception to these fundamentals. Please be mindful of the size specifications listed for each Voron printer – these have been chosen based on limitations of the components and structure unique to each model. We do not recommend exceeding the largest size. Chamber Heating . There are a few reasons Voron does not and will not support active chamber heating: . | It is not necessary to use a chamber heater to achieve sufficient chamber temperatures for ABS or other common 3D printing materials. | Chamber heating is easy to screw up for someone that doesn’t have direct experience with properly designing, controlling, and mounting heaters in high temperature environments. | If we spec something and people cheap out, there will be fires involved. | If we spec something and people don’t cheap out but don’t install it correctly, there will be fires involved. | Fire is bad. | . Exotic Materials (PEEK, PEI, etc.) . While Vorons are designed to be enclosed, chamber temperatures generally do not exceed 50-60C. This is perfect for printing ABS and most Nylon and PC blends, but it is insufficient for exotic materials such as PEEK and PEI which require 100-130C chamber temperatures. While the jump from 60C to 100C may not sound like a lot, most of the parts in your Voron printer will fail before 100C including: all of the 3D printed components, stepper motors, Gates belt, linear bearings, linear rail end caps, inductive probe, acrylic, and ABS panels, fans… . Voron printers are currently not designed for exotic materials and there are no plans to modify the design to support this in the future. We recommend purchasing an industrial printer designed for this purpose if you intend to print with these materials. Multimaterial . Voron does not currently support dual extrusion, dual hot ends, tool changers, or other multimaterial solutions. The only exception to this is the bowden Y splitter attachment which is available for the Afterburner tool head. –please note that this attachment is still considered “beta” level, and as with all Y-splitter solutions, tuning the filament switch routine can be difficult. ",
    "url": "/sourcing.html#unsupported-configurations",
    "relUrl": "/sourcing.html#unsupported-configurations"
  },"236": {
    "doc": "Sourcing Information",
    "title": "Tools",
    "content": "Required Tools . It might be possible to build, troubleshoot, and tune a Voron without this list, but it will be much harder. | Set of metric hex wrenches (“keys”) from at least 1.5mm - 5mm. (Wiha, Wera, or Bondhus are preferred) | Standard screwdrivers | Wire strippers from 16 gauge (1.25mm) to 26 gauge (0.405mm) | Diagonal wire cutters, small | Soldering iron (solder helpful) | Multimeter | Metric calipers, 6”/150mm | Crimpers . | Molex Crimpers (Good: IWISS IWS-3220M, Better: Engineer PA-09, Best: Molex Crimper) | Ferrule Crimpers | Terminal Crimpers | . | . Helpful / Nice To Have Tools . These make Voron life a little nicer. | Needle nose pliers | Tweezers | Small “X-Acto” knife | Machinist scale / ruler, either 6”/150mm or 12”/300mm | Machinist square, 4”/100mm or larger (Sometimes called “locksmith angles”, see DIN 875) | Deburring tool | Small files | Small flashlight | Precision screwdriver set | Heat shrink labeler | . Next: The Build . ",
    "url": "/sourcing.html#tools",
    "relUrl": "/sourcing.html#tools"
  },"237": {
    "doc": "Sourcing / Buying FAQ",
    "title": "Sourcing / Buying FAQ",
    "content": "These are common questions for builders looking to gather all of the components for their upcoming build. ",
    "url": "/sourcing_faq.html",
    "relUrl": "/sourcing_faq.html"
  },"238": {
    "doc": "Sourcing / Buying FAQ",
    "title": "Filament / Printing",
    "content": "How much filament do I need for all printed parts? . Assuming no failed or reprinted parts and following the recommendations for accent parts, the following guidelines apply: . | Model | Primary Color | Accent Color | . | V0 | 0.5 kg | 0.2 kg | . | V1 | 1.2 kg | 0.3 kg | . | Trident | 1.4 kg | 0.3 kg | . | V2 | 1.6 kg | 0.3 kg | . | Switchwire | 0.7 kg | 0.2 kg | . | Legacy | 0.8 kg | 0.2 kg | . Can I print with a 0.6mm nozzle? . While possible, it is not recommended. Some parts have thinner walls not suitable for the larger nozzles. Why does the BOM not match the Sourcing Guide? . The bill of materials (BOM) is a list specifically generated for the defined specifications of the printer being built. The Sourcing Guide is very general for quantities and is not customized. The BOM is considered the absolute reference for items and quantities needed. ",
    "url": "/sourcing_faq.html#filament--printing",
    "relUrl": "/sourcing_faq.html#filament--printing"
  },"239": {
    "doc": "Sourcing / Buying FAQ",
    "title": "Hardware",
    "content": "What are the “TPW” and “LCP-RCP” options for the frame? . These are the options specified to have Misumi tap and drill the hex key access holes in your extrusions. You can remove these options and do this yourself to save ~$40 USD. You will need appropriate tapping tools, oil, and patience to do it correctly which may add back up to $40 when it’s all complete. The HNTAJ5-5 nuts are expensive. Do I really need this many? . No, you can substitute ball spring post-assembly nuts from Ali just as easily in 99% of the manual. Why do you recommend Chinese linear rails vs a Hiwin or THK genuine rail? . | We are not imparting cutting forces onto the carriages on the rails (ie: side loads), so the low preload and ok tolerances are good for this application | A set of 7 V2 rails is the cost of one genuine mid-grade THK rail. | Clean all of your rails, then grease them (there are numerous videos on YouTube on how to do this). Pick your best rail for the X axis, then the Y, use the worst on the Z (if applicable). | . Can I substitute MGN(insert rail size here) for MGN9H rails? . No, the Voron V1/V2 are not designed for anything but a MGN9H. The MGN12 rail carriages are wider than the 2020 extrusions and will cause interference issues. Why does VORON-Design not use IGUS products? . IGUS bushings exhibit a phenomenon called stiction, therefore in small movements the bushings will actually stick instead of gliding, at small detail, this causes detrimental issues. The amount of slop required is unfavorable, tolerances are quite poor. Bushing life is low for the price when compared to Misumi and even standard chinese offerings. I cannot find MIC6 Aluminum anywhere, is there something else I can use? . Yes, try to find the following, they are all the same thing, with a different trade name: . | Mic 6 | Alpase K100-S | Alca 5 | Vista Metals ATP 5 | Alimex 5083 (vendor is very important on this one) | . Materials not supported, these are all not designed to take repeated heating and cooling cycles and will warp quickly: . | 6061 | 5052 | 5053 | 2024 | 7### series not listed above | 5### series not listed above | . What lube should I use? . The currently recommended lube for the linear rails is Mobilux EP1 or EP2, or the NLGI equivalents. Either Super Lube or EP1/2 is recommended for the extruder gears. What kind of bolts are what? . What are the hammer nuts used for? . The hammer nuts are intended to be used with the panel clips to allow easier removal and reinstallation. It is possible to apply some locktite and create quarter-turn fasteners for easy removal and installation. ",
    "url": "/sourcing_faq.html#hardware",
    "relUrl": "/sourcing_faq.html#hardware"
  },"240": {
    "doc": "Sourcing / Buying FAQ",
    "title": "Wiring",
    "content": "What is a good crimping tool to use for terminating wires? . Engineer PA-09, PA-20, or PA-21. Yes, it’s worth the cost. What gauge wire should I use where? . The gantry wiring should be all sized as recommended. This will permit all of the wires to fit within the drag chains. The power wiring needs to be larger due to the load from the AC heater (if applicable). | Power Wiring/Mains Wiring: at least 18 awg (0.75 mm²), better 16 awg (1.25 mm²) | Hotend Heater: 20 awg (0.5 mm²) | Stepper Motors, all other wiring: 24 awg (0.25 mm²) | . PTFE or Silicone wire? . The BOM currently specifies silicone wire for bend and heat tolerance. For an increased cost, PTFE (or Heluflon) wire is a option. PTFE (Heluflon) insulation is thinner and slicker, making it more effective in the drag chains and granting the cables a longer lifetime. ",
    "url": "/sourcing_faq.html#wiring",
    "relUrl": "/sourcing_faq.html#wiring"
  },"241": {
    "doc": "Sourcing / Buying FAQ",
    "title": "Electronics",
    "content": "Why an SKR 1.4? What about turbo / faster speeds? What about FYSETC? . The BTT SKR controller is inexpensive and extremely capable for the purpose. Either an SKR 1.3 or 1.4 is historically recommended and can be used. While both controllers have different pin configurations, they use the same controller chip. BTT is no longer producing both the 1.3 and 1.4 and they will eventually be unavailable. Current alteranives include: . | FYSETC Spider | FYSETC S6 | . The turbo (or higher speed) versions are certainly usable, but the additional speed is not required since most of the computing is handled by the Raspberry Pi. Why not a Duet? . The Duet board(s) will certainly work. However when using Klipper, all of the extra features are not used so the cost is hard to justify. Can I use 0.9 degree stepper motors rather than the spec’ed 1.8 degree motors? . | They would not be recommended for the Z and E motors (Just E for the Switchwire). Those axis are already geared or screw driven which give them better resolution. Going to 0.9 degree motors means they would then need twice as many steps to go the same distance as a 1.8 degree motor. This combined with microstepping results in more cpu load on your boards and would then start to limit how fast you can drive these. | They may have some beneficial affect on the XY axis (AB motors) (XZ for Switchwire) which don’t have the gearing that the Z and E assemblies have. Don’t expect miracles though, filament variance is another factor that starts to be an issue as well when attempting small detail. | While 0.9 motor can be a bit quieter, from all accounts in an enclosed Voron the fans are likely to make most of the noise. So any noise benefit would be negligible. | Using the BOM spec MCU and Klipper with 0.9deg steppers will limit your theoretical travel speeds greatly. Just running 1/16 microstepping with 0.9deg XY motors and pressure advance with a 1.8deg stepper on the extruder is enough to easily overwhelm the board. | . ",
    "url": "/sourcing_faq.html#electronics",
    "relUrl": "/sourcing_faq.html#electronics"
  },"242": {
    "doc": "Sourcing / Buying FAQ",
    "title": "Hot Parts",
    "content": "Dragon standard flow or high flow? . The Dragon standard flow is capable of supporting nozzles up to 0.6mm. If planning on using 0.8mm nozzles or larger, the high flow is recommended. Does the Voron support the Super Volcano . No, its a case of shit design and metal fatigue waiting to happen. Back to Sourcing Information . ",
    "url": "/sourcing_faq.html#hot-parts",
    "relUrl": "/sourcing_faq.html#hot-parts"
  },"243": {
    "doc": "Spider Klipper Firmware",
    "title": "Spider Klipper Firmware",
    "content": "The firmware installation process for the Fysetc Spider MCU. Prerequisites . | Klipper must be installed onto the Raspberry Pi | It is desirable, though not strictly necessary to have a small sdcard available | Even if you intend to power your Pi with the Spider, during this flashing process, you will find it far more convenient to power your pi from some other source, such as a regular USB power supply | Voron Design recommends using USB to control the Spider, which simply requires connecting a USB-A to USB-C cable between the Spider and Pi. If you prefer a UART connection, please consult the fysetc documentation for the necessary configuration adjustments | . Build Firmware Image . | Login to the Raspberry Pi via ssh | Run the following: . sudo apt install make cd ~/klipper make clean make menuconfig . | In the menu structure there are a number of items to be selected. | Select “Enable extra low-level configuration options” | Set the micro-controller architecture is set to STMicroelectronics STM32 | Set the Processor model to STM32F446 | If your Spider was made after 2021/06/23, Set the Bootloader offset to 32KiB bootloader | If your Spider was made prior to 2021/06/23, Set the Bootloader offset to 64KiB bootloader | Set the Clock Reference to 12 MHz crystal | Set the Communication interface to USB (on PA11/PA12) (note: see Fysetc documentation if you intend to use UART rather than USB) | . | Once the configuration is selected, press q to exit, and “Yes” when asked to save the configuration. | Run the command make | The make command, when completed, creates a firmware file klipper.bin that is store in the folder /home/pi/klipper/out. | . There are multiple options for getting this firmware file installed onto your Spider. Firmware Installation . Option 1: DFU Firmware Install . | Requires a USB connection | Requires the installation of an extra jumper on the Spider | Does NOT require an sdcard | . | Power off the Spider | Install a jumper between BT0 and 3.3V | Connect Spider &amp; Pi via USB | Power on Spider | from your ssh session, run lsusb. and find the ID of the dfu device. | run make flash FLASH_DEVICE=1234:5678 replace 1234:5678 with the ID from the previous step | power off the Spider | remove the jumper from BT0/3.3V | Power up the Spider | you can confirm that the flash was successful, by running ls /dev/serial/by-id. if the flash was successful, this should now show a klipper device, similar to: | . (note: this test is not appicable if the firmware was compiled for UART, rather than USB) . Option 2: SDcard Firmware Install . | Works regardless of USB vs UART | Requires a microSD card | . | Use a tool such as cyberduck or winscp to copy the klipper.bin file off your pi, onto your computer. | Rename klipper.bin to firmware.bin . | . Important: If the file is not renamed, the bootloader will not be updated properly. | Ensure that your sdcard is formatted FAT32 (NOT EXFAT!) | copy firmware.bin onto the microSD card (if this card has previously been used for this process, remove all old firmware.bin and old.bin files) | power down the Spider | insert the microSD card | power on the Spider | after a few seconds, the Spider should be flashed | you can confirm that the flash was successful, by running ls /dev/serial/by-id. if the flash was successful, this should now show a klipper device, similar to: . | . (note: this test is not appicable if the firmware was compiled for UART, rather than USB) . Important: If the Spider is not powered with 12-24V, Klipper will be unable to communicate with the TMC drivers via UART and the Spider will automatically shut down. Back to Software Installation . ",
    "url": "/build/software/spider_klipper.html",
    "relUrl": "/build/software/spider_klipper.html"
  },"244": {
    "doc": "Community Submission Information",
    "title": "Community Submission Information",
    "content": "The following are guidelines for submitting documentation to the Voron Community documentation repo. This is to provide a consistent format for the resulting documentation and information. ",
    "url": "/community/support/submission_information.html",
    "relUrl": "/community/support/submission_information.html"
  },"245": {
    "doc": "Community Submission Information",
    "title": "All submissions",
    "content": "All submissions must include the following content in the header of any templated files to be rendered. Any submissions missing this header may be rejected. --- layout: default title: &lt;title&gt; nav_exclude: true --- . ",
    "url": "/community/support/submission_information.html#all-submissions",
    "relUrl": "/community/support/submission_information.html#all-submissions"
  },"246": {
    "doc": "Community Submission Information",
    "title": "Howto Guides, Troubleshooting, Alternate Electronics",
    "content": "Each submitter should create a directory for their user. The directory name should preferably be the same as their Discord username or Github username. Each guide should be named accordingly but include the markdown “.md” extension (e.g. ‘how_to_build_voron.md’). If there are images to be included, it is recommended to create an ‘images’ subdirectory for all of the images and link to those in the guide. Each pull request should also update the associated base index.md with a link to the guide itself and the creator’s username. ",
    "url": "/community/support/submission_information.html#howto-guides-troubleshooting-alternate-electronics",
    "relUrl": "/community/support/submission_information.html#howto-guides-troubleshooting-alternate-electronics"
  },"247": {
    "doc": "Community Submission Information",
    "title": "Macros",
    "content": "Each submitter should create a macro file in the ‘macros’ subdirectory. That file should preferably be the same as their Discord username or Github username. Each pull request should also update the associated index.md with a link to the macro and the creator’s username. ",
    "url": "/community/support/submission_information.html#macros",
    "relUrl": "/community/support/submission_information.html#macros"
  },"248": {
    "doc": "Community Submission Information",
    "title": "Pull Requests",
    "content": "How to create Github pull requests . ",
    "url": "/community/support/submission_information.html#pull-requests",
    "relUrl": "/community/support/submission_information.html#pull-requests"
  },"249": {
    "doc": "Voron Switchwire - Einsy Rambo Wiring",
    "title": "Voron Switchwire - Einsy Rambo Wiring",
    "content": " ",
    "url": "/build/electrical/sw_einsy_rambo_wiring.html",
    "relUrl": "/build/electrical/sw_einsy_rambo_wiring.html"
  },"250": {
    "doc": "Voron Switchwire - Einsy Rambo Wiring",
    "title": "MCU",
    "content": ". | Plug in stepper motors for X, Y, Z, and E in positions X, Y, Z, and E0 | Plug Hot End thermistor to thermistor T0 (PF0) | Plug Hot End heater in to extruder heater HEAT-0 (PE5) | Plug Hot End Fan in to FAN-1 (PH5) | Plug Part Cooling Fan in to FAN-2 (PH3) | Plug Bed Thermistor in to thermistor T2 (PF2) | Connect Bed Heater to Bed Output (PG5) | Connect X end stop to X-MIN (PB6) | Y Endstop is not used. | Connect inductive probe to Probe input (PB4), on pins +, -, and ‘s’ on the drawing. Pin 1 (T) is unused. | Wire +V and -V from DC power supply to both Power Input and Bed Power Input. | Connect USB Cable, but do not connect it yet to your Raspberry Pi | . ",
    "url": "/build/electrical/sw_einsy_rambo_wiring.html#mcu",
    "relUrl": "/build/electrical/sw_einsy_rambo_wiring.html#mcu"
  },"251": {
    "doc": "Voron Switchwire - SKR mini E3 V2.0 Wiring",
    "title": "Voron Switchwire - SKR mini E3 V2.0 Wiring",
    "content": " ",
    "url": "/build/electrical/sw_miniE3_v20_wiring.html",
    "relUrl": "/build/electrical/sw_miniE3_v20_wiring.html"
  },"252": {
    "doc": "Voron Switchwire - SKR mini E3 V2.0 Wiring",
    "title": "MCU",
    "content": ". | Plug in stepper motors for X, Y, Z, and E in positions Xm, Ym, ZAm, and Em | Plug Hot End thermistor to thermistor TH0 | Plug Hot End heater in to E0 | Plug Hot End Fan in to FAN1 | Plug Part Cooling Fan in to FAN0 | Plug Bed Thermistor in to THB | Connect Bed Heater to HB connector | Connect X end stop to X-STOP connector | Connect Y end stop to Y-STOP connector | Plug Probe GND and Signal (with BAT85 diode) in to Z-STOP | Connect Probe +V to VIN in terminal next to HB | Wire 24V and -V from DC power supply to VIN and GND terminals in corner | Connect USB Cable to your SKR mini E3, but do not connect it yet to your Raspberry Pi | . ",
    "url": "/build/electrical/sw_miniE3_v20_wiring.html#mcu",
    "relUrl": "/build/electrical/sw_miniE3_v20_wiring.html#mcu"
  },"253": {
    "doc": "Voron Switchwire - SKR mini E3 V2.0 Wiring",
    "title": "Mini E3 V2.0 Pinout",
    "content": "For reference, here is the pinout of the SKR mini E3 V2.0 . ",
    "url": "/build/electrical/sw_miniE3_v20_wiring.html#mini-e3-v20-pinout",
    "relUrl": "/build/electrical/sw_miniE3_v20_wiring.html#mini-e3-v20-pinout"
  },"254": {
    "doc": "Switchwire Screws Adjust",
    "title": "Voron Switchwire - Screws Adjust method",
    "content": "This process should be used when using the Prusa Nylock Mod with your Switchwire heated bed. This mod replaces 8 of the metallic 6mm spacers by nylon washers and M3 nylock nuts. ",
    "url": "/community/howto/doublet/switchwire_screws_adjust.html#voron-switchwire---screws-adjust-method",
    "relUrl": "/community/howto/doublet/switchwire_screws_adjust.html#voron-switchwire---screws-adjust-method"
  },"255": {
    "doc": "Switchwire Screws Adjust",
    "title": "Bill of Materials",
    "content": "8 Nylon washers: Amazon - not affiliate . 8 Nylock nuts: [Amazon - not affiliate](https://www.amazon.com/gp/product/B078T4TGY6/ref=ppx_yo_dt_b_asin_title_o08_s00?ie=UTF8&amp;psc=1 . ",
    "url": "/community/howto/doublet/switchwire_screws_adjust.html#bill-of-materials",
    "relUrl": "/community/howto/doublet/switchwire_screws_adjust.html#bill-of-materials"
  },"256": {
    "doc": "Switchwire Screws Adjust",
    "title": "Configuration update",
    "content": "In your printer.cfg, include the following section: . [screws_tilt_adjust] # SW Nylock Mod: Screw 1 uses the 6mm metallic spacer so its # height is considered the baseline. For tilt adjust using the # command SCREWS_TILT_CALCULATE, this has to be your Screw 1: # # ****************** # * S7 S8 S9 * # * * # Bed: * S5 S1 S6 * # * * # * S2 S3 S4 * # ****************** # screw1: 128,110 screw1_name: center screw2: 18,5 screw2_name: front_left screw3: 128,5 screw3_name: front_center screw4: 233,5 screw4_name: front_right screw5: 18,110 screw5_name: middle_left screw6: 233,110 screw6_name: middle_right screw7: 18,215 screw7_name: rear_left screw8: 128,215 screw8_name: rear_center screw9: 233,215 screw9_name: rear_right horizontal_move_z: 10. speed: 50. screw_thread: CCW-M3 . This sections tells Klipper the location of your screws. This measurements were taken from a Switchwire build using the LDO Y Carriage and Heated bed. In this method, Klipper uses one screw as baseline for calculating the adjustment for the remaining screws. In this configuration, the center screw is the baseline, so it has to be our screw1. This screw still uses the original 6mm metallic spacer from the original bill of materials. All the other 8 screws will use the M3 screws, washers and the nylock nut. Here is a quick video from Chris Riley showing show to assemble the screws, washers and the nylock nuts. ",
    "url": "/community/howto/doublet/switchwire_screws_adjust.html#configuration-update",
    "relUrl": "/community/howto/doublet/switchwire_screws_adjust.html#configuration-update"
  },"257": {
    "doc": "Switchwire Screws Adjust",
    "title": "Adjusting the screws",
    "content": "Once you saved and restarted your firmware, run the following commands on Fluidd or Mainsails console: . G8 SCREWS_TILT_CALCULATE . Klipper will move the toolhead over each of the 8 screws and calculate the amount of adjustment you need for each of the screws. Once it finishes it will give you an output similar to this one: . 08:35:49 // center (Base): X 128.0, Y 110.0, Z 2.02500 08:35:49 // front_left : X 18.0, Y 5.0, Z 2.11250 : Adjust -&gt; CCW 00:11 08:35:49 // front_center : X 128.0, Y 5.0, Z 2.02500 : Adjust -&gt; CW 00:00 08:35:49 // front_right : X 233.0, Y 5.0, Z 2.07500 : Adjust -&gt; CCW 00:06 08:35:49 // middle_left : X 18.0, Y 110.0, Z 2.08750 : Adjust -&gt; CCW 00:07 08:35:49 // middle_right : X 233.0, Y 110.0, Z 1.98750 : Adjust -&gt; CW 00:05 08:35:49 // rear_left : X 18.0, Y 215.0, Z 2.05000 : Adjust -&gt; CCW 00:03 08:35:49 // rear_center : X 128.0, Y 215.0, Z 1.40000 : Adjust -&gt; CW 01:15 08:35:49 // rear_right : X 233.0, Y 215.0, Z 2.05000 : Adjust -&gt; CCW 00:03 . CW refers to a clockwise turn and CCW refers to a counter-clockwise turn and the number after refers to the amount of “minutes” the screw needs to be turned, so for screw middle_right CW 00:05, the screw needs to be turned 5 minutes clockwise, while for screw middle_left CCW 00:07 the screw needs to be turned 7 minutes counter clockwise. According to Klipper documentation, you should be good when the amount to be adjusted is less or equal than 00:06 (6 minutes) - but you should aim for at least 00:02 (2 minutes). ",
    "url": "/community/howto/doublet/switchwire_screws_adjust.html#adjusting-the-screws",
    "relUrl": "/community/howto/doublet/switchwire_screws_adjust.html#adjusting-the-screws"
  },"258": {
    "doc": "Switchwire Screws Adjust",
    "title": "Switchwire Screws Adjust",
    "content": " ",
    "url": "/community/howto/doublet/switchwire_screws_adjust.html",
    "relUrl": "/community/howto/doublet/switchwire_screws_adjust.html"
  },"259": {
    "doc": "Twisted X Extrusion Diagnostics",
    "title": "Twisted X Extrusion Diagnostics",
    "content": "If a first layer is constantly high on one or both sides and is low on the other side or in the middle, the printer may have a twisted X extrusion. than can happen from the factory or be a result of a head crash. The sensor is correctly offset from the bed based on the Bed_Tilt or Quad_Gantry_Level, but the nozzle is ~25mm in front of the probe. As the head moves along the twisted X extrusion the toolhead is rotating about the X axis swinging the nozzle in an arc. Moving along Y should not change this rotation. This process helps to identify a twisted X extrusion without tearing down the printer. Note: The values used in this exmaple are for a printer with a 300x300 bed. If the printer being tested is larger or smaller, compensate accordingly. ",
    "url": "/community/troubleshooting/bryansj/twisted_x_extrusion_diagnostics.html",
    "relUrl": "/community/troubleshooting/bryansj/twisted_x_extrusion_diagnostics.html"
  },"260": {
    "doc": "Twisted X Extrusion Diagnostics",
    "title": "Prep",
    "content": "Perform the following homing procedure(s): . V1 . BED_MESH_CLEAR G28 BED_TILT G28 . V2 . BED_MESH_CLEAR G28 QUAD_GANTRY_LEVEL G28 . ",
    "url": "/community/troubleshooting/bryansj/twisted_x_extrusion_diagnostics.html#prep",
    "relUrl": "/community/troubleshooting/bryansj/twisted_x_extrusion_diagnostics.html#prep"
  },"261": {
    "doc": "Twisted X Extrusion Diagnostics",
    "title": "Measure",
    "content": "Measure Middle Center . | Move to center of bed | . G90 G0 X150 Y150 Z5 . | Find bed location by moving bed down 0.1mm at a time until it touches a piece of paper. | . G91 G0 Z-0.1 . | Retrieve current location | . M114 . | Record position | . Measure Remaining Points . | Middle Right (X250, Y150) | Middle Left (X50, Y150) | Front Center (X150, Y50) | Front Right (X250, Y50) | Front Left (X50, Y50) | Rear Center (X150, Y250) | Rear Right (X250, Y250) | Rear Left (X50, Y250) | . ",
    "url": "/community/troubleshooting/bryansj/twisted_x_extrusion_diagnostics.html#measure",
    "relUrl": "/community/troubleshooting/bryansj/twisted_x_extrusion_diagnostics.html#measure"
  },"262": {
    "doc": "Twisted X Extrusion Diagnostics",
    "title": "Calculations",
    "content": "For each Y position (Middle, Front, Rear), calculate the Z offset of each side with the following calculation: . Z Offset = (Recorded Z Value - Center Z Value) . Compute the 6 resulting values for (Middle, Front, Rear) and (Left, Right). ",
    "url": "/community/troubleshooting/bryansj/twisted_x_extrusion_diagnostics.html#calculations",
    "relUrl": "/community/troubleshooting/bryansj/twisted_x_extrusion_diagnostics.html#calculations"
  },"263": {
    "doc": "Twisted X Extrusion Diagnostics",
    "title": "Comparisons",
    "content": "If the Z offsets match for the same three X positions along the different Y values there is likely a twisted X extrusion - (or the bed is a perfect taco) . ",
    "url": "/community/troubleshooting/bryansj/twisted_x_extrusion_diagnostics.html#comparisons",
    "relUrl": "/community/troubleshooting/bryansj/twisted_x_extrusion_diagnostics.html#comparisons"
  },"264": {
    "doc": "Voron V0 - SKR mini E3 V1.2 Wiring",
    "title": "Voron V0.0 - SKR mini E3 V1.2 Wiring",
    "content": " ",
    "url": "/build/electrical/v0_miniE3_v12_wiring.html#voron-v00---skr-mini-e3-v12-wiring",
    "relUrl": "/build/electrical/v0_miniE3_v12_wiring.html#voron-v00---skr-mini-e3-v12-wiring"
  },"265": {
    "doc": "Voron V0 - SKR mini E3 V1.2 Wiring",
    "title": "MCU",
    "content": ". | Plug in stepper motors for X, Y, Z, and E in positions Xm, Ym, Zm, and Em | Plug Hot End thermistor to thermistor TH0 | Plug Hot End heater in to E0 | Plug Hot End Fan in to FAN0 | Plug Part Cooling Fan in to HB | Plug Bed Thermistor in to THB | Connect SSR pins to PT-DET connector . | Crydom SSR: SSR Input + =&gt; PC12, SSR Input =&gt; GND | MagicStudios / Knacro 1-Channel SSR: CH1 =&gt; PC12, DC- =&gt; GND, DC+ =&gt; NC | . | Connect X end stop to X-STOP connector | Connect Y end stop to Y-STOP connector | Connect Z end stop to Z-STOP connector | Wire 24V and -V from DC power supply to VIN and GND | Connect USB Cable to your SKR mini E3, but do not connect it yet to your Raspberry Pi | . Wiring for MagicStudios / Knacro 1-Channel SSR . The MagicStudios / Knacro SSR requires 3 wires instead of the 2 referenced above. ",
    "url": "/build/electrical/v0_miniE3_v12_wiring.html#mcu",
    "relUrl": "/build/electrical/v0_miniE3_v12_wiring.html#mcu"
  },"266": {
    "doc": "Voron V0 - SKR mini E3 V1.2 Wiring",
    "title": "Mini E3 V1.2 Pinout",
    "content": "For reference, here is the pinout of the SKR mini E3 V1.2 . ",
    "url": "/build/electrical/v0_miniE3_v12_wiring.html#mini-e3-v12-pinout",
    "relUrl": "/build/electrical/v0_miniE3_v12_wiring.html#mini-e3-v12-pinout"
  },"267": {
    "doc": "Voron V0 - SKR mini E3 V1.2 Wiring",
    "title": "Voron V0 - SKR mini E3 V1.2 Wiring",
    "content": " ",
    "url": "/build/electrical/v0_miniE3_v12_wiring.html",
    "relUrl": "/build/electrical/v0_miniE3_v12_wiring.html"
  },"268": {
    "doc": "Voron V0 - SKR mini E3 V2.0 Wiring",
    "title": "Voron V0.0 - SKR mini E3 V2.0 Wiring",
    "content": " ",
    "url": "/build/electrical/v0_miniE3_v20_wiring.html#voron-v00---skr-mini-e3-v20-wiring",
    "relUrl": "/build/electrical/v0_miniE3_v20_wiring.html#voron-v00---skr-mini-e3-v20-wiring"
  },"269": {
    "doc": "Voron V0 - SKR mini E3 V2.0 Wiring",
    "title": "MCU",
    "content": ". | Plug in stepper motors for X, Y, Z, and E in positions Xm, Ym, ZAm, and Em | Plug Hot End thermistor to thermistor TH0 | Plug Hot End heater in to E0 | Plug Hot End Fan in to FAN0 | Plug Part Cooling Fan in to HB | Plug Bed Thermistor in to THB | Connect SSR pins to PT-DET connector . | Crydom SSR: SSR Input + =&gt; PC12, SSR Input =&gt; GND | MagicStudios / Knacro 1-Channel SSR: CH1 =&gt; PC12, DC- =&gt; GND, DC+ =&gt; NC | . | Connect X end stop to X-STOP connector | Connect Y end stop to Y-STOP connector | Connect Z end stop to Z-STOP connector | Wire 24V and -V from DC power supply to VIN and GND | Connect USB Cable to your SKR mini E3, but do not connect it yet to your Raspberry Pi | . Wiring for MagicStudios / Knacro 1-Channel SSR . The MagicStudios / Knacro SSR requires 3 wires instead of the 2 referenced above. ",
    "url": "/build/electrical/v0_miniE3_v20_wiring.html#mcu",
    "relUrl": "/build/electrical/v0_miniE3_v20_wiring.html#mcu"
  },"270": {
    "doc": "Voron V0 - SKR mini E3 V2.0 Wiring",
    "title": "Mini E3 V2.0 Pinout",
    "content": "For reference, here is the pinout of the SKR mini E3 V2.0 . ",
    "url": "/build/electrical/v0_miniE3_v20_wiring.html#mini-e3-v20-pinout",
    "relUrl": "/build/electrical/v0_miniE3_v20_wiring.html#mini-e3-v20-pinout"
  },"271": {
    "doc": "Voron V0 - SKR mini E3 V2.0 Wiring",
    "title": "Voron V0 - SKR mini E3 V2.0 Wiring",
    "content": " ",
    "url": "/build/electrical/v0_miniE3_v20_wiring.html",
    "relUrl": "/build/electrical/v0_miniE3_v20_wiring.html"
  },"272": {
    "doc": "Voron V0.1 - SKR Pico v1.0 Wiring",
    "title": "Voron V0.1 - SKR Pico Wiring",
    "content": " ",
    "url": "/build/electrical/v0_skr_pico_wiring.html#voron-v01---skr-pico-wiring",
    "relUrl": "/build/electrical/v0_skr_pico_wiring.html#voron-v01---skr-pico-wiring"
  },"273": {
    "doc": "Voron V0.1 - SKR Pico v1.0 Wiring",
    "title": "MCU",
    "content": ". | Plug in stepper motors for X, Y, Z, and E in positions X, Y, Z1, and E | Plug Hot End thermistor to thermistor TH0 | Plug Hot End heater in to HE | Plug Hot End Fan in to FAN2 | Plug Part Cooling Fan in to FAN1 | Plug Bed Thermistor in to THB | Connect The DC bed to HB | Connect X end stop to X-STOP connector | Connect Y end stop to Y-STOP connector | Connect Z end stop to Z-STOP connector | Wire 24V and -V from DC power supply to POWER | Connect USB Cable to your SKR Pico, but do not connect it yet to your Raspberry Pi | . ",
    "url": "/build/electrical/v0_skr_pico_wiring.html#mcu",
    "relUrl": "/build/electrical/v0_skr_pico_wiring.html#mcu"
  },"274": {
    "doc": "Voron V0.1 - SKR Pico v1.0 Wiring",
    "title": "SKR Pico Pinout",
    "content": "For reference, here is the pinout of the SKR mini E3 V2.0 . ",
    "url": "/build/electrical/v0_skr_pico_wiring.html#skr-pico-pinout",
    "relUrl": "/build/electrical/v0_skr_pico_wiring.html#skr-pico-pinout"
  },"275": {
    "doc": "Voron V0.1 - SKR Pico v1.0 Wiring",
    "title": "Voron V0.1 - SKR Pico v1.0 Wiring",
    "content": " ",
    "url": "/build/electrical/v0_skr_pico_wiring.html",
    "relUrl": "/build/electrical/v0_skr_pico_wiring.html"
  },"276": {
    "doc": "Voron V1 - SKR 1.3 Wiring",
    "title": "Voron V1 - SKR 1.3 Wiring",
    "content": " ",
    "url": "/build/electrical/v1_skr13_wiring.html",
    "relUrl": "/build/electrical/v1_skr13_wiring.html"
  },"277": {
    "doc": "Voron V1 - SKR 1.3 Wiring",
    "title": "Initial Preparation",
    "content": ". | Reconfigure the on-board jumpers as shown. | . ",
    "url": "/build/electrical/v1_skr13_wiring.html#initial-preparation",
    "relUrl": "/build/electrical/v1_skr13_wiring.html#initial-preparation"
  },"278": {
    "doc": "Voron V1 - SKR 1.3 Wiring",
    "title": "MCU",
    "content": ". | Place stepper drivers for X, Y, Z, Z1, and E in positions X, Y, Z, E0, and E1 | Plug in stepper motors for X, Y, Z, Z1, and E in positions X, Y, Z, E0, and E1 (one of the Z connectors will be empty) | Plug Hot End thermistor to thermistor TH0 (P0.24) | Plug Hot End heater in to HE0 (P2.7) | Plug Hot End Fan + Controller Fan in to HE1 (P2.4) | Plug Bed Heater thermistor in to TB (P0.23) | Plug SSR Control for Heated Bed in to Servos (P2.0) | Plug Part Cooling Fan in to Fan (P2.3) | Connect X end stop to X-STOP connector (P1.28) | Connect Y end stop to Y-STOP connector (P1.26) | Connect Z end stop to Z-STOP connector (P1.25) | Plug Probe PWR and GND into FAN2 | Plug Probe Signal (with BAT85 diode) in to Probe (P0.10) | Plug in Exhaust Fan in to HB (P2.5) | Plug display wires in to EXP1 and EXP2 | Wire 24V and 0V from DC power supply to Power In | Connect USB Cable to your SKR 1.4, but do not connect it yet to your Raspberry Pi | . ",
    "url": "/build/electrical/v1_skr13_wiring.html#mcu",
    "relUrl": "/build/electrical/v1_skr13_wiring.html#mcu"
  },"279": {
    "doc": "Voron V1 - SKR 1.3 Wiring",
    "title": "SKR 1.3 Pinout",
    "content": "For reference, here is the pinout of the SKR 1.3 . ",
    "url": "/build/electrical/v1_skr13_wiring.html#skr-13-pinout",
    "relUrl": "/build/electrical/v1_skr13_wiring.html#skr-13-pinout"
  },"280": {
    "doc": "Voron V1 - SKR 1.4 Wiring",
    "title": "Voron V1 - SKR 1.4 Wiring",
    "content": " ",
    "url": "/build/electrical/v1_skr14_wiring.html",
    "relUrl": "/build/electrical/v1_skr14_wiring.html"
  },"281": {
    "doc": "Voron V1 - SKR 1.4 Wiring",
    "title": "Initial Preparation",
    "content": ". | If using the TMC2209 stepper drivers, use a small pair of wire cutters and remove the pin marked in purple. This is to disable sensorless homing which is not needed for the V2. | . | Reconfigure the on-board jumpers as shown. | . ",
    "url": "/build/electrical/v1_skr14_wiring.html#initial-preparation",
    "relUrl": "/build/electrical/v1_skr14_wiring.html#initial-preparation"
  },"282": {
    "doc": "Voron V1 - SKR 1.4 Wiring",
    "title": "MCU",
    "content": ". | Place stepper drivers for X, Y, Z, Z1, and E in positions X, Y, Z, E0, and E1 | Plug in stepper motors for X, Y, Z, Z1, and E in positions X, Y, Z, E0, and E1 (one of the Z connectors will be empty) | Plug Hot End thermistor to thermistor TH0 (P0.24) | Plug Hot End heater in to HE0 (P2.7) | Plug Hot End Fan + Controller Fan in to HE1 (P2.4) | Plug Bed Heater thermistor in to TB (P0.23) | Plug SSR Control for Heated Bed in to Neopixel (P1.24) | Plug Part Cooling Fan in to Fan (P2.3) | Connect X end stop to X-STOP connector (P1.28) | Connect Y end stop to Y-STOP connector (P1.26) | Connect Z end stop to Z-STOP connector (P1.25) | Plug Probe PWR and GND into FAN2 | Plug Probe Signal (with BAT85 diode) in to Probe (P0.10) | Plug in Exhaust Fan in to HB (P2.5) | Plug display wires in to EXP1 and EXP2 | Wire 24V and 0V from DC power supply to Power In | Connect USB Cable to your SKR 1.4, but do not connect it yet to your Raspberry Pi | . ",
    "url": "/build/electrical/v1_skr14_wiring.html#mcu",
    "relUrl": "/build/electrical/v1_skr14_wiring.html#mcu"
  },"283": {
    "doc": "Voron V1 - SKR 1.4 Wiring",
    "title": "SKR 1.4 Pinout",
    "content": "For reference, here is the pinout of the SKR 1.4 . ",
    "url": "/build/electrical/v1_skr14_wiring.html#skr-14-pinout",
    "relUrl": "/build/electrical/v1_skr14_wiring.html#skr-14-pinout"
  },"284": {
    "doc": "Voron V2 - FLY FLYF407ZG Wiring",
    "title": "Voron V2 - FLY FLYF407ZG Wiring",
    "content": " ",
    "url": "/build/electrical/v2_flyf407zg_wiring.html",
    "relUrl": "/build/electrical/v2_flyf407zg_wiring.html"
  },"285": {
    "doc": "Voron V2 - FLY FLYF407ZG Wiring",
    "title": "Initial Preparation",
    "content": ". | Remove all jumpers from the board. Install just the jumpers as shown. | . ",
    "url": "/build/electrical/v2_flyf407zg_wiring.html#initial-preparation",
    "relUrl": "/build/electrical/v2_flyf407zg_wiring.html#initial-preparation"
  },"286": {
    "doc": "Voron V2 - FLY FLYF407ZG Wiring",
    "title": "MCU Part 1",
    "content": ". | Place stepper drivers for X, Y, E, Z, Z1, Z2, and Z3 in positions X, Y, E0, E2, E3, E4, E5 | Plug in stepper motors for X, Y, E, Z, Z1, Z2, and Z3 in positions X, Y, E0, E2, E3, E4, E5 | Plug Hot End thermistor to thermistor T0 | Plug Hot End heater in to HEATER T0 | Plug Bed Heater thermistor in to T1 | Plug SSR Control for Heated Bed in to BED | Plug Probe PWR and GND into VCC | Plug Probe Signal (with BAT85 diode) in to SERVO0, pin 1 (toward USB) | Wire 24V and 0V from DC power supply to Power In | Connect USB Cable to your FLYF407ZG, but do not connect it yet to your Raspberry Pi | . ",
    "url": "/build/electrical/v2_flyf407zg_wiring.html#mcu-part-1",
    "relUrl": "/build/electrical/v2_flyf407zg_wiring.html#mcu-part-1"
  },"287": {
    "doc": "Voron V2 - FLY FLYF407ZG Wiring",
    "title": "MCU Part 2",
    "content": ". | Plug Hot End Fan in to FAN0 | Plug Part Cooling Fan in to FAN1 | Connect X end stop to X-MAX connector | Connect Y end stop to Y-MAX connector | Plug in Exhaust Fan in to FAN3 | Plug in Controller Fan 1 in to FAN4 | Plug in Controller Fan 2 in to FAN5 | Plug Z Endstop Switch into Z-MAX | Plug display wires in to EXP1 and EXP2 | . ",
    "url": "/build/electrical/v2_flyf407zg_wiring.html#mcu-part-2",
    "relUrl": "/build/electrical/v2_flyf407zg_wiring.html#mcu-part-2"
  },"288": {
    "doc": "Voron V2 - FLY FLYF407ZG Wiring",
    "title": "Pinout",
    "content": "For reference, here is the pinout of the FLYF407ZG . ",
    "url": "/build/electrical/v2_flyf407zg_wiring.html#pinout",
    "relUrl": "/build/electrical/v2_flyf407zg_wiring.html#pinout"
  },"289": {
    "doc": "Voron V2 / Trident - Monster8 Wiring",
    "title": "Voron V2 / Trident - MKS Makerbase Monster8 Wiring",
    "content": " ",
    "url": "/build/electrical/v2_monster8_wiring.html#voron-v2--trident---mks-makerbase-monster8-wiring",
    "relUrl": "/build/electrical/v2_monster8_wiring.html#voron-v2--trident---mks-makerbase-monster8-wiring"
  },"290": {
    "doc": "Voron V2 / Trident - Monster8 Wiring",
    "title": "Initial Preparation",
    "content": "Set jumpers as shown: . | Green – Add Jumper | Red – Remove Jumper . | Insert only the jumper in the Green and remove all other jumpers in the Red in order to use TMC2209 UART mode. | Remove all the jumpers of DIAG to avoid the influence of TMC2209 DIAG on the endstop. | Set the USB-PWR jumper to off to avoid the interaction between the USB 5V of raspberry pi and the DC-DC 5V of the motherboard. | Set the six jumpers to VIN to set the fan voltage to the system supply voltage. | Set the jumper to VIN to set the probe voltage to the system supply voltage. | Set the two jumpers into I2C to enable the I2C output pins. | Set the jumper to 5V to set the driver power. | . | . ",
    "url": "/build/electrical/v2_monster8_wiring.html#initial-preparation",
    "relUrl": "/build/electrical/v2_monster8_wiring.html#initial-preparation"
  },"291": {
    "doc": "Voron V2 / Trident - Monster8 Wiring",
    "title": "Wiring",
    "content": ". | Connect 24V and GND (V+ and V-) from the PSU to POWER (marking on rear of board) | Connect the B Motor (gantry left) to Driver0 | Connect the A Motor (gantry right) to Driver1 | Connect the Z motor (front-left) to Driver2-2 (leaving an empty connector between A and Z) | Connect the Z1 motor to Driver3 | Connect the Z2 motor to Driver4 | Connect the Z3 motor to Driver5 (v2 only) | Connect the extruder motor to Driver7 (leaving an empty connector between Z3 and E) | Connect the hot end heater to HE0 | Connect the bed SSR (DC Control Side) to H-BED (marking on rear of board) | Connect the hot end fan to FAN0 | Connect the part cooling fan to FAN1 | Connect the chamber exhaust fan to FAN2 | Connect the controller fans to HE1 | Connect the hot end thermistor to TH0 | Connect the bed thermistor to TB | Connect the X endstop to X+ | Connect the Y endstop to Y+ | Connect the Z endstop to Z- | Connect the probe with BAT85 to Z+ | if using a mini12864 display, connect to EXP1 &amp; EXP2, only after completing the steps shown below | . ",
    "url": "/build/electrical/v2_monster8_wiring.html#wiring",
    "relUrl": "/build/electrical/v2_monster8_wiring.html#wiring"
  },"292": {
    "doc": "Voron V2 / Trident - Monster8 Wiring",
    "title": "mini 12864 Display",
    "content": ". | See the mini12864 guide | . ",
    "url": "/build/electrical/v2_monster8_wiring.html#mini-12864-display",
    "relUrl": "/build/electrical/v2_monster8_wiring.html#mini-12864-display"
  },"293": {
    "doc": "Voron V2 / Trident - Monster8 Wiring",
    "title": "Other",
    "content": ". | full pinout, and other MKS Makerbase documentation is located here | Monster8 v1.0_003 pinout is located here | DIN rail mount for Monster8 is located here | Display bracket for MKS mini12864 V3.0 is located here | . ",
    "url": "/build/electrical/v2_monster8_wiring.html#other",
    "relUrl": "/build/electrical/v2_monster8_wiring.html#other"
  },"294": {
    "doc": "Voron V2 / Trident - Monster8 Wiring",
    "title": "Voron V2 / Trident - Monster8 Wiring",
    "content": " ",
    "url": "/build/electrical/v2_monster8_wiring.html",
    "relUrl": "/build/electrical/v2_monster8_wiring.html"
  },"295": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in SPI Mode) Wiring",
    "title": "Voron V2 - BTT Octopus Pro V1.0 (in SPI Mode) Wiring",
    "content": " ",
    "url": "/build/electrical/v2_octopus_pro_spi_wiring.html",
    "relUrl": "/build/electrical/v2_octopus_pro_spi_wiring.html"
  },"296": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in SPI Mode) Wiring",
    "title": "Initial Removal of Jumpers",
    "content": "Remove all the YELLOW on-board jumpers, located at the positions shown below. ",
    "url": "/build/electrical/v2_octopus_pro_spi_wiring.html#initial-removal-of-jumpers",
    "relUrl": "/build/electrical/v2_octopus_pro_spi_wiring.html#initial-removal-of-jumpers"
  },"297": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in SPI Mode) Wiring",
    "title": "Initial Preparation - Set Jumpers",
    "content": ". | Set the on-board jumpers, located at the positions as shown by the GREEN jumpers in the diagram below: . | Ensure the jumpers of “DIAG Jumper Block” are all removed to avoid the influence of TMC2209 DIAG on the endstop. | Ensure the removal of the USB 5V power supply jumper (“Power Selection Jumper”) which avoids the interaction between the USB 5V of Raspberry Pi and the DC-DC 5V of the motherboard. | . (FAN &amp; MOTOR POWER &amp; PROBE) Voltage Selection Headers . | In the diagram below, the COLORED BOXES indicate the headers with GREEN jumpers which are set for 24VDC. | In the diagram below, the BLUE box indicates the “fan voltage selection headers” with GREEN jumpers which are set for 24VDC. | IMPORTANT: If fans that use 5VDC or 12VDC are used, please take NOTE of these “fan voltage selection headers” and set the jumpers to the appropriate jumper position so that the correct fan voltage will be produced to run the 5VDC or 12VC fan. If the fan voltage selection jumper is set for 24VDC and a 5VDC/12VDC fan is connected to it, the Octopus Pro board will be damaged. | . | In the diagram below, the ORANGE box indicates the “probe voltage selection header” with a GREEN jumper which is set for 24VDC. If a PROBE voltage of 5VDC or 12VDC is desired, this jumper needs to be changed. If the voltage required by the PROBE device does not match the voltage selected by the “probe voltage selection Jumper” then the Octopus Pro board could be damaged. | In the diagram below, the ORANGE box made with a dash line indicates the PT100/PT1000 DIP switches. The default setting of all the DIP switches is set to OFF. This default setting is undefined. Therefore, before you install the Octopus Pro board, a valid setting must be chosen. Choose between a 2-wire or 4-wire arrangement: ([2-wire: 7, 11] or [4-wire: 4, 8]) . | In the diagram below, the YELLOW box indicates the motor power selection headers with GREEN jumpers which are set for 24VDC. Each stepper motor driver has this header so that each individual socket can be set to either 24VDC (Vin) or MOTOR_POWER voltage. | IMPORTANT: If the motor power selection headers DO NOT match the voltage being supplied to the stepper driver, the Octopus Pro board will be damaged along with the stepper motor driver. Set each of the motor power selection jumpers to the appropriate position so that the stepper driver voltage needed, matches the PSU voltage selected by the motor power selection jumper. For example, If the stepper motor driver voltage is set for 48VDC and the actual stepper motor driver runs at 12VDC, the Octopus Pro board and the stepper motor driver will be damaged. | . | IMPORTANT: Double check all the GREEN jumpers are set appropriately, especially the jumpers called out by the COLORED BOXES, BEFORE the power supply is connected. | . (FAN &amp; MOTOR POWER &amp; PROBE) Voltage Selection Diagram . ",
    "url": "/build/electrical/v2_octopus_pro_spi_wiring.html#initial-preparation---set-jumpers",
    "relUrl": "/build/electrical/v2_octopus_pro_spi_wiring.html#initial-preparation---set-jumpers"
  },"298": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in SPI Mode) Wiring",
    "title": "Stepper Motor Drivers",
    "content": ". | Inspect the stepper motor drivers for left over rosin, and clean with IPA, if needed | Install heat sinks on all stepper motor drivers | . ",
    "url": "/build/electrical/v2_octopus_pro_spi_wiring.html#stepper-motor-drivers",
    "relUrl": "/build/electrical/v2_octopus_pro_spi_wiring.html#stepper-motor-drivers"
  },"299": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in SPI Mode) Wiring",
    "title": "MCU Wiring for SPI Mode",
    "content": ". | Connect 24V and GND (V+ and V-) from the PSU to PWR and MOTOR_POWER | Connect stepper driver for the B Motor (gantry left) into position DRIVER0 | Plug in stepper motor for the B Motor (gantry left) into position MOTOR0 | Connect stepper driver for the A Motor (gantry right) into position DRIVER1 | Plug in stepper motor for the A Motor (gantry right) into position MOTOR1 | Connect stepper driver for the Z into positions DRIVER2 | Plug in stepper motor for the Z into positions MOTOR2_1 | Connect stepper driver for the Z1 into positions DRIVER3 | Plug in stepper motor for the Z1 into positions MOTOR3 | Connect stepper driver for the Z2 into positions DRIVER4 | Plug in stepper motor for the Z2 into positions MOTOR4 | Connect stepper driver for the Z3 into positions DRIVER5 | Plug in stepper motor for the Z3 into positions MOTOR5 | Connect stepper driver for the extruder motor into position DRIVER6 | Plug in stepper motor for the extruder motor into position MOTOR6 | Connect the hot end heater to HE0 (PA2) | Connect the bed SSR (DC Control Side) to HE1 (PA3) | Connect the part cooling fan to FAN0 (PA8) | Connect the hot end fan to FAN1 (PE5) | Connect the controller fans to FAN2 (PD12) | Connect the chamber exhaust fan to FAN3 (PD13) | Connect the hot end thermistor to T0 (PF4) | Connect the bed thermistor to TB (PF3) | Connect the X endstop to STOP_0 (PG6) | Connect the Y endstop to STOP_1 (PG9) | Connect the Z endstop to STOP_2 (PG10) | Connect the signal wire on the PROBE to STOP_7 (PG15) | Connect the V+ an 0V wires on the probe to PROBE | if using a mini12864 display, connect to EXP1 &amp; EXP2, only after completing the steps shown below | . ",
    "url": "/build/electrical/v2_octopus_pro_spi_wiring.html#mcu-wiring-for-spi-mode",
    "relUrl": "/build/electrical/v2_octopus_pro_spi_wiring.html#mcu-wiring-for-spi-mode"
  },"300": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in SPI Mode) Wiring",
    "title": "MCU Wiring Diagram for SPI Mode",
    "content": ". | Downloadable BTT Octopus Pro V1.0 Wiring Diagram in .jpg format is located here | . ",
    "url": "/build/electrical/v2_octopus_pro_spi_wiring.html#mcu-wiring-diagram-for-spi-mode",
    "relUrl": "/build/electrical/v2_octopus_pro_spi_wiring.html#mcu-wiring-diagram-for-spi-mode"
  },"301": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in SPI Mode) Wiring",
    "title": "Please Ensure the Heat Sinks are Installed Before Use",
    "content": "MCU in SPI Mode with Heat Sinks Installed . ",
    "url": "/build/electrical/v2_octopus_pro_spi_wiring.html#please-ensure-the-heat-sinks-are-installed-before-use",
    "relUrl": "/build/electrical/v2_octopus_pro_spi_wiring.html#please-ensure-the-heat-sinks-are-installed-before-use"
  },"302": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in SPI Mode) Wiring",
    "title": "Raspberry Pi",
    "content": "Power . | The Octopus Pro is capable of providing 5V power to run your Raspberry Pi. To take advantage of this feature, connect the wires as shown below, from the pi header of the Octopus Pro, to the GPIO header of the Pi. | Use at least 24awg wire for this connection. It may be tempting to use the common “Dupont” jumpers found in many electronics kits, however these jumpers typically use very small gauge wire, and will not carry enough current to run the Pi. | Tie all the DC 0V (typically labelled V-) lines for all the DC power supplies together to ensure that all power supplies have the same voltage reference. | . Connection Using Separate Power Supply . | To reduce the current load on the 5V rail of the Octopus Pro board, the Raspberry Pi can be powered by an independent power supply. | Use at least 24awg wire for V+ and GND connections to the Pi’s power supply | Tie all the DC 0V (typically labelled V-) lines for all the DC power supplies together to ensure that all power supplies have the same voltage reference. | . Control . | Voron Design recommends using USB to control the Octopus Pro, which simply requires connecting a USB-A to USB-C cable between the Octopus Pro and Pi. | The option also exists to use a UART connection from the Pi header, in place of the USB. If you prefer this option, please see the wiring diagram located above in Connection Using Separate Power Supply and use the instructions below on the Raspberry Pi. You will want to perform the instructions below after Mailsail/Fluidd is installed on the Raspberry Pi. | . ",
    "url": "/build/electrical/v2_octopus_pro_spi_wiring.html#raspberry-pi",
    "relUrl": "/build/electrical/v2_octopus_pro_spi_wiring.html#raspberry-pi"
  },"303": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in SPI Mode) Wiring",
    "title": "SSR Wiring",
    "content": ". | Wire colors will vary depending on your locale. | . | Downloadable SSR Wiring Diagram for the BTT Octopus Pro V1.0 board in SPI mode (.jpg format) is located here | . ",
    "url": "/build/electrical/v2_octopus_pro_spi_wiring.html#ssr-wiring",
    "relUrl": "/build/electrical/v2_octopus_pro_spi_wiring.html#ssr-wiring"
  },"304": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in SPI Mode) Wiring",
    "title": "mini 12864 Display",
    "content": ". | See the mini12864 guide | . ",
    "url": "/build/electrical/v2_octopus_pro_spi_wiring.html#mini-12864-display",
    "relUrl": "/build/electrical/v2_octopus_pro_spi_wiring.html#mini-12864-display"
  },"305": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in SPI Mode) Wiring",
    "title": "The Klipper Configuration file for BTT Octopus Pro V1.0 Board",
    "content": ". | The Klipper Configuration file from VoronDesign/Voron-2 GitHub Repo for BTT Octopus Pro 1.0 board is located here | . ",
    "url": "/build/electrical/v2_octopus_pro_spi_wiring.html#the-klipper-configuration-file-for-btt-octopus-pro-v10-board",
    "relUrl": "/build/electrical/v2_octopus_pro_spi_wiring.html#the-klipper-configuration-file-for-btt-octopus-pro-v10-board"
  },"306": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in SPI Mode) Wiring",
    "title": "Color PIN Diagram for BTT Octopus Pro V1.0",
    "content": "For reference, here is the Color PIN diagram for the BTT Octopus Pro V1.0 . | Downloadable BTT Octopus Pro V1.0 Color PIN diagram in .pdf format is located here . | Downloadable BTT Octopus Pro V1.0 Color PIN diagram in .jpg format is located here . | Downloadable and ZOOM capable web display for BTT Octopus Pro V1.0 Color PIN diagram is located here . | . ",
    "url": "/build/electrical/v2_octopus_pro_spi_wiring.html#color-pin-diagram-for-btt-octopus-pro-v10",
    "relUrl": "/build/electrical/v2_octopus_pro_spi_wiring.html#color-pin-diagram-for-btt-octopus-pro-v10"
  },"307": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in SPI Mode) Wiring",
    "title": "Original BTT Octopus Pro V1.0 Pinout",
    "content": "For reference, here is the original pinout of the BTT Octopus Pro V1.0 . | Note: If you see a conflict between the original pinout and any other source, please refer back to the BTT Octopus Pro V1.0 schematic diagram | . The BTT’s GitHub Repo for the Octopus Pro V1.0 board . | BTT’s documentation for Octopus Pro V1.0 board is located here . | Downloadable and ZOOM capable web display for BTT’s Octopus Pro V1.0 original pinout diagram is located here . | . ",
    "url": "/build/electrical/v2_octopus_pro_spi_wiring.html#original-btt-octopus-pro-v10-pinout",
    "relUrl": "/build/electrical/v2_octopus_pro_spi_wiring.html#original-btt-octopus-pro-v10-pinout"
  },"308": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in SPI Mode) Wiring",
    "title": "After I have Wired up the MCU Board, What Comes Next?  ",
    "content": ". Once the MCU board is wired up and wire management has been performed, the next step is to compile and install the Klipper Firmware, please see The Build ═► Software Installation . Once the MCU board has the Klipper Firmware Installed, the next step is to edit the Klipper Config file (Voron2_Octopus_Config.cfg) to ensure your Voron build matches your Klipper Config file, please see The Build ═► Software Configuration. Please use the Color PIN Diagrams, displayed above, as a source of information. After editing the Klipper Config file (Voron2_Octopus_Config.cfg), the next step is to check all the Motors and the mechanics of the Voron printer, please see The Build ═► Initial Startup Checks . ",
    "url": "/build/electrical/v2_octopus_pro_spi_wiring.html#after-i-have-wired-up-the-mcu-board-what-comes-next--",
    "relUrl": "/build/electrical/v2_octopus_pro_spi_wiring.html#after-i-have-wired-up-the-mcu-board-what-comes-next--"
  },"309": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in UART Mode) Wiring",
    "title": "Voron V2 - BTT Octopus Pro V1.0 (in UART Mode) Wiring",
    "content": " ",
    "url": "/build/electrical/v2_octopus_pro_uart_wiring.html",
    "relUrl": "/build/electrical/v2_octopus_pro_uart_wiring.html"
  },"310": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in UART Mode) Wiring",
    "title": "Initial Removal of Jumpers",
    "content": "Remove all the YELLOW on-board jumpers, located at the positions shown below. ",
    "url": "/build/electrical/v2_octopus_pro_uart_wiring.html#initial-removal-of-jumpers",
    "relUrl": "/build/electrical/v2_octopus_pro_uart_wiring.html#initial-removal-of-jumpers"
  },"311": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in UART Mode) Wiring",
    "title": "Initial Preparation - Set Jumpers",
    "content": ". | Set the on-board jumpers, located at the positions as shown by the GREEN jumpers in the diagram below: . | Ensure the jumpers of “DIAG Jumper Block” are all removed to avoid the influence of TMC2209 DIAG on the endstop. | Ensure the removal of the USB 5V power supply jumper (“Power Selection Jumper”) which avoids the interaction between the USB 5V of Raspberry Pi and the DC-DC 5V of the motherboard. | . (FAN &amp; MOTOR POWER &amp; PROBE) Voltage Selection Headers . | In the diagram below, the COLORED BOXES indicate the headers with GREEN jumpers which are set for 24VDC. | In the diagram below, the BLUE box indicates the “fan voltage selection headers” with GREEN jumpers which are set for 24VDC. | IMPORTANT: If fans that use 5VDC or 12VDC are used, please take NOTE of these “fan voltage selection headers” and set the jumpers to the appropriate jumper position so that the correct fan voltage will be produced to run the 5VDC or 12VC fan. If the fan voltage selection jumper is set for 24VDC and a 5VDC/12VDC fan is connected to it, the Octopus Pro board will be damaged. | . | In the diagram below, the ORANGE box indicates the “probe voltage selection header” with a GREEN jumper which is set for 24VDC. If a PROBE voltage of 5VDC or 12VDC is desired, this jumper needs to be changed. If the voltage required by the PROBE device does not match the voltage selected by the “probe voltage selection Jumper” then the Octopus Pro board could be damaged. | In the diagram below, the ORANGE box made with a dash line indicates the PT100/PT1000 DIP switches. The default setting of all the DIP switches is set to OFF. This default setting is undefined. Therefore, before you install the Octopus Pro board, a valid setting must be chosen. Choose between a 2-wire or 4-wire arrangement: ([2-wire: 7, 11] or [4-wire: 4, 8]) . | In the diagram below, the YELLOW box indicates the motor power selection headers with GREEN jumpers which are set for 24VDC. Each stepper motor driver has this header so that each individual socket can be set to either 24VDC (Vin) or MOTOR_POWER voltage. | IMPORTANT: If the motor power selection headers DO NOT match the voltage being supplied to the stepper driver, the Octopus Pro board will be damaged along with the stepper motor driver. Set each of the motor power selection jumpers to the appropriate position so that the stepper driver voltage needed, matches the PSU voltage selected by the motor power selection jumper. For example, If the stepper motor driver voltage is set for 48VDC and the actual stepper motor driver runs at 12VDC, the Octopus Pro board and the stepper motor driver will be damaged. | . | IMPORTANT: Double check all the GREEN jumpers are set appropriately, especially the jumpers called out by the COLORED BOXES, BEFORE the power supply is connected. | . (FAN &amp; MOTOR POWER &amp; PROBE) Voltage Selection Diagram . ",
    "url": "/build/electrical/v2_octopus_pro_uart_wiring.html#initial-preparation---set-jumpers",
    "relUrl": "/build/electrical/v2_octopus_pro_uart_wiring.html#initial-preparation---set-jumpers"
  },"312": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in UART Mode) Wiring",
    "title": "Stepper Motor Drivers",
    "content": ". | Inspect the stepper motor drivers for left over rosin, and clean with IPA, if needed | Install heat sinks on all stepper motor drivers | . ",
    "url": "/build/electrical/v2_octopus_pro_uart_wiring.html#stepper-motor-drivers",
    "relUrl": "/build/electrical/v2_octopus_pro_uart_wiring.html#stepper-motor-drivers"
  },"313": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in UART Mode) Wiring",
    "title": "MCU Wiring for UART Mode",
    "content": ". | Connect 24V and GND (V+ and V-) from the PSU to PWR and MOTOR_POWER | Connect stepper driver for the B Motor (gantry left) into position DRIVER0 | Plug in stepper motor for the B Motor (gantry left) into position MOTOR0 | Connect stepper driver for the A Motor (gantry right) into position DRIVER1 | Plug in stepper motor for the A Motor (gantry right) into position MOTOR1 | Connect stepper driver for the Z into positions DRIVER2 | Plug in stepper motor for the Z into positions MOTOR2_1 | Connect stepper driver for the Z1 into positions DRIVER3 | Plug in stepper motor for the Z1 into positions MOTOR3 | Connect stepper driver for the Z2 into positions DRIVER4 | Plug in stepper motor for the Z2 into positions MOTOR4 | Connect stepper driver for the Z3 into positions DRIVER5 | Plug in stepper motor for the Z3 into positions MOTOR5 | Connect stepper driver for the extruder motor into position DRIVER6 | Plug in stepper motor for the extruder motor into position MOTOR6 | Connect the hot end heater to HE0 (PA2) | Connect the bed SSR (DC Control Side) to HE1 (PA3) | Connect the part cooling fan to FAN0 (PA8) | Connect the hot end fan to FAN1 (PE5) | Connect the controller fans to FAN2 (PD12) | Connect the chamber exhaust fan to FAN3 (PD13) | Connect the hot end thermistor to T0 (PF4) | Connect the bed thermistor to TB (PF3) | Connect the X endstop to STOP_0 (PG6) | Connect the Y endstop to STOP_1 (PG9) | Connect the Z endstop to STOP_2 (PG10) | Connect the signal wire on the PROBE to STOP_7 (PG15) | Connect the V+ an 0V wires on the probe to PROBE | if using a mini12864 display, connect to EXP1 &amp; EXP2, only after completing the steps shown below | . ",
    "url": "/build/electrical/v2_octopus_pro_uart_wiring.html#mcu-wiring-for-uart-mode",
    "relUrl": "/build/electrical/v2_octopus_pro_uart_wiring.html#mcu-wiring-for-uart-mode"
  },"314": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in UART Mode) Wiring",
    "title": "MCU Wiring Diagram for UART Mode",
    "content": ". | Downloadable BTT Octopus Pro V1.0 Wiring Diagram in .jpg format is located here | . ",
    "url": "/build/electrical/v2_octopus_pro_uart_wiring.html#mcu-wiring-diagram-for-uart-mode",
    "relUrl": "/build/electrical/v2_octopus_pro_uart_wiring.html#mcu-wiring-diagram-for-uart-mode"
  },"315": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in UART Mode) Wiring",
    "title": "Please Ensure the Heat Sinks are Installed Before Use",
    "content": "MCU in UART Mode with Heat Sinks Installed . ",
    "url": "/build/electrical/v2_octopus_pro_uart_wiring.html#please-ensure-the-heat-sinks-are-installed-before-use",
    "relUrl": "/build/electrical/v2_octopus_pro_uart_wiring.html#please-ensure-the-heat-sinks-are-installed-before-use"
  },"316": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in UART Mode) Wiring",
    "title": "Raspberry Pi",
    "content": "Power . | The Octopus Pro is capable of providing 5V power to run your Raspberry Pi. To take advantage of this feature, connect the wires as shown below, from the pi header of the Octopus Pro, to the GPIO header of the Pi. | Use at least 24awg wire for this connection. It may be tempting to use the common “Dupont” jumpers found in many electronics kits, however these jumpers typically use very small gauge wire, and will not carry enough current to run the Pi. | Tie all the DC 0V (typically labelled V-) lines for all the DC power supplies together to ensure that all power supplies have the same voltage reference. | . Connection Using Separate Power Supply . | To reduce the current load on the 5V rail of the Octopus Pro board, the Raspberry Pi can be powered by an independent power supply. | Use at least 24awg wire for V+ and GND connections to the Pi’s power supply | Tie all the DC 0V (typically labelled V-) lines for all the DC power supplies together to ensure that all power supplies have the same voltage reference. | . Control . | Voron Design recommends using USB to control the Octopus Pro, which simply requires connecting a USB-A to USB-C cable between the Octopus Pro and Pi. | The option also exists to use a UART connection from the Pi header, in place of the USB. If you prefer this option, please see the wiring diagram located above in Connection Using Separate Power Supply and use the instructions below on the Raspberry Pi. You will want to perform the instructions below after Mailsail/Fluidd is installed on the Raspberry Pi. | . ",
    "url": "/build/electrical/v2_octopus_pro_uart_wiring.html#raspberry-pi",
    "relUrl": "/build/electrical/v2_octopus_pro_uart_wiring.html#raspberry-pi"
  },"317": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in UART Mode) Wiring",
    "title": "SSR Wiring",
    "content": ". | Wire colors will vary depending on your locale. | . | Downloadable SSR Wiring Diagram for the BTT Octopus Pro V1.0 board in UART mode (.jpg format) is located here | . ",
    "url": "/build/electrical/v2_octopus_pro_uart_wiring.html#ssr-wiring",
    "relUrl": "/build/electrical/v2_octopus_pro_uart_wiring.html#ssr-wiring"
  },"318": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in UART Mode) Wiring",
    "title": "mini 12864 Display",
    "content": ". | See the mini12864 guide | . ",
    "url": "/build/electrical/v2_octopus_pro_uart_wiring.html#mini-12864-display",
    "relUrl": "/build/electrical/v2_octopus_pro_uart_wiring.html#mini-12864-display"
  },"319": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in UART Mode) Wiring",
    "title": "The Klipper Configuration file for BTT Octopus Pro V1.0 Board",
    "content": ". | The Klipper Configuration file from VoronDesign/Voron-2 GitHub Repo for BTT Octopus Pro 1.0 board is located here | . ",
    "url": "/build/electrical/v2_octopus_pro_uart_wiring.html#the-klipper-configuration-file-for-btt-octopus-pro-v10-board",
    "relUrl": "/build/electrical/v2_octopus_pro_uart_wiring.html#the-klipper-configuration-file-for-btt-octopus-pro-v10-board"
  },"320": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in UART Mode) Wiring",
    "title": "Testing",
    "content": ". | Downloadable and ZOOM capable web display for BTT’s Octopus Pro V1.0 original pinout diagram: | . ",
    "url": "/build/electrical/v2_octopus_pro_uart_wiring.html#testing",
    "relUrl": "/build/electrical/v2_octopus_pro_uart_wiring.html#testing"
  },"321": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in UART Mode) Wiring",
    "title": "Color PIN Diagram for BTT Octopus Pro V1.0",
    "content": "For reference, here is the Color PIN diagram for the BTT Octopus Pro V1.0 . | Downloadable BTT Octopus Pro V1.0 Color PIN diagram in .pdf format is located here . | Downloadable BTT Octopus Pro V1.0 Color PIN diagram in .jpg format is located here . | Downloadable and ZOOM capable web display for BTT Octopus Pro V1.0 Color PIN diagram is located here . | . ",
    "url": "/build/electrical/v2_octopus_pro_uart_wiring.html#color-pin-diagram-for-btt-octopus-pro-v10",
    "relUrl": "/build/electrical/v2_octopus_pro_uart_wiring.html#color-pin-diagram-for-btt-octopus-pro-v10"
  },"322": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in UART Mode) Wiring",
    "title": "Original BTT Octopus Pro V1.0 Pinout",
    "content": "For reference, here is the original pinout of the BTT Octopus Pro V1.0 . | Note: If you see a conflict between the original pinout and any other source, please refer back to the BTT Octopus Pro V1.0 schematic diagram | . The BTT’s GitHub Repo for the Octopus Pro V1.0 board . | BTT’s documentation for Octopus Pro V1.0 board is located here . | Downloadable and ZOOM capable web display for BTT’s Octopus Pro V1.0 original pinout diagram is located here . | . ",
    "url": "/build/electrical/v2_octopus_pro_uart_wiring.html#original-btt-octopus-pro-v10-pinout",
    "relUrl": "/build/electrical/v2_octopus_pro_uart_wiring.html#original-btt-octopus-pro-v10-pinout"
  },"323": {
    "doc": "Voron V2 - BTT Octopus Pro V1.0 (in UART Mode) Wiring",
    "title": "After I have Wired up the MCU Board, What Comes Next?  ",
    "content": ". Once the MCU board is wired up and wire management has been performed, the next step is to compile and install the Klipper Firmware, please see The Build ═► Software Installation . Once the MCU board has the Klipper Firmware Installed, the next step is to edit the Klipper Config file (Voron2_Octopus_Config.cfg) to ensure your Voron build matches your Klipper Config file, please see The Build ═► Software Configuration. Please use the Color PIN Diagrams, displayed above, as a source of information. After editing the Klipper Config file (Voron2_Octopus_Config.cfg), the next step is to check all the Motors and the mechanics of the Voron printer, please see The Build ═► Initial Startup Checks . ",
    "url": "/build/electrical/v2_octopus_pro_uart_wiring.html#after-i-have-wired-up-the-mcu-board-what-comes-next--",
    "relUrl": "/build/electrical/v2_octopus_pro_uart_wiring.html#after-i-have-wired-up-the-mcu-board-what-comes-next--"
  },"324": {
    "doc": "Voron V2 / Trident - Octopus (Pro) Wiring",
    "title": "Voron V2 / Trident - BigTreeTech Octopus Wiring",
    "content": " ",
    "url": "/build/electrical/v2_octopus_wiring.html#voron-v2--trident---bigtreetech-octopus-wiring",
    "relUrl": "/build/electrical/v2_octopus_wiring.html#voron-v2--trident---bigtreetech-octopus-wiring"
  },"325": {
    "doc": "Voron V2 / Trident - Octopus (Pro) Wiring",
    "title": "Initial Preparation",
    "content": "Set jumpers as shown: . | Green – Add Jumper | Red – Remove Jumper . | Insert only the jumper in the Green and remove the other three jumpers in the Red in order to use TMC2209 UART mode. | Remove all the jumpers of DIAG to avoid the influence of TMC2209 DIAG on the endstop. | Remove the USB 5V power supply jumper to avoid the interaction between the USB 5V of raspberry pi and the DC-DC 5V of the motherboard. | Insert all the jumpers into V_FUSED to set the fan voltage to the system supply voltage. | Insert the jumper into V_FUSED to set the probe voltage to the system supply voltage. | . | . ",
    "url": "/build/electrical/v2_octopus_wiring.html#initial-preparation",
    "relUrl": "/build/electrical/v2_octopus_wiring.html#initial-preparation"
  },"326": {
    "doc": "Voron V2 / Trident - Octopus (Pro) Wiring",
    "title": "Wiring",
    "content": ". | Connect 24V and GND (V+ and V-) from the PSU to PWR and MOTOR_POWER | Connect the B Motor (gantry left) to MOTOR0 | Connect the A Motor (gantry right) to MOTOR1 | Connect the Z motor to MOTOR2_1 | Connect the Z1 motor to MOTOR3 | Connect the Z2 motor to MOTOR4 | Connect the Z3 motor to MOTOR5 (v2 only) | Connect the extruder motor to MOTOR6 | Connect the hot end heater to HE0 | Connect the bed SSR (DC Control Side) to HE1 | Connect the part cooling fan to FAN0 | Connect the hot end fan to FAN1 | Connect the controller fans to FAN2 | Connect the chamber exhaust fan to FAN3 | Connect the hot end thermistor to TE0 | Connect the bed thermistor to TB | Connect the X endstop to STOP_0 | Connect the Y endstop to STOP_1 | Connect the Z endstop to STOP_2 | Connect the signal wire on the probe to STOP_7 | Connect the V+ and 0V wires on the probe to PROBE | if using a mini12864 display, connect to EXP1 &amp; EXP2, only after completing the steps shown below | . ",
    "url": "/build/electrical/v2_octopus_wiring.html#wiring",
    "relUrl": "/build/electrical/v2_octopus_wiring.html#wiring"
  },"327": {
    "doc": "Voron V2 / Trident - Octopus (Pro) Wiring",
    "title": "SSR Wiring",
    "content": ". | Wire colors will vary depending on your location. | . ",
    "url": "/build/electrical/v2_octopus_wiring.html#ssr-wiring",
    "relUrl": "/build/electrical/v2_octopus_wiring.html#ssr-wiring"
  },"328": {
    "doc": "Voron V2 / Trident - Octopus (Pro) Wiring",
    "title": "mini 12864 Display",
    "content": ". | See the mini12864 guide | . ",
    "url": "/build/electrical/v2_octopus_wiring.html#mini-12864-display",
    "relUrl": "/build/electrical/v2_octopus_wiring.html#mini-12864-display"
  },"329": {
    "doc": "Voron V2 / Trident - Octopus (Pro) Wiring",
    "title": "Other",
    "content": ". | full pinout, and other BigTreeTech documentation is located at here | Octopus v1.1 pinout is located here | Octopus Pro v1.0 pinout is located here | . ",
    "url": "/build/electrical/v2_octopus_wiring.html#other",
    "relUrl": "/build/electrical/v2_octopus_wiring.html#other"
  },"330": {
    "doc": "Voron V2 / Trident - Octopus (Pro) Wiring",
    "title": "Voron V2 / Trident - Octopus (Pro) Wiring",
    "content": " ",
    "url": "/build/electrical/v2_octopus_wiring.html",
    "relUrl": "/build/electrical/v2_octopus_wiring.html"
  },"331": {
    "doc": "Voron V2 - SKR 1.3 Wiring",
    "title": "Voron V2 - SKR 1.3 Wiring",
    "content": " ",
    "url": "/build/electrical/v2_skr13_wiring.html",
    "relUrl": "/build/electrical/v2_skr13_wiring.html"
  },"332": {
    "doc": "Voron V2 - SKR 1.3 Wiring",
    "title": "Initial Preparation",
    "content": ". | Reconfigure the on-board jumpers as shown. | . ",
    "url": "/build/electrical/v2_skr13_wiring.html#initial-preparation",
    "relUrl": "/build/electrical/v2_skr13_wiring.html#initial-preparation"
  },"333": {
    "doc": "Voron V2 - SKR 1.3 Wiring",
    "title": "MCU X/Y/E, Hot End",
    "content": ". | Place stepper drivers for X, Y, and E in positions X, Y, and E0 | Plug in stepper motors for X, Y, and E in positions X, Y, and E0 | Plug Hot End thermistor to thermistor TH0 (P0.24) | Plug Hot End heater in to HE0 (P2.7) | Plug Hot End Fan in to HE1 (P2.4) | Plug Part Cooling Fan in to Fan (P2.3) | Connect X end stop to +X connector (P1.28) | Connect Y end stop to +Y connector (P1.26) | Wire 24V and 0V from DC power supply to Power In | Connect USB Cable to your SKR 1.3, but do not connect it yet to your Raspberry Pi | . ",
    "url": "/build/electrical/v2_skr13_wiring.html#mcu-xye-hot-end",
    "relUrl": "/build/electrical/v2_skr13_wiring.html#mcu-xye-hot-end"
  },"334": {
    "doc": "Voron V2 - SKR 1.3 Wiring",
    "title": "MCU Z, Bed, Exhaust Fan",
    "content": ". | Place stepper drivers for Z0, Z1, Z2, and Z3 into positions X, Y, Z, and E0 | Plug in stepper motors for Z0, Z1, Z2, and Z3 into positions X, Y, Z, and E0 | Plug Bed Heater Temp in to TB (P0.23) | Plug in Exhaust Fan in to HE0 (P2.7) | Plug in Controller Fan in to HE1 (P2.4) | Plug SSR Control for Heated Bed in to Fan (P2.3) | Plug Z Endstop Switch into -Z (P1.25) | Plug Probe GND and Signal (with BAT85 diode) in to +Z (P1.24 | Plug display wires in to EXP1 and EXP2 | Wire 24V and 0V from DC power supply to Power In | Connect USB Cable to your SKR 1.3, but do not connect it yet to your Raspberry Pi | . ",
    "url": "/build/electrical/v2_skr13_wiring.html#mcu-z-bed-exhaust-fan",
    "relUrl": "/build/electrical/v2_skr13_wiring.html#mcu-z-bed-exhaust-fan"
  },"335": {
    "doc": "Voron V2 - SKR 1.3 Wiring",
    "title": "SKR 1.3 Pinout",
    "content": "For reference, here is the pinout of the SKR 1.3 . ",
    "url": "/build/electrical/v2_skr13_wiring.html#skr-13-pinout",
    "relUrl": "/build/electrical/v2_skr13_wiring.html#skr-13-pinout"
  },"336": {
    "doc": "Voron V2 - SKR 1.4 Wiring",
    "title": "Voron V2 - SKR 1.4 Wiring",
    "content": " ",
    "url": "/build/electrical/v2_skr14_wiring.html",
    "relUrl": "/build/electrical/v2_skr14_wiring.html"
  },"337": {
    "doc": "Voron V2 - SKR 1.4 Wiring",
    "title": "Initial Preparation",
    "content": ". | If using the TMC2209 stepper drivers, use a small pair of wire cutters and remove the pin marked in purple. This is to disable sensorless homing which is not needed for the V2. | . | Reconfigure the on-board jumpers as shown. | . ",
    "url": "/build/electrical/v2_skr14_wiring.html#initial-preparation",
    "relUrl": "/build/electrical/v2_skr14_wiring.html#initial-preparation"
  },"338": {
    "doc": "Voron V2 - SKR 1.4 Wiring",
    "title": "MCU X/Y/E, Hot End",
    "content": ". | Place stepper drivers for X, Y, and E in positions X, Y, and E0 | Plug in stepper motors for X, Y, and E in positions X, Y, and E0 | Plug Hot End thermistor to thermistor TH0 (P0.24) | Plug Hot End heater in to HE0 (P2.7) | Plug Hot End Fan in to HE1 (P2.4) | Plug Part Cooling Fan in to Fan (P2.3) | Connect X end stop to +X connector (P1.28) | Connect Y end stop to +Y connector (P1.26) | Wire 24V and 0V from DC power supply to Power In | Connect USB Cable to your SKR 1.4, but do not connect it yet to your Raspberry Pi | . ",
    "url": "/build/electrical/v2_skr14_wiring.html#mcu-xye-hot-end",
    "relUrl": "/build/electrical/v2_skr14_wiring.html#mcu-xye-hot-end"
  },"339": {
    "doc": "Voron V2 - SKR 1.4 Wiring",
    "title": "MCU Z, Bed, Exhaust Fan",
    "content": ". | Place stepper drivers for Z0, Z1, Z2, and Z3 into positions X, Y, Z, and E0 | Plug in stepper motors for Z0, Z1, Z2, and Z3 into positions X, Y, Z, and E0 | Plug Bed Heater thermistor in to TB (P0.23) | Plug in Exhaust Fan in to HE0 (P2.7) | Plug in Controller Fan in to HE1 (P2.4) | Plug SSR Control for Heated Bed in to Fan (P2.3) | Plug Z Endstop Switch into -Z (P1.25) | Plug Probe PWR and GND into FAN2 | Plug Probe Signal (with BAT85 diode) in to Probe (P0.10) | Plug display wires in to EXP1 and EXP2 | Wire 24V and 0V from DC power supply to Power In | Connect USB Cable to your SKR 1.4, but do not connect it yet to your Raspberry Pi | . ",
    "url": "/build/electrical/v2_skr14_wiring.html#mcu-z-bed-exhaust-fan",
    "relUrl": "/build/electrical/v2_skr14_wiring.html#mcu-z-bed-exhaust-fan"
  },"340": {
    "doc": "Voron V2 - SKR 1.4 Wiring",
    "title": "SKR 1.4 Pinout",
    "content": "For reference, here is the pinout of the SKR 1.4 . ",
    "url": "/build/electrical/v2_skr14_wiring.html#skr-14-pinout",
    "relUrl": "/build/electrical/v2_skr14_wiring.html#skr-14-pinout"
  },"341": {
    "doc": "Voron V2 - Fysetc Spider Wiring",
    "title": "Voron V2 - Fysetc Spider Wiring",
    "content": " ",
    "url": "/build/electrical/v2_spider_wiring.html",
    "relUrl": "/build/electrical/v2_spider_wiring.html"
  },"342": {
    "doc": "Voron V2 - Fysetc Spider Wiring",
    "title": "Initial Preparation",
    "content": "Set jumpers as shown: . ",
    "url": "/build/electrical/v2_spider_wiring.html#initial-preparation",
    "relUrl": "/build/electrical/v2_spider_wiring.html#initial-preparation"
  },"343": {
    "doc": "Voron V2 - Fysetc Spider Wiring",
    "title": "Stepper Drivers",
    "content": ". | If using Fysetc drivers, inspect for left over rosin, and clean with IPA if need | Install step drivers in all slots except E4 | Install heat sinks on all step drivers | NOTE: if the board has been powered, ensure that motor power caps are fully drained before inserting stepper drivers: Temporarily connect a 100K resistor between VMOT+ and VMOT- to safely drain the capacitors See Fysetc Spider 3.3v issue | . ",
    "url": "/build/electrical/v2_spider_wiring.html#stepper-drivers",
    "relUrl": "/build/electrical/v2_spider_wiring.html#stepper-drivers"
  },"344": {
    "doc": "Voron V2 - Fysetc Spider Wiring",
    "title": "Wiring",
    "content": ". | Connect 24V Power from the PSU to PWR IN AND BED IN | Connect the B Motor (gantry left) to X-mot | Connect the A Motor (gantry right) to Y-Mot | Connect the Z, Z1, Z2, and Z3 Motors to Z-MOT, E1-MOT, E2-MOT and E3-MOT | Connect the extruder motor to E0-MOT | Connect the hot end heater to E0 OUT | Connect the chamber exhaust fan to E2 OUT | Connect the bed SSR (DC Control Side) to BED OUT | Connect the hot end fan to FAN0 | Connect the part cooling fan to FAN1 | Connect the controller fans to FAN2 | Connect the hot end thermistor to TE0 | Connect the bed thermistor to TB | Connect the X endstop to X+ | Connect the Y endstop to Y+ | Connect the probe to Z+ | Connect the Z endstop to Z- | if using a mini12864 display, connect to EXP1 &amp; EXP2, only after completing the steps shown below | . ",
    "url": "/build/electrical/v2_spider_wiring.html#wiring",
    "relUrl": "/build/electrical/v2_spider_wiring.html#wiring"
  },"345": {
    "doc": "Voron V2 - Fysetc Spider Wiring",
    "title": "Raspberry Pi",
    "content": "Power . | The spider is capable of providing 5V power to run your Raspberry pi. To take advantage of this feature, connect the wires shown below, from the pi header of the spider, to the GPIO header of the pi. | Use at least 24awg wire for this connection. It may be tempting to use the common “dupont” jumpers found in many electronics kits, however these jumpers typically use very small gauge wire, and will not carry enough current to run the pi. | . Control . | Voron Design recommends using USB to control the Spider, which simply requires connecting a USB-A to USB-C cable between the Spider and Pi. | The option does also exist to use a UART connection from the Pi header, in place of the USB. If you prefer this option, please see the fysetc documentation | . ",
    "url": "/build/electrical/v2_spider_wiring.html#raspberry-pi",
    "relUrl": "/build/electrical/v2_spider_wiring.html#raspberry-pi"
  },"346": {
    "doc": "Voron V2 - Fysetc Spider Wiring",
    "title": "mini 12864 Display",
    "content": ". | spider Rev 1.0 only: the EXP1 &amp; EXP2 header labels are swapped. Connect EXP1 (display) to EXP2(spider), and EXP2 (display) to EXP1 (spider). On the Spider 1.1 or later: connect EXP1-&gt;EXP1, and EXP2-&gt;EXP2 | Fysetc mini12864 only: components R1 and R4 must be removed from the board before connecting to the Spider. Note: new displays are shipping with this step already complete, but this should be verified before connecting | BTT mini12864 only remove components R1, and C6, and rotate the connectors 180 degrees | See the mini12864 guide | . ",
    "url": "/build/electrical/v2_spider_wiring.html#mini-12864-display",
    "relUrl": "/build/electrical/v2_spider_wiring.html#mini-12864-display"
  },"347": {
    "doc": "Voron V2 - Fysetc Spider Wiring",
    "title": "Other",
    "content": ". | full pinout, and other fysetc documentation is located at https://github.com/FYSETC/FYSETC-SPIDER | . ",
    "url": "/build/electrical/v2_spider_wiring.html#other",
    "relUrl": "/build/electrical/v2_spider_wiring.html#other"
  },"348": {
    "doc": "Video Guides",
    "title": "Video Guides",
    "content": "Nero’s video series on sourcing and assembling a Voron . Nero’s video series on 3D printing general helps and guides . ",
    "url": "/community/video_guides.html",
    "relUrl": "/community/video_guides.html"
  },"349": {
    "doc": "Voron RaspberryPi Bootscreens",
    "title": "Voron RaspberryPi Bootscreens",
    "content": ". Source PSD and images can be found in my GitHub repo! Feel free to reach out to me on discord Samwiseg0#4034. I will be happy to customize the serial number on any of the splash screens. ## How to remove the text and logo on raspbian buster . Start by removing all the default screens and also the Raspberry images. Also, disable all the bootup lines. Edit /boot/config.txt to remove the color test/rainbow screen. sudo nano /boot/config.txt . Add: . disable_splash=1 . Press ctrl+X, Y for save and Enter to return to the command line. Edit /boot/cmdline.txt . sudo nano /boot/cmdline.txt . Add the following to the end of the first line . logo.nologo consoleblank=0 loglevel=1 quiet vt.global_cursor_default=0 . | logo.nologo - Remove the Raspberry logo. | consoleblank=0 loglevel=1 quiet - Disable the commands and various bits of the kernel | vt.global_cursor_default=0- Removes the blinking cursor before the image loads. | . Press ctrl+X, Y for save and Enter to return to the command line. Remove the login prompt by running . sudo systemctl disable getty@tty3 . ",
    "url": "/community/howto/samwiseg0/voron_rpi_bootscreen.html",
    "relUrl": "/community/howto/samwiseg0/voron_rpi_bootscreen.html"
  },"350": {
    "doc": "Voron RaspberryPi Bootscreens",
    "title": "Add the new splash screen",
    "content": "To make the image readable install fbi. fbi is a frame-buffer image viewer. Install fbi . sudo apt install fbi . It will take a few seconds to install. After this we have to create a file by . sudo nano /etc/systemd/system/splashscreen.service . Add the following: . [Unit] Description=Splash screen DefaultDependencies=no After=local-fs.target [Service] ExecStart=/usr/bin/fbi -d /dev/fb0 --noverbose -a /home/pi/boot-image.png StandardInput=tty StandardOutput=tty [Install] WantedBy=sysinit.target . | -d/dev/fb0 - Tells fbi which image to display. | --noverbose - Suppresses fbi ‘status bar’ at the bottom. | -a - If the selected image is in the proper measurements then no editing is required if not then “-a” will act as editor. | StandardInput/StandardOutput - Allows fbi get access to tty. | DefaultDependencies - will override the systemd’s default behavior. | fbi will be loaded in the boot process when WantedBy is accessed, not before the file system (and hence image) are ready, through the After option. | . Place the image on the pi and name it boot-image.png. The image should live in the main home directory for the pi user. The full path for the image is /home/pi/boot-image.png You may use another name but you must change it in the systemd file above. You can find a basic guide on how to conect to the pi and transfer a file here. Note that when you connect to your pi via any of these methods the default location is /home/pi/. You should be able to just drop the file into the default directory after connecting. Enable the service by running . sudo systemctl enable splashscreen . Now reboot the Raspberry Pi and verify your image by . sudo reboot . fin. ",
    "url": "/community/howto/samwiseg0/voron_rpi_bootscreen.html#add-the-new-splash-screen",
    "relUrl": "/community/howto/samwiseg0/voron_rpi_bootscreen.html#add-the-new-splash-screen"
  },"351": {
    "doc": "Z Endstop Configuration",
    "title": "Tools Needed:",
    "content": ". | Piece of paper -or- 0.1 mm feeler gauge | Digital calipers (recommended) | . ",
    "url": "/community/howto/120decibell/z_endstop_configuration.html#tools-needed",
    "relUrl": "/community/howto/120decibell/z_endstop_configuration.html#tools-needed"
  },"352": {
    "doc": "Z Endstop Configuration",
    "title": "Pre-Flight",
    "content": "The Z endstop position value is defined in the printer.cfg file that Klipper reads. It is labeled as “position_endstop” and can be found in the [stepper_z] section of the configuration file. The default for the value for the endstop position is -0.5 as a safety factor to prevent crashing the nozzle into the print surface during initial operations. This value should be set to the exact distance that the z endstop triggers relative to the print surface. The Z endstop position must already be set in Klipper. The endstop much be functioning and trigger appropriately during all homing operations. The Z endstop calibration process can be performed with the printer (both hot end and build surface) either hot or cold. Klipper is written that the Z endstop calibration is performed cold. While it is calibrated using a 0.1 mm gap, it expects movement from thermal expansion to take up that space. ",
    "url": "/community/howto/120decibell/z_endstop_configuration.html#pre-flight",
    "relUrl": "/community/howto/120decibell/z_endstop_configuration.html#pre-flight"
  },"353": {
    "doc": "Z Endstop Configuration",
    "title": "Initial Calibration",
    "content": ". | Decide if the calibration will performed hot or cold. If the calibration is to be performed cold then ensure that the nozzle is completely clean of filament. If you are preforming the calibration hot, then ensure that the build surface has heat soaked and come up to a stable temperature and ceased thermal expansion using the PROBE_ACCURACY macro. | Run a G28 to wake up the motion systems. | Run a BED_MESH_CLEAR to clear out any bed mesh calibrations that may be loaded. Any offest in the bed mesh will affect the Z positioning. | Run a QUAD_GANTRY_LEVEL to level the gantry. | Run a G28 again to home and center the nozzle, and establish a new known Z value. The nozzle should be at the center of the bed or at whatever point is used for reference for the bed mesh. | Enter the calibration mode by running Z_ENDSTOP_CALIBRATE. The nozzle will to go to an estimated 20mm above the print surface based on the previous value of z_position_endstop. | To move the head, run TESTZ Z=(value in mm). A negative value (-) will move the nozzle closer to the print surface and a positive value (+) will move the nozzle away from the print surface. | Move the nozzle down until there is noticeable drag on the paper or feeler gauge but is not difficult to move. Adjustments of +/- 0.01mm are not unusual and are noticeable. Adjust until satisfied. | If calibrating hot: Remove the paper or feeler gauge and move the TESTZ down (-) an additional 0.1mm to compensate for the thickness of the paper or feeler gauge. | Complete the routine by running ACCEPT, then SAVE_CONFIG. | . ",
    "url": "/community/howto/120decibell/z_endstop_configuration.html#initial-calibration",
    "relUrl": "/community/howto/120decibell/z_endstop_configuration.html#initial-calibration"
  },"354": {
    "doc": "Z Endstop Configuration",
    "title": "Sanity Check",
    "content": ". | The MCUs will reset after a SAVE_CONFIG. Once the MCUs are online run a G28 to re-home. If the process is being done hot be sure to re-enable the heaters, otherwise turn on the bed heat to cause the thermal expansion and allow the bed to heat up sufficiently. | Run QUAD_GANTRY_LEVEL again in case your gantry slid down during the reset, and re-home again (G28) | Run ‘G90’ to switch to absolute mode. | Run ‘G0 Z1’ to move to 1 mm above the print surface. Visually verify that the distance is close to 1mm. | Run ‘G0 Z10’, then ‘G0 Z0.2’ to move the nozzle to 0.2 mm above the print surface. The paper or feeler gauge should move underneath with no resistance. If not, go back and check and/or re-run the calibration. | Run ‘G0 Z10’, then ‘G0 Z0.1’ to move the nozzle to 0.1 mm above the surface. The paper or feeler gauge should have the same drag as before. If not, go back and check and/or re-run the calibration. | Run ‘G0 Z10’, then ‘G0 Z0’ to move the nozzle to touch the surface. The paper or feeler gauge should not be able to go under. If not, go back and check and/or re-run the calibration. | . ",
    "url": "/community/howto/120decibell/z_endstop_configuration.html#sanity-check",
    "relUrl": "/community/howto/120decibell/z_endstop_configuration.html#sanity-check"
  },"355": {
    "doc": "Z Endstop Configuration",
    "title": "Verification",
    "content": ". | Preheat the bed as normal. | Load up and begin printing a Voron Cube, preferably with at least 2-3 rounds of a skirt. | Just before the first layer completes, cancel the print. | After sufficient cooling remove the skirt and first layer. | Measure the thickness of the first layer with both the part and the skirt. | Compare the measured thickness to the intended thickness of the first layer in the slicer. | . ",
    "url": "/community/howto/120decibell/z_endstop_configuration.html#verification",
    "relUrl": "/community/howto/120decibell/z_endstop_configuration.html#verification"
  },"356": {
    "doc": "Z Endstop Configuration",
    "title": "Printing",
    "content": "Be sure that the nozzle is clean when starting prints. If there is filament stuck to the nozzle during the G28 process, it will cause the Z height to be set incorrectly. A common procedure is to add code to the startup process to run the nozzle across a brush once the nozzle is hot to ensure it is clean, if you have equipped your printer with such things. ",
    "url": "/community/howto/120decibell/z_endstop_configuration.html#printing",
    "relUrl": "/community/howto/120decibell/z_endstop_configuration.html#printing"
  },"357": {
    "doc": "Z Endstop Configuration",
    "title": "Manual Adjustments",
    "content": "If desired, the position_endstop can be manually changed in the Klipper printer.cfg. During the SAVE_CONFIG the new value will be written at the bottom of the file on a line starting with #*#. If the value is changed manually, be sure to follow the process in the ‘Sanity Check’ to avoid crashing the nozzle. A larger (or less negative) value of postition_endstop will increase the calculated height of the endstop and make the nozzle closer to the bed. A smaller (or more negative) number will decrease the calculated height of the endstop and make the nozzle farther away. Change this value in very small increments. The initial Z offset can also be set using gcode or be adjusted using the front panel, typically during the skirt passes, to fine tune the first layer. Making the position_endstop value larger / more positive will move the nozzle closer to the print surface. Making the Z offset value larger / more positive will move the nozzle further from the print surface. ",
    "url": "/community/howto/120decibell/z_endstop_configuration.html#manual-adjustments",
    "relUrl": "/community/howto/120decibell/z_endstop_configuration.html#manual-adjustments"
  },"358": {
    "doc": "Z Endstop Configuration",
    "title": "Z Endstop Configuration",
    "content": "Setting the Z offset is a a key step in the process of configuring and tuning any FDM printer. Because of how the V2 is designed, this process may be slightly different than most other printers. The Z endstop sensor is a mechanical switch that is located at the back / top edge of the base plate. The switch activation is extended to an approximate level of the bed by an extension made of 5mm rod. This physical switch is used instead of the inductive probe for consistency regardless of temperature or variances in nozzle length. ",
    "url": "/community/howto/120decibell/z_endstop_configuration.html",
    "relUrl": "/community/howto/120decibell/z_endstop_configuration.html"
  }
}
